{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.module.ts","./src/app/components/about/about.component.ts","./src/app/components/about/about.component.html","./src/app/components/account/account.component.ts","./src/app/components/account/account.component.html","./src/app/components/add-item/add-item.component.ts","./src/app/components/add-item/add-item.component.html","./src/app/components/add-product/add-product.component.ts","./src/app/components/add-product/add-product.component.html","./src/app/components/admin-zone/admin-zone.component.ts","./src/app/components/admin-zone/admin-zone.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/layout/layout.component.ts","./src/app/components/layout/layout.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/modify-product/modify-product.component.ts","./src/app/components/modify-product/modify-product.component.html","./src/app/components/order-history/order-history.component.ts","./src/app/components/order-history/order-history.component.html","./src/app/components/place-order/place-order.component.ts","./src/app/components/place-order/place-order.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/components/review-order/review-order.component.ts","./src/app/components/review-order/review-order.component.html","./src/app/models/address.ts","./src/app/models/cart-item-model.ts","./src/app/models/cart-model.ts","./src/app/models/category-model.ts","./src/app/models/order-model.ts","./src/app/models/product-model.ts","./src/app/models/user-info.ts","./src/app/redux/actionType.ts","./src/app/redux/app-state.ts","./src/app/redux/middleware.ts","./src/app/redux/reducer.ts","./src/app/redux/store.ts","./src/app/services/admin-guard.service.ts","./src/app/services/admin.service.ts","./src/app/services/already-logged.service.ts","./src/app/services/login-guard.service.ts","./src/app/services/pdf-gen.service.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACa;AACS;AACZ;AACE;AACe;AACf;AACM;AACY;AACG;AACG;AACvB;AACM;;;AAG1E,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAC,MAAM,EAAC,SAAS,EAAC,6EAAa,EAAE,WAAW,EAAC,CAAC,+EAAiB,CAAC,EAAC;IACtE,EAAC,IAAI,EAAC,OAAO,EAAC,SAAS,EAAC,gFAAc,EAAE,WAAW,EAAC,CAAC,qFAAoB,CAAC,EAAC;IAC3E,EAAC,IAAI,EAAC,UAAU,EAAC,SAAS,EAAC,yFAAiB,EAAE,WAAW,EAAC,CAAC,qFAAoB,CAAC,EAAC;IACjF,EAAC,IAAI,EAAC,OAAO,EAAC,SAAS,EAAC,8FAAkB,EAAE,WAAW,EAAC,CAAC,+EAAiB,CAAC,EAAC;IAC5E,EAAC,IAAI,EAAC,OAAO,EAAE,SAAS,EAAC,iGAAmB,EAAE,WAAW,EAAC,CAAC,+EAAiB,CAAC,EAAC;IAC9E,EAAC,IAAI,EAAC,aAAa,EAAC,SAAS,EAAC,qGAAoB,EAAE,WAAW,EAAC,CAAC,+EAAiB,CAAC,EAAC;IACpF,EAAC,IAAI,EAAC,cAAc,EAAC,SAAS,EAAC,wGAAqB,EAAC,WAAW,EAAC,CAAC,+EAAiB,CAAC,EAAC;IACrF,EAAC,IAAI,EAAC,OAAO,EAAC,SAAS,EAAC,iFAAc,EAAC,WAAW,EAAC,CAAC,+EAAiB,CAAC,EAAC;IACvE,EAAC,IAAI,EAAC,SAAS,EAAC,SAAS,EAAC,uFAAgB,EAAC,WAAW,EAAC,CAAC,+EAAiB,CAAC,EAAC;IAC3E,EAAC,IAAI,EAAC,EAAE,EAAC,UAAU,EAAC,OAAO,EAAC,SAAS,EAAC,MAAM,EAAC;CAC9C,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AChCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACe;AACA;AACe;AACQ;AACrB;AACL;AACA;AACe;AACS;AACZ;AACE;AACA;AACV;AACA;AACF;AACE;AACO;AACA;AACC;AACiB;AACY;AACT;AACT;AACnB;AAC4B;AACG;AACvB;AACN;AACgC;AAClB;AACL;AACM;;;AAiDnE,MAAM,SAAS;;wFAAT,SAAS,cAFR,mFAAe;4IAEhB,SAAS,mBART;QACT,gFAAiB;QACjB,gFAAiB;QACjB,sFAAoB;KAErB,YAzBQ;YACP,uEAAa;YACb,oEAAgB;YAChB,4FAAuB;YACvB,2DAAW;YACX,0EAAgB;YAChB,mEAAmB;YACnB,oEAAa;YACb,gFAAkB;YAClB,uEAAc;YACd,oEAAa;YACb,yEAAe;YACf,yEAAe;YACf,yEAAe;YACf,qEAAgB;YAChB,+EAAiB,CAAC,OAAO,EAAE;YAC3B,yEAAe;YACf,iFAAmB;YACnB,2EAAmB;SAClB;mIASQ,SAAS,mBA1ClB,mFAAe;QACf,gFAAc;QACd,0FAAiB;QACjB,8EAAa;QACb,+FAAkB;QAClB,2GAAsB;QACtB,kGAAmB;QACnB,yFAAgB;QAChB,kGAAmB;QACnB,qGAAoB;QACpB,wGAAqB;QACrB,iFAAc;QACd,uFAAgB,aAGhB,uEAAa;QACb,oEAAgB;QAChB,4FAAuB;QACvB,2DAAW;QACX,0EAAgB;QAChB,mEAAmB;QACnB,oEAAa;QACb,gFAAkB;QAClB,uEAAc;QACd,oEAAa;QACb,yEAAe;QACf,yEAAe;QACf,yEAAe;QACf,qEAAgB,mFAEhB,yEAAe;QACf,iFAAmB;QACnB,2EAAmB;6FAUV,SAAS;cA5CrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,mFAAe;oBACf,gFAAc;oBACd,0FAAiB;oBACjB,8EAAa;oBACb,+FAAkB;oBAClB,2GAAsB;oBACtB,kGAAmB;oBACnB,yFAAgB;oBAChB,kGAAmB;oBACnB,qGAAoB;oBACpB,wGAAqB;oBACrB,iFAAc;oBACd,uFAAgB;iBACjB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,4FAAuB;oBACvB,2DAAW;oBACX,0EAAgB;oBAChB,mEAAmB;oBACnB,oEAAa;oBACb,gFAAkB;oBAClB,uEAAc;oBACd,oEAAa;oBACb,yEAAe;oBACf,yEAAe;oBACf,yEAAe;oBACf,qEAAgB;oBAChB,+EAAiB,CAAC,OAAO,EAAE;oBAC3B,yEAAe;oBACf,iFAAmB;oBACnB,2EAAmB;iBAClB;gBACH,SAAS,EAAE;oBACT,gFAAiB;oBACjB,gFAAiB;oBACjB,sFAAoB;iBAErB;gBACD,SAAS,EAAE,CAAC,mFAAe,CAAC;aAC7B;;;;;;;;;;;;;;ACjFD;AAAA;AAAA;AAAkD;;AAQ3C,MAAM,cAAc;IAEzB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4EALU,cAAc;8FAAd,cAAc;QCR3B,yEACI;QAAA,qEAAI;QAAA,6EAAkB;QAAA,4DAAK;QAC3B,qEAAI;QAAA,kKAAuG;QAAA,4DAAK;QACpH,4DAAM;QAEN,yEACI;QAAA,qEAAI;QAAA,mFAAwB;QAAA,4DAAK;QACjC,oEAAG;QAAA,8iCAIwB;QAAA,4DAAI;QACnC,4DAAM;QACN,0EACI;QAAA,uEACI;QAAA,sEAAI;QAAA,qFAAyB;QAAA,4DAAK;QAClC,sEAAI;QAAA,+EAAmB;QAAA,4DAAK;QAChC,4DAAM;QACV,4DAAM;;6FDVO,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACG;AACA;AACtB;AAGa;AACiF;;;;;;;;;;;ICH7H,sEACI;IAAA,yEACI;IAAA,yEACI;IADmB,uRAAS,WAAiB,IAAC;IAC9C,+EACJ;IADkC,sVAA+C;IAA7E,4DACJ;IAAA,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IALsB,0DAAuF;IAAvF,yKAAuF;;;;IAMnH,sEACI;IAAA,yEACI;IAAA,yEACI;IADmB,yRAAS,YAAiB,IAAC;IAC9C,+EACJ;IADkC,uVAA+C;IAA7E,4DACJ;IAAA,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IAQM,4EACI;IAAA,qFACJ;IAAA,4DAAY;;;IAKZ,4EACI;IAAA,gGACJ;IAAA,4DAAY;;;IACZ,4EACI;IAAA,mGACJ;IAAA,4DAAY;;;IACZ,4EACI;IAAA,2IACJ;IAAA,4DAAY;;;IACZ,4EACI;IAAA,iFACJ;IAAA,4DAAY;;AD3BjB,MAAM,gBAAgB;IAS3B,YAAoB,WAAuB,EAAS,OAAc;QAA9C,gBAAW,GAAX,WAAW,CAAY;QAAS,YAAO,GAAP,OAAO,CAAO;QAP3D,YAAO,GAAG,oEAAO,CAAC;QAClB,aAAQ,GAAa,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;QAClE,iBAAY,GAAQ,IAAI,CAAC;QAEzB,gBAAW,GAAG,IAAI,kEAAS,EAAE,CAAC;QAuEvC,wBAAmB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;YACxC,yDAAU,CAAC,QAAQ;YACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;YACvB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;YACxB,yDAAU,CAAC,OAAO,CAAC,sEAAsE,CAAC;SAC3F,CAAC,CAAC;QAEH,2BAAsB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;YAC3C,yDAAU,CAAC,QAAQ;SACpB,CAAC,CAAC;QAGH,YAAO,GAAG,IAAI,mBAAmB,EAAE,CAAC;IAhFoC,CAAC;IAEvE,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,yDAAK,CAAC,SAAS,CAAC,GAAG,EAAE;YACtC,IAAI,CAAC,QAAQ,GAAG,yDAAK,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC;QACxC,CAAC,CAAC;QACF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC;IACnC,CAAC;IAGM,iBAAiB;QACtB,IAAG,CAAC,IAAI,CAAC,cAAc,EAAE,EAAC;YACxB,OAAO;SACR;QACD,IAAG,CAAC,IAAI,CAAC,OAAO,EAAE,EAAC;YACjB,OAAO;SACR;QACD,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,IAAI,CAAC,WAAW,EAAC,IAAI,CAAC,CAAC;QAC9D,kDAAI,CAAC,IAAI,CACP,mBAAmB,EACnB,+CAA+C,EAC/C,SAAS,CACV;QACD,YAAY,CAAC,KAAK,EAAE,CAAC;QACrB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;QACjC,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;IAEM,OAAO;QACZ,OAAO,IAAI,CAAC,mBAAmB,CAAC,KAAK;IACvC,CAAC;IACE,wCAAwC;IACtC,cAAc;QACjB,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC;QAC7C,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;QAC9B,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,QAAQ,EAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,GAAE;YAC/D,OAAO,MAAM;QACf,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,GAAE;YACZ,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,gBAAgB;gBACvB,IAAI,EAAE,OAAO;aACd,CAAC;YACF,OAAO,KAAK,CAAC;QACf,CAAC,CAAC;IACJ,CAAC;IACD,gCAAgC;IAChC,eAAe,CAAC,KAAe;QAC7B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAClC,kDAAI,CAAC,IAAI,CAAC;YACR,KAAK,EAAE,SAAS;YAChB,IAAI,EAAE,qCAAqC;YAC3C,IAAI,EAAE,UAAU;YAChB,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,wBAAwB;SAC5C,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,KAAK,EAAE;gBAChB,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,EAAC,IAAI,CAAC,YAAY,CAAC;gBACvE,kDAAI,CAAC,IAAI,CACP,wBAAwB,EACxB,uBAAuB,EACvB,SAAS,CACV;aACF;QACH,CAAC,CAAC;IACN,CAAC;;gFA3EY,gBAAgB;gGAAhB,gBAAgB;QChB7B,qEAAI;QAAA,qEAAU;QAAA,4DAAK;QAGnB,qEAAI;QAAA,6FAAkC;QAAA,4DAAK;QAC3C,4GACI;QAMJ,4GACI;QAMJ,gEAAI;QAAA,gEACJ;QAAA,yEACI;QAAA,0EACI;QADE,4IAAY,uBAAmB,IAAC;QAClC,sEAAI;QAAA,2EAAe;QAAA,4DAAK;QACxB,qFACI;QAAA,6EAAW;QAAA,wEAAY;QAAA,4DAAY;QACnC,4EACA;QADqK,0LAAyB;QAA9L,4DACA;QAAA,0HACI;QAER,4DAAiB;QACjB,qFACI;QAAA,6EAAW;QAAA,wEAAY;QAAA,4DAAY;QACnC,4EACA;QAD4K,mMAAkC;QAA9M,4DACA;QAAA,0HACI;QAEJ,0HACI;QAEJ,0HACI;QAEJ,0HACI;QAER,4DAAiB;QACjB,iEACA;QAAA,6EAAiC;QAAA,kEAAM;QAAA,4DAAS;QACpD,4DAAO;QACP,iEACJ;QAAA,4DAAM;;QA7CD,0DAAgD;QAAhD,8GAAgD;QAOhD,0DAAgD;QAAhD,8GAAgD;QAa4B,2DAAsC;QAAtC,mGAAsC;QAChG,0DAAmD;QAAnD,iHAAmD;QAMI,0DAAmC;QAAnC,gGAAmC;QAC1F,0DAAiD;QAAjD,+GAAiD;QAGjD,0DAAiD;QAAjD,+GAAiD;QAGjD,0DAA+C;QAA/C,6GAA+C;QAG/C,0DAAgD;QAAhD,8GAAgD;;6FDzB1D,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;AA6FM,MAAM,mBAAmB;IAC9B,YAAY,CAAC,OAA2B,EAAE,IAAwC;QAChF,MAAM,WAAW,GAAG,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC;QAC3C,OAAO,CAAC,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,IAAI,WAAW,CAAC,CAAC,CAAC;IAC7F,CAAC;CACF;;;;;;;;;;;;;AEjHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEC;AACwB;AAEpB;;;;;;;;;AAOxD,MAAM,gBAAgB;IAK3B,YAAoB,YAAwB,EAAkC,IAAS;QAAnE,iBAAY,GAAZ,YAAY,CAAY;QAAkC,SAAI,GAAJ,IAAI,CAAK;QAHhF,YAAO,GAAG,IAAI,4EAAa,EAAE,CAAC;QAC9B,gBAAW,GAAG,CAAC,CAAC;QA0BvB,sBAAiB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAC;YACrC,yDAAU,CAAC,QAAQ;SACpB,CAAC;QAGD,YAAO,GAAG,IAAI,mBAAmB,EAAE,CAAC;IA7BsD,CAAC;IAE5F,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;IAC1B,CAAC;IACD,WAAW,CAAC,KAAY;QACtB,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,QAAQ,CAAC;QACnC,OAAO,QAAQ,CAAC;IAClB,CAAC;IAGD,SAAS;QACN,IAAG;YACA,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAClF;QAAA,OAAM,GAAG,EAAC;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC;SACzB;IACL,CAAC;;gFAvBU,gBAAgB,8MAK2B,wEAAe;gGAL1D,gBAAgB;QCZ7B,0EACI;QADmB,4IAAY,eAAW,IAAC;QAC3C,8EAA6B;QAAA,kEAAO;QAAA,4DAAW;QAC/C,+EAA0C;QAAA,iEAAM;QAAA,4DAAY;QAC5D,gEACA;QAAA,uEAAM;QAAA,uDAAuB;QAAA,4DAAO;QACpC,gEACA;QAAA,gFAA6I;QAAnD,iMAA4B;QAAU,4DAAa;QAC7I,iEACA;QAAA,2EAAqC;QAAA,wDAAoF;QAAA,4DAAO;QAChI,iEAAI;QAAA,iEACJ;QAAA,6EAA2D;QAAA,oEAAQ;QAAA,4DAAS;QAChF,4DAAO;;QAPG,0DAAuB;QAAvB,wFAAuB;QAE6D,0DAA4B;QAA5B,uFAA4B;QAEjF,0DAAoF;QAApF,2JAAoF;QAExF,0DAAyB;QAAzB,kFAAyB;;6FDEjD,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;sBAM+C,oDAAM;uBAAE,wEAAe;;AAkC/D,MAAM,mBAAmB;IAC9B,YAAY,CAAC,OAA2B,EAAE,IAAwC;QAChF,MAAM,WAAW,GAAG,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC;QAC3C,OAAO,CAAC,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,IAAI,WAAW,CAAC,CAAC,CAAC;IAC7F,CAAC;CACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AExDiD;AACiC;AAEvB;;;;;;;;;;;;;ICH5D,yEACI;IAAA,oEACJ;IAAA,4DAAM;;;IASM,4EACI;IAAA,mFACJ;IAAA,4DAAY;;;IACZ,4EACI;IAAA,6EACJ;IAAA,4DAAY;;;IACZ,4EACI;IAAA,4FACJ;IAAA,4DAAY;;;IAOZ,4EACI;IAAA,oFACJ;IAAA,4DAAY;;;IACZ,4EACI;IAAA,uGACJ;IAAA,4DAAY;;;IACZ,4EACI;IAAA,oGACJ;IAAA,4DAAY;;;IAOZ,4EACI;IAAA,8EACJ;IAAA,4DAAY;;;IACZ,4EACI;IAAA,0EACJ;IAAA,4DAAY;;;IAOR,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF8C,mFAAsB;IAC7E,0DACJ;IADI,qGACJ;;;IAEJ,4EACI;IAAA,iFACJ;IAAA,4DAAY;;;;IAxDxB,0EAEI;IAFuB,yTAAkB;IAEzC,wEAAqB;IAAA,yEAAc;IAAA,4DAAK;IACxC,wFACI;IAAA,2EAAW;IAAA,+EAAmB;IAAA,4DAAW;IACzC,oFACI;IAAA,4EAAW;IAAA,uEAAY;IAAA,4DAAY;IACnC,2EACA;IAD4I,oWAAoC;IAAhL,4DACA;IAAA,oIACI;IAEJ,oIACI;IAEJ,oIACI;IAER,4DAAiB;IACjB,iEACA;IAAA,4EAAU;IAAA,uEAAW;IAAA,4DAAW;IAChC,qFACI;IAAA,6EAAW;IAAA,uEAAW;IAAA,4DAAY;IAClC,6EACA;IAD6K,4WAA2C;IAAxN,4DACA;IAAA,oIACI;IAEJ,oIACI;IAEJ,oIACI;IAER,4DAAiB;IACjB,iEACA;IAAA,4EAAU;IAAA,wEAAY;IAAA,4DAAW;IACjC,qFACI;IAAA,6EAAW;IAAA,iEAAK;IAAA,4DAAY;IAC5B,6EACA;IADsI,sWAAqC;IAA3K,4DACA;IAAA,oIACI;IAEJ,oIACI;IAER,4DAAiB;IACjB,iEACA;IAAA,sFACI;IAAA,6EAAW;IAAA,2EAAe;IAAA,4DAAY;IACtC,kFACI;IADQ,2VAAuB;IAC/B,kFAAqB;IAAA,2EAAe;IAAA,4DAAa;IACjD,uIACI;IAER,4DAAa;IACb,oIACI;IAER,4DAAiB;IACjB,iEACA;IAAA,6EAAW;IAAA,wEAAY;IAAA,4DAAY;IACnC,iEACA;IAAA,8EAAmB;IAAA,6EAA4H;IAA/F,4VAA+C;IAA5E,4DAA4H;IAAA,4DAAS;IAE5J,4DAAqB;IAGrB,sFACI;IAAA,8EAAoC;IAAA,kEAAM;IAAA,4DAAS;IACnD,8EAA2E;IAAA,uEAAW;IAAA,4DAAS;IACnG,4DAAqB;IAEzB,4DAAO;;;IAhEoD,0DAAsC;IAAtC,sGAAsC;IAC1E,0DAAkD;IAAlD,mHAAkD;IAGlD,0DAAmD;IAAnD,oHAAmD;IAGnD,0DAAoD;IAApD,qHAAoD;IAQT,0DAAsC;IAAtC,sGAAsC;IACjF,0DAAmD;IAAnD,oHAAmD;IAGnD,0DAAoD;IAApD,qHAAoD;IAGpD,0DAAoD;IAApD,qHAAoD;IAQb,0DAAgC;IAAhC,gGAAgC;IACvE,0DAA6C;IAA7C,8GAA6C;IAG7C,0DAAwC;IAAxC,yGAAwC;IAOvC,0DAAuB;IAAvB,qFAAuB;IAEnB,0DAA8C;IAA9C,iGAA8C;IAInD,0DAAgD;IAAhD,iHAAgD;IAc5C,2DAAyB;IAAzB,kFAAyB;;AD5D7C,MAAM,mBAAmB;IAS9B,YAAoB,aAA0B;QAA1B,kBAAa,GAAb,aAAa,CAAa;QAPvC,eAAU,GAAG,IAAI,yEAAY,EAAE,CAAC;QAChC,UAAK,GAAG,KAAK,CAAC;QACd,gBAAW,GAAG,EAAE,CAAC;QAEjB,iBAAY,GAAS,IAAI,CAAC;QAkCjC,2BAAsB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAC;YAC1C,yDAAU,CAAC,QAAQ;YACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;YACvB,yDAAU,CAAC,OAAO,CAAC,aAAa,CAAC;SAClC,CAAC;QAEF,2BAAsB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAC;YAC1C,yDAAU,CAAC,QAAQ;YACnB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;YACxB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;SACzB,CAAC;QAEF,qBAAgB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAC;YACpC,yDAAU,CAAC,QAAQ;YACnB,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC;SAClB,CAAC;QACF,wBAAmB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAC;YACvC,yDAAU,CAAC,QAAQ;SACpB,CAAC;QAGD,YAAO,GAAG,IAAI,mBAAmB,EAAE,CAAC;IApDa,CAAC;IAE7C,QAAQ;;YACZ,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YACpB,CAAC,EAAE,IAAI,CAAC,CAAC;YACT,IAAI,CAAC,UAAU,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC;QAC7D,CAAC;KAAA;IAED,OAAO;QACL,OAAO,IAAI,CAAC,sBAAsB,CAAC,KAAK;eACrC,IAAI,CAAC,gBAAgB,CAAC,KAAK;eAC5B,IAAI,CAAC,sBAAsB,CAAC,KAAK;eACjC,IAAI,CAAC,mBAAmB,CAAC,KAAK;IAClC,CAAC;IAED,eAAe,CAAC,KAAe;QAC7B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtC,CAAC;IAEC,GAAG;QACD,IAAG;YACC,IAAG,CAAC,IAAI,CAAC,OAAO,EAAE,EAAC;gBACjB,OAAO;aACR;YACH,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,EAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAClE;QAAA,OAAM,GAAG,EAAC;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC;SACzB;IACH,CAAC;;sFAtCU,mBAAmB;mGAAnB,mBAAmB;QCXhC,+GACI;QAEJ,mHAEI;;QALiB,4EAAc;QAGW,0DAAkB;QAAlB,2EAAkB;;6FDQnD,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;AAiEO,MAAM,mBAAmB;IAC9B,YAAY,CAAC,OAA2B,EAAE,IAAwC;QAChF,MAAM,WAAW,GAAG,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC;QAC3C,OAAO,CAAC,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,IAAI,WAAW,CAAC,CAAC,CAAC;IAC7F,CAAC;CACH;;;;;;;;;;;;;AEhFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4D;AAEhB;AAIwC;AACD;AAE1B;AAC1B;AAC4C;AACvB;;;;;;;;;;;;ICZpD,yEACI;IAAA,oEACJ;IAAA,4DAAM;;;IAgBc,4EACI;IAAA,6EACJ;IAAA,4DAAY;;;IACZ,4EACI;IAAA,4FACJ;IAAA,4DAAY;;;IACZ,4EACI;IAAA,6FACJ;IAAA,4DAAY;;;;IAW5B,0EACI;IAAA,qEAAyH;IACzH,oEAAG;IAAA,uDAAuB;IAAA,4DAAI;IAC9B,gEACA;IAAA,oEAAG;IAAA,uDAA8B;IAAA,4DAAI;IACrC,uEAAM;IAAA,uDAAgC;IAAA,4DAAO;IAC7C,gEACA;IAAA,8EAA8E;IAA3D,6YAA0D;IAAC,0EAAc;IAAA,4DAAS;IACrG,wEAAM;IAAA,6DAAC;IAAA,4DAAO;IACd,8EAAqD;IAAlC,gXAAiC;IAAC,0EAAc;IAAA,4DAAS;IAChF,4DAAM;;;;IATyB,0DAAuF;IAAvF,qKAAuF;IAC/G,0DAAuB;IAAvB,uFAAuB;IAEvB,0DAA8B;IAA9B,8FAA8B;IAC3B,0DAAgC;IAAhC,wGAAgC;;;;IAtC9C,sEACI;IAAA,qEAAI;IAAA,wEAAa;IAAA,4DAAK;IAEtB,4EAA+D;IAA1B,6TAAyB;IAAC,qEAAI;IAAA,uGAA4C;IAAA,4DAAK;IAAA,4DAAS;IAC7H,gEACA;IAAA,yEACI;IAAA,qEAAI;IAAA,6EAAkB;IAAA,4DAAK;IAC3B,iEACA;IAAA,2EACI;IADE,mUAA6B;IAC/B,yFACI;IAAA,4EAAW;IAAA,gFAAmB;IAAA,4DAAW;IACzC,qFACI;IAAA,6EAAW;IAAA,yEAAa;IAAA,4DAAY;IACpC,4EACA;IADyI,qWAAsC;IAA/K,4DACA;IAAA,kIACI;IAEJ,kIACI;IAEJ,kIACI;IAER,4DAAiB;IACrB,4DAAqB;IACrB,iEACA;IAAA,8EAAmB;IAAA,uEAAW;IAAA,4DAAS;IAC3C,4DAAO;IAEX,4DAAM;IAEN,sEAAI;IAAA,gIAAoE;IAAA,4DAAK;IAE7E,wHACI;IAUR,4DAAM;;;IA/B6D,2DAAmC;IAAnC,mGAAmC;IACvE,0DAAgD;IAAhD,iHAAgD;IAGhD,0DAAiD;IAAjD,kHAAiD;IAGjD,0DAAiD;IAAjD,kHAAiD;IAavD,0DAAgC;IAAhC,oFAAgC;;ADjBlD,MAAM,kBAAkB;IAQ7B,YAAoB,MAAiB,EAAU,YAAwB,EAAS,YAAyB;QAArF,WAAM,GAAN,MAAM,CAAW;QAAU,iBAAY,GAAZ,YAAY,CAAY;QAAS,iBAAY,GAAZ,YAAY,CAAa;QAJlG,UAAK,GAAG,KAAK;QACb,gBAAW,GAAG,IAAI,oEAAa,EAAE,CAAC;QAClC,YAAO,GAAG,oEAAO,CAAC;QA6DzB,wBAAmB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAC;YACvC,yDAAU,CAAC,QAAQ;YACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;YACvB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;SACzB,CAAC;QAGD,YAAO,GAAG,IAAI,mBAAmB,EAAE,CAAC;IAlEwE,CAAC;IAC9G,WAAW;QACT,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAEM,UAAU,CAAC,GAAG;QACnB,IAAG;YACE,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;SACzC;QAAA,OAAM,GAAG,EAAC;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;SACjB;IACH,CAAC;IAED,QAAQ;QACN,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,CAAC,EAAE,IAAI,CAAC,CAAC;QACT,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE;QAC/B,IAAI,CAAC,WAAW,GAAG,yDAAK,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,yDAAK,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC;QACpF,IAAI,CAAC,QAAQ,GAAG,yDAAK,CAAC,QAAQ,EAAE,CAAC,QAAQ;IAC3C,CAAC;IAEM,gBAAgB,CAAC,UAAU,EAAC,UAAU;QAC3C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+FAAsB,EAAC;YACtC,IAAI,EAAC;gBACH,GAAG,EAAC,UAAU;gBACd,UAAU,EAAC,UAAU;aACpB;SACF,CAAC,CAAC;IACP,CAAC;IAEM,aAAa;QAClB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sFAAmB,CAAC;IACvC,CAAC;IAED,cAAc;QACZ,IAAG;YACD,IAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAC;gBACjC,kDAAI,CAAC,IAAI,CAAC;oBACR,KAAK,EAAE,OAAO;oBACd,IAAI,EAAE,qBAAqB;oBAC3B,IAAI,EAAE,OAAO;iBACd,CAAC;gBACF,OAAO;aACR;YACD,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAChD,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,8BAA8B;gBACpC,IAAI,EAAE,SAAS;aAChB,CAAC;YACF,IAAI,CAAC,WAAW,CAAC,YAAY,GAAG,EAAE,CAAC;SACpC;QAAA,OAAM,GAAG,EAAC;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC;SACzB;IACH,CAAC;;oFA/DU,kBAAkB;kGAAlB,kBAAkB;QCpB/B,8GACI;QAGJ,+GACI;;QALiB,4EAAc;QAI9B,0DAAkB;QAAlB,2EAAkB;;6FDgBV,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;AA8EO,MAAM,mBAAmB;IAC9B,YAAY,CAAC,OAA2B,EAAE,IAAwC;QAChF,MAAM,WAAW,GAAG,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC;QAC3C,OAAO,CAAC,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,IAAI,WAAW,CAAC,CAAC,CAAC;IAC7F,CAAC;CACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEtG2D;AAGX;AAEL;AAGmB;AAEV;AACD;;;;;;;;;;;;;;ICXpD,yEACI;IAAA,oEACJ;IAAA,4DAAM;;;IAiBc,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF8C,kFAAsB;IAC7E,0DACJ;IADI,oGACJ;;;;IAMR,0EACI;IAAA,qEAAwH;IACxH,oEAAG;IAAA,uDAAuB;IAAA,4DAAI;IAC9B,gEACA;IAAA,oEAAG;IAAA,uDAA8B;IAAA,4DAAI;IACrC,0EACI;IAAA,2EAA2B;IAAA,uDAAgC;IAAA,4DAAO;IAClE,iEACA;IAAA,8EAAmG;IAAzE,uZAA6D;IAAY,4EAAU;IAAA,+DAAG;IAAA,4DAAW;IAAA,4DAAS;IACxI,4DAAM;IACV,4DAAM;;;;IATyB,0DAAsF;IAAtF,sKAAsF;IAC9G,0DAAuB;IAAvB,wFAAuB;IAEvB,0DAA8B;IAA9B,+FAA8B;IAEF,0DAAgC;IAAhC,yGAAgC;;;IARvE,sEAEI;IAAA,wHACI;IAUR,4DAAM;;;IAXmB,0DAAgC;IAAhC,oFAAgC;;;;IAarD,0EACI;IAAA,qEAAwH;IACxH,oEAAG;IAAA,uDAAuB;IAAA,4DAAI;IAC9B,gEACA;IAAA,oEAAG;IAAA,uDAA8B;IAAA,4DAAI;IACrC,0EACI;IAAA,2EAA2B;IAAA,uDAAgC;IAAA,4DAAO;IAClE,iEACA;IAAA,8EAAmG;IAAzE,uZAA6D;IAAY,4EAAU;IAAA,+DAAG;IAAA,4DAAW;IAAA,4DAAS;IACxI,4DAAM;IACV,4DAAM;;;;IATyB,0DAAsF;IAAtF,sKAAsF;IAC9G,0DAAuB;IAAvB,wFAAuB;IAEvB,0DAA8B;IAA9B,+FAA8B;IAEF,0DAAgC;IAAhC,yGAAgC;;;IAPvE,sEACI;IAAA,wHACI;IAUR,4DAAM;;;IAXmB,0DAAwC;IAAxC,4FAAwC;;;;IAa7D,0EACI;IAAA,qEAAwH;IACxH,oEAAG;IAAA,uDAAuB;IAAA,4DAAI;IAC9B,gEACA;IAAA,oEAAG;IAAA,uDAA8B;IAAA,4DAAI;IACrC,0EACI;IAAA,2EAA2B;IAAA,uDAAgC;IAAA,4DAAO;IAClE,iEACA;IAAA,8EAAmG;IAAzE,uZAA6D;IAAY,4EAAU;IAAA,+DAAG;IAAA,4DAAW;IAAA,4DAAS;IACxI,4DAAM;IACV,4DAAM;;;;IATyB,0DAAsF;IAAtF,sKAAsF;IAC9G,0DAAuB;IAAvB,wFAAuB;IAEvB,0DAA8B;IAA9B,+FAA8B;IAEF,0DAAgC;IAAhC,yGAAgC;;;IAPvE,sEACI;IAAA,wHACI;IAUR,4DAAM;;;IAXmB,0DAA6C;IAA7C,iGAA6C;;;;IAiBlE,0EACI;IAAA,qEAA2H;IAC3H,0EACI;IAAA,oEAAG;IAAA,uDAA8B;IAAA,4DAAI;IACrC,wEAAsB;IAAA,uDAAwB;IAAA,4DAAI;IAClD,gEACA;IAAA,oEAAG;IAAA,uDAA2B;IAAA,4DAAI;IACtC,4DAAM;IACN,8EAA6F;IAAvD,uYAAsD;IAAC,kEAAM;IAAA,4EAAU;IAAA,iEAAK;IAAA,4DAAW;IAAA,4DAAS;IACtI,iEACJ;IAAA,4DAAM;;;;IATqB,0DAA6F;IAA7F,4KAA6F;IAE7G,0DAA8B;IAA9B,+FAA8B;IACX,0DAAwB;IAAxB,kGAAwB;IAE3C,0DAA2B;IAA3B,oGAA2B;;;;IAM1C,6EACI;IADwD,gUAAsB;IAC9E,wEACA;IAAA,2EAAU;IAAA,+EAAoB;IAAA,4DAAW;IAC7C,4DAAS;;;IAMT,6EACI;IAAA,wEAAyD;IAAA,sEAAW;IAAA,4DAAI;IACxE,2EAAU;IAAA,wEAAa;IAAA,4DAAW;IACtC,4DAAS;;;;IA3FjB,sEACI;IAAA,yEACI;IAAA,qEAAI;IAAA,mGAAwC;IAAA,4DAAK;IACjD,qEAAI;IAAA,yHAA8D;IAAA,4DAAK;IAC3E,4DAAM;IACN,yEAA4E;IAAA,mGAAwC;IAAA,4DAAM;IAC1H,yEACI;IAAA,yEACI;IAAA,qFACI;IAAA,6EAAW;IAAA,0EAAc;IAAA,4DAAY;IACrC,4EACJ;IADgC,8UAAyC;IAArE,4DACJ;IAAA,4DAAiB;IACjB,kFACI;IAAA,6EAAW;IAAA,2EAAe;IAAA,4DAAY;IACtC,kFACI;IADwC,sVAAsC;IAC9E,kFAAqB;IAAA,2EAAe;IAAA,4DAAa;IACjD,gIACI;IAER,4DAAa;IACjB,4DAAiB;IACrB,4DAAM;IACN,iHAEI;IAYJ,iHACI;IAYJ,iHACI;IAYR,4DAAM;IACN,2EACI;IAAA,sEAAI;IAAA,8EAAkB;IAAA,4DAAK;IAC3B,iEACA;IAAA,2EACI;IAAA,mHACI;IAUR,4DAAM;IACN,wHACI;IAGJ,2EACI;IAAA,wEAAM;IAAA,6DAAC;IAAA,4DAAO;IACd,sEAAI;IAAA,wDAAqB;IAAA,4DAAK;IAC9B,wEAAM;IAAA,6DAAC;IAAA,4DAAO;IAClB,4DAAM;IACN,wHACI;IAGR,4DAAM;IACN,8EAAsI;IAA7B,2TAA2B;IAAE,yEAAc;IAAA,4DAAS;IACjK,4DAAM;;;IAzFG,0DAAsE;IAAtE,uJAAsE;IAW/C,2DAA8C;IAA9C,iGAA8C;IAMjE,0DACsC;IADtC,mJACsC;IAatC,0DAAwC;IAAxC,oGAAwC;IAaxC,0DAA0C;IAA1C,sGAA0C;IAc1B,0DAA6C;IAA7C,gHAA6C;IAI5C,0DAA8B;IAA9B,qFAA8B;IAYrB,0DAAiB;IAAjB,6EAAiB;IAMxC,0DAAqB;IAArB,kGAAqB;IAGH,0DAAiB;IAAjB,6EAAiB;IAKvC,0DAAwD;IAAxD,2HAAwD;;AD9E7D,MAAM,aAAa;IAkBxB,YAAoB,aAA0B,EAAS,MAAiB,EAAS,YAAwB;QAArF,kBAAa,GAAb,aAAa,CAAa;QAAS,WAAM,GAAN,MAAM,CAAW;QAAS,iBAAY,GAAZ,YAAY,CAAY;QAflG,UAAK,GAAG,KAAK,CAAC;QAEd,SAAI,GAAG,IAAI,4DAAS,EAAE,CAAC;QAEvB,qBAAgB,GAAG,EAAE,CAAC;QACtB,0BAAqB,GAAoB,EAAE,CAAC;QAE5C,qBAAgB,GAAG,EAAE,CAAC;QACtB,aAAQ,GAAG,IAAI,kEAAS,EAAE,CAAC;QAI3B,eAAU,GAAU,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QACvD,YAAO,GAAG,oEAAO,CAAC;IAEoF,CAAC;IAE9G,WAAW;QACT,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAGD,gFAAgF;IAChF,wFAAwF;IACxF,2CAA2C;IAC9B,UAAU,CAAC,IAAI;;YAC1B,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;gBACtB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;gBAC3B,OAAO;aACR;YACD,IAAG,IAAI,CAAC,qBAAqB,CAAC,MAAM,GAAG,CAAC,EAAC;gBACvC,IAAI;oBACF,IAAI,CAAC,gBAAgB,GAAG,MAAM,IAAI,CAAC,YAAY;yBAC9C,qBAAqB,CAAC,IAAI,EAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;iBACpD;gBACH,OAAO,GAAG,EAAE;oBACR,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;iBACpB;gBACD,OAAO;aACR;iBAAI;gBACH,IAAI;oBACF,IAAI,CAAC,gBAAgB,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;iBACnE;gBACH,OAAO,GAAG,EAAE;oBACR,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;iBACpB;aACJ;QACH,CAAC;KAAA;IAEM,eAAe;QACpB,IAAG,CAAC,IAAI,CAAC,QAAQ,EAAC;YAChB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtB;aAAI;YACH,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACvB;IACH,CAAC;IAEY,cAAc,CAAC,KAAK;;YAC/B,IAAI,CAAC,gBAAgB,GAAG,KAAK;YAC7B,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAK,EAAC,EAAE;gBAC7D,IAAI,CAAC,qBAAqB,GAAG,CAAC,CAAC;YAC/B,CAAC,CAAC;QACJ,CAAC;KAAA;IAED,sCAAsC;IACtC,kDAAkD;IAClD,0CAA0C;IAC7B,YAAY;;YACvB,IAAG,IAAI,CAAC,IAAI,EAAC;gBACX,OAAO;aACR;YACD,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAAC,GAAO,EAAE;gBAClD,IAAG,IAAI,CAAC,IAAI,KAAK,IAAI,EAAC;oBACpB,IAAG,IAAI,CAAC,UAAU,KAAK,MAAM,EAAC;wBAC5B,IAAI,CAAC,gBAAgB,GAAG,UAAU;wBAClC,UAAU,CAAC,GAAG,EAAE;4BACd,IAAI,CAAC,gBAAgB,GAAG,UAAU;wBACpC,CAAC,EAAE,IAAI,CAAC,CAAC;qBACV;oBACD,IAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAC;wBAC7B,MAAM,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,GAAE,EAAE;4BAC5C,IAAI,CAAC,IAAI,GAAG,yDAAK,CAAC,QAAQ,EAAE,CAAC,IAAI;wBACnC,CAAC,CAAC,CAAC;qBACJ;oBACD,IAAI,CAAC,YAAY,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;iBACxD;YACH,CAAC,EAAC,CAAC;QACL,CAAC;KAAA;IAEK,QAAQ;;YACZ,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,KAAK,GAAG,IAAI;YACnB,CAAC,EAAE,IAAI,CAAC,CAAC;YACT,IAAI,CAAC,UAAU,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC;YAC3D,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;YAChC,IAAI,CAAC,WAAW,GAAG,yDAAK,CAAC,SAAS,CAAC,GAAG,EAAE;gBACtC,IAAI,CAAC,IAAI,GAAG,yDAAK,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC;gBAClC,IAAI,CAAC,QAAQ,GAAG,yDAAK,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC;gBAC1C,IAAI,CAAC,SAAS,GAAG,yDAAK,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC;gBAC5C,IAAI,CAAC,QAAQ,GAAG,yDAAK,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC;gBACtC,IAAI,CAAC,UAAU,GAAG,yDAAK,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC;YAChD,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,IAAI,GAAG,yDAAK,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC;YAClC,IAAI,CAAC,QAAQ,GAAG,yDAAK,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC;YAC1C,IAAI,CAAC,SAAS,GAAG,yDAAK,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC;YAC5C,IAAI,CAAC,QAAQ,GAAG,yDAAK,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC;YACtC,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,UAAU,CAAC,GAAG,EAAE;gBACd,YAAY,CAAC,OAAO,CAAC,YAAY,EAAC,OAAO,CAAC,CAAC;YAC7C,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC;KAAA;IAED,0FAA0F;IAC1F,4BAA4B;IACrB,kBAAkB,CAAC,OAAO,EAAC,UAAU;QAC1C,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;QACxB,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,OAAO,EAAC,UAAU,EAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACvE,CAAC;IAEM,UAAU;QACb,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAChD,CAAC;IAED,sFAAsF;IACzE,iBAAiB,CAAC,UAAU,EAAC,YAAY;;YACpD,IAAG;gBACD,IAAG,IAAI,CAAC,IAAI,KAAK,IAAI,EAAC;oBACpB,MAAM,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,GAAE,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,yDAAK,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC;iBACnF;gBACD,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,6EAAgB,EAAC;oBAChD,IAAI,EAAC;wBACH,UAAU,EAAC,UAAU;wBACrB,OAAO,EAAC,IAAI,CAAC,IAAI,CAAC,GAAG;wBACrB,YAAY,EAAC,YAAY;qBACxB;iBACJ,CAAC,CAAC;gBACH,OAAO,OAAO,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAE,EAAE;oBACzC,IAAG,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAAC;wBAC7B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;qBAC5C;gBACH,CAAC,CAAC,CAAC;aACJ;YAAA,OAAM,GAAG,EAAC;gBACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC;aACzB;QACH,CAAC;KAAA;;0EAnJU,aAAa;6FAAb,aAAa;QClB1B,yGACI;QAEJ,2GACI;;QAJiB,4EAAc;QAG9B,0DAAa;QAAb,2EAAa;;6FDeL,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjB4D;AAIjB;AAES;;;;;;;;;;ICFjD,uEAAwC;IAAA,4DAAC;IAAA,4DAAO;;;IAChD,qEAAsC;IAAA,wEAAuB;IAAA,qEAAU;IAAA,4DAAI;IAAA,4DAAK;;;IAChF,uEAAyB;IAAA,4DAAC;IAAA,4DAAO;;;IACjC,qEAAuB;IAAA,wEAA8B;IAAA,wEAAa;IAAA,4DAAI;IAAA,4DAAK;;;IAC3E,uEAAyB;IAAA,4DAAC;IAAA,4DAAO;;;IACjC,qEAAuB;IAAA,wEAAuB;IAAA,oEAAS;IAAA,4DAAI;IAAA,4DAAK;;;IAChE,uEAAyB;IAAA,4DAAC;IAAA,4DAAO;;;IACjC,qEAAuB;IAAA,wEAAyB;IAAA,qEAAU;IAAA,4DAAI;IAAA,4DAAK;;;IAGnE,0EACE;IAAA,qEACM;IACR,4DAAM;;;IAFoB,0DAAuF;IAAvF,2KAAuF;;;;IAIjH,6EACE;IADyB,8TAAkB;IAC3C,2EAAU;IAAA,sEAAW;IAAA,4DAAW;IAChC,uEAAM;IAAA,oEAAG;IAAA,iEAAM;IAAA,4DAAI;IAAA,4DAAO;IAC5B,4DAAS;;;IATX,0EACE;IAAA,mHACE;IAGF,2EAAgC;IAAA,uDAA4B;IAAA,4DAAO;IACnE,yHACE;IAGF,wEACE;IAAA,qEAAiC;IACnC,4DAAI;IACJ,wEACE;IAAA,qEAAgC;IAClC,4DAAI;IACN,4DAAM;;;IAfiB,0DAAgD;IAAhD,iHAAgD;IAIrC,0DAA4B;IAA5B,yGAA4B;IACpD,0DAAkB;IAAlB,mFAAkB;;;IAe9B,6EAEE;IAAA,+EAA2B;IAAA,+DAAI;IAAA,4DAAW;IAC5C,4DAAS;;;;IAHkC,mFAA0B;;;IASnE,4EACE;IAAA,2EAAU;IAAA,sEAAW;IAAA,4DAAW;IAChC,uEAAM;IAAA,wEAAyB;IAAA,qEAAU;IAAA,4DAAI;IAAA,4DAAO;IACtD,4DAAS;;;IACT,4EACE;IAAA,2EAAU;IAAA,oEAAS;IAAA,4DAAW;IAC9B,uEAAM;IAAA,wEAAuB;IAAA,qEAAU;IAAA,4DAAI;IAAA,4DAAO;IACpD,4DAAS;;;IACT,4EACE;IAAA,2EAAU;IAAA,+DAAI;IAAA,4DAAW;IACzB,uEAAM;IAAA,wEAAuB;IAAA,oEAAS;IAAA,4DAAI;IAAA,4DAAO;IACnD,4DAAS;;;IACT,4EACE;IAAA,2EAAU;IAAA,kEAAO;IAAA,4DAAW;IAC5B,uEAAM;IAAA,wEAA8B;IAAA,wEAAa;IAAA,4DAAI;IAAA,4DAAO;IAC9D,4DAAS;;;;IACT,6EACE;IADoB,uTAAkB;IACtC,2EAAU;IAAA,sEAAW;IAAA,4DAAW;IAChC,uEAAM;IAAA,wEAAuB;IAAA,iEAAM;IAAA,4DAAI;IAAA,4DAAO;IAChD,4DAAS;;ADjDJ,MAAM,eAAe;IAO1B,YAAoB,OAAc,EAAU,YAAwB;QAAhD,YAAO,GAAP,OAAO,CAAO;QAAU,iBAAY,GAAZ,YAAY,CAAY;QAF7D,YAAO,GAAG,oEAAO,CAAC;IAE+C,CAAC;IAEzE,WAAW;QACT,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAEK,QAAQ;;YACZ,IAAI,CAAC,WAAW,GAAG,yDAAK,CAAC,SAAS,CAAC,GAAG,EAAE;gBACtC,IAAI,CAAC,QAAQ,GAAG,yDAAK,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC;gBACtC,IAAI,CAAC,WAAW,GAAG,yDAAK,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC;YAC9C,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,GAAG,yDAAK,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC;YACtC,IAAI,CAAC,WAAW,GAAG,yDAAK,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC;YAC5C,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC;KAAA;IAEK,UAAU;;YACd,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ;YAC1B,IAAG,IAAI,KAAK,IAAI,EAAC;gBACf,OAAO;aACR;YACC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;QACnD,CAAC;KAAA;IAGD,QAAQ;QACN,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAG,KAAK,EAAC;YACP,OAAO,IAAI;SACZ;QACD,OAAO,KAAK;IACd,CAAC;IAED,MAAM;QACJ,YAAY,CAAC,KAAK,EAAE;QACpB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;QACjC,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;;8EA5CU,eAAe;+FAAf,eAAe;QCb5B,yEACE;QAAA,8EAEE;QAAA,kEAAuC;QACvC,6GAAwC;QACxC,yGAAsC;QACtC,6GAAyB;QACzB,yGAAuB;QACvB,6GAAyB;QACzB,yGAAuB;QACvB,6GAAyB;QACzB,2GAAuB;QACzB,4DAAc;QACd,6GACE;QAgBJ,4DAAM;QAEN,yEAAsB;QAAA,mEAAO;QAAA,4DAAK;QAElC,mHAEE;QAEF,kFACE;QAAA,6EACE;QAAA,4EAAU;QAAA,gEAAI;QAAA,4DAAW;QACzB,wEAAM;QAAA,wEAAsB;QAAA,mEAAO;QAAA,4DAAI;QAAA,4DAAO;QAChD,4DAAS;QACT,oHACE;QAGF,oHACE;QAGF,oHACE;QAGF,oHACE;QAGF,oHACE;QAGJ,4DAAW;QAGX,4EAA+B;;QA9DrB,0DAAiC;QAAjC,mGAAiC;QACnC,0DAAiC;QAAjC,mGAAiC;QAC/B,0DAAkB;QAAlB,gFAAkB;QACpB,0DAAkB;QAAlB,gFAAkB;QAChB,0DAAkB;QAAlB,gFAAkB;QACpB,0DAAkB;QAAlB,gFAAkB;QAChB,0DAAkB;QAAlB,gFAAkB;QACpB,0DAAkB;QAAlB,gFAAkB;QAEF,0DAAkB;QAAlB,gFAAkB;QAqBlC,0DAAkB;QAAlB,gFAAkB;QASF,0DAAkB;QAAlB,gFAAkB;QAIlB,0DAAiC;QAAjC,mGAAiC;QAIjC,0DAAkB;QAAlB,gFAAkB;QAIlB,0DAAkB;QAAlB,gFAAkB;QAIC,0DAAkB;QAAlB,gFAAkB;;6FD9ChD,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZyC;AACM;AAGjB;AACoD;;;;;;;;;;ICE3E,4EACI;IAAA,iFACJ;IAAA,4DAAY;;;IAMZ,4EACI;IAAA,iFACJ;IAAA,4DAAY;;ADHb,MAAM,cAAc;IAMzB,YAAoB,YAAyB,EAAS,OAAc;QAAhD,iBAAY,GAAZ,YAAY,CAAa;QAAS,YAAO,GAAP,OAAO,CAAO;QAJ7D,SAAI,GAAG,IAAI,2DAAS,EAAE,CAAC;QA8B9B,wBAAmB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;YACxC,yDAAU,CAAC,QAAQ;SAEpB,CAAC,CAAC;QACH,wBAAmB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;YACxC,yDAAU,CAAC,QAAQ;SACpB,CAAC,CAAC;QAGH,YAAO,GAAG,IAAI,mBAAmB,EAAE,CAAC;IAnCoC,CAAC;IAInE,KAAK;;YACT,IAAG;gBACD,IAAG,CAAC,IAAI,CAAC,SAAS,EAAE,EAAC;oBACnB,OAAO;iBACR;gBACD,IAAI,CAAC,SAAS,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC3D;YAAA,OAAM,GAAG,EAAC;gBACT,IAAG,GAAG,CAAC,MAAM,KAAK,GAAG,EAAC;oBACpB,kDAAI,CAAC,IAAI,CAAC;wBACR,KAAK,EAAE,mBAAmB;wBAC1B,IAAI,EAAE,qBAAqB;wBAC3B,IAAI,EAAE,OAAO;qBACd,CAAC;iBACH;gBACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC;aACzB;QACH,CAAC;KAAA;IAED,SAAS;QACP,OAAO,IAAI,CAAC,mBAAmB,CAAC,KAAK;eAClC,IAAI,CAAC,mBAAmB,CAAC,KAAK;IACnC,CAAC;;4EA/BU,cAAc;8FAAd,cAAc;QCd3B,qEAAI;QAAA,gEAAK;QAAA,4DAAK;QAGd,0EACI;QADuB,0IAAY,WAAO,IAAC;QAC3C,oFACI;QAAA,4EAAW;QAAA,mEAAQ;QAAA,4DAAY;QAC/B,2EACA;QAD+H,8LAAgC;QAA/J,4DACA;QAAA,sHACI;QAER,4DAAiB;QACjB,gEACA;QAAA,oFACI;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,4EACA;QAD6I,0LAA2B;QAAxK,4DACA;QAAA,wHACI;QAER,4DAAiB;QACjB,iEACA;QAAA,6EAA+C;QAAA,iEAAK;QAAA,4DAAS;QAE7D,qEAAG;QAAA,uEAAW;QAAA,4DAAI;QAClB,wEAAsD;QAAA,qEAAS;QAAA,4DAAI;QACvE,4DAAO;;QAlB+B,0DAAmC;QAAnC,gGAAmC;QACtD,0DAAgD;QAAhD,8GAAgD;QAO3C,0DAAmC;QAAnC,gGAAmC;QACxC,0DAAgD;QAAhD,8GAAgD;;6FDDtD,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;AA8CM,MAAM,mBAAmB;IAC9B,YAAY,CAAC,OAA2B,EAAE,IAAwC;QAChF,MAAM,WAAW,GAAG,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC;QAC3C,OAAO,CAAC,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,IAAI,WAAW,CAAC,CAAC,CAAC;IAC7F,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhEyD;AACyB;AAEvB;AAED;;;;;;;;;;;;;ICL3D,yEACI;IAAA,oEACJ;IAAA,4DAAM;;;IASM,4EACI;IAAA,mFACJ;IAAA,4DAAY;;;IACZ,4EACI;IAAA,4FACJ;IAAA,4DAAY;;;IAOZ,4EACI;IAAA,uGACJ;IAAA,4DAAY;;;IAOZ,4EACI;IAAA,0EACJ;IAAA,4DAAY;;;IAOR,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF8C,kFAAsB;IAC7E,0DACJ;IADI,oGACJ;;;;IAxChB,0EAEI;IAFuB,4TAAqB;IAE5C,wEAAqB;IAAA,yEAAc;IAAA,4DAAK;IACxC,wFACI;IAAA,2EAAW;IAAA,+EAAmB;IAAA,4DAAW;IACzC,oFACI;IAAA,4EAAW;IAAA,uEAAY;IAAA,4DAAY;IACnC,2EACA;IAD4I,mWAAiC;IAA7K,4DACA;IAAA,uIACI;IAEJ,uIACI;IAER,4DAAiB;IACjB,iEACA;IAAA,4EAAU;IAAA,uEAAW;IAAA,4DAAW;IAChC,qFACI;IAAA,6EAAW;IAAA,uEAAW;IAAA,4DAAY;IAClC,6EACA;IAD6K,2WAAwC;IAArN,4DACA;IAAA,uIACI;IAER,4DAAiB;IACjB,iEACA;IAAA,4EAAU;IAAA,wEAAY;IAAA,4DAAW;IACjC,qFACI;IAAA,6EAAW;IAAA,iEAAK;IAAA,4DAAY;IAC5B,6EACA;IADsI,qWAAkC;IAAxK,4DACA;IAAA,uIACI;IAER,4DAAiB;IACjB,iEACA;IAAA,sFACI;IAAA,6EAAW;IAAA,2EAAe;IAAA,4DAAY;IACtC,kFACI;IADQ,6VAAuB;IAC/B,kFAAqB;IAAA,2EAAe;IAAA,4DAAa;IACjD,0IACI;IAER,4DAAa;IACjB,4DAAiB;IACjB,iEACA;IAAA,8EAAmB;IAAA,6EAAmH;IAAtF,8VAA+C;IAA5E,4DAAmH;IAAA,4DAAS;IACnJ,4DAAqB;IAGrB,sFACI;IAAA,8EAAoC;IAAA,kEAAM;IAAA,4DAAS;IACnD,8EAA2E;IAAA,kEAAM;IAAA,4DAAS;IAC9F,4DAAqB;IAEzB,4DAAO;;;IA9CoD,0DAAsC;IAAtC,sGAAsC;IAC1E,0DAAkD;IAAlD,mHAAkD;IAGlD,0DAAoD;IAApD,qHAAoD;IAQT,0DAAsC;IAAtC,sGAAsC;IACjF,0DAAoD;IAApD,qHAAoD;IAQb,0DAAgC;IAAhC,gGAAgC;IACvE,0DAAwC;IAAxC,yGAAwC;IAOvC,0DAAuB;IAAvB,qFAAuB;IAEnB,0DAA8C;IAA9C,iGAA8C;IAY/C,0DAAyB;IAAzB,kFAAyB;;ADxC7C,MAAM,sBAAsB;IAQjC,YAAoB,aAA0B,EAAmC,IAAS;QAAtE,kBAAa,GAAb,aAAa,CAAa;QAAmC,SAAI,GAAJ,IAAI,CAAK;QANrF,YAAO,GAAG,IAAI,yEAAY,EAAE,CAAC;QAC7B,gBAAW,GAAG,EAAE;QAEhB,UAAK,GAAG,KAAK,CAAC;QACrB,iBAAY,GAAS,IAAI,CAAC;QA0BxB,2BAAsB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAC;YAC1C,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;YACvB,yDAAU,CAAC,OAAO,CAAC,aAAa,CAAC;SAClC,CAAC;QAEF,2BAAsB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAC;YAC1C,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;SACzB,CAAC;QAEF,qBAAgB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAC;YACpC,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC;SAClB,CAAC;QACF,wBAAmB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAC,EACxC,CAAC;QAGD,YAAO,GAAG,IAAI,mBAAmB,EAAE,CAAC;IAxCyD,CAAC;IAEzF,QAAQ;;YACZ,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YACpB,CAAC,EAAE,IAAI,CAAC,CAAC;YACT,IAAI,CAAC,UAAU,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC;QAC7D,CAAC;KAAA;IAED,eAAe,CAAC,KAAe;QAC7B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtC,CAAC;IAGO,MAAM;;YACV,IAAG;gBACC,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;gBACjC,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;gBAC/C,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,EAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aACpE;YAAA,OAAM,GAAG,EAAC;gBACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC;aACzB;QACH,CAAC;KAAA;;4FA9BU,sBAAsB,gNAQwB,wEAAe;sGAR7D,sBAAsB;QCbnC,kHACI;QAEJ,sHAEI;;QALiB,4EAAc;QAGc,0DAAkB;QAAlB,2EAAkB;;6FDUtD,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;sBASkD,oDAAM;uBAAE,wEAAe;;AA2ClE,MAAM,mBAAmB;IAC9B,YAAY,CAAC,OAA2B,EAAE,IAAwC;QAChF,MAAM,WAAW,GAAG,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC;QAC3C,OAAO,CAAC,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,IAAI,WAAW,CAAC,CAAC,CAAC;IAC7F,CAAC;CACH;;;;;;;;;;;;;AErED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAGjB;;;;;;;ICD5C,sEACI;IAAA,qEAAI;IAAA,uFAA4B;IAAA,4DAAK;IACzC,4DAAM;;;;IAGE,yEACI;IAD4C,qWAA0B;IACtE,oEAAG;IAAA,uDAA2B;IAAA,4DAAI;IAClC,oEAAG;IAAA,uDAAuC;IAAA,4DAAI;IAC9C,gEACA;IAAA,oEAAG;IAAA,uDAAyC;IAAA,4DAAI;IAChD,oEAAG;IAAA,uDAAqC;IAAA,4DAAI;IAChD,4DAAM;;;IALC,0DAA2B;IAA3B,oGAA2B;IAC3B,0DAAuC;IAAvC,gHAAuC;IAEvC,0DAAyC;IAAzC,iHAAyC;IACzC,0DAAqC;IAArC,8GAAqC;;;IAK5C,wEAA8C;IAAA,yGAA8C;IAAA,4DAAK;;;IAG7F,0EACI;IAAA,wEAA8B;IAAA,uDAAiC;IAAA,4DAAI;IACnE,oEAAG;IAAA,uDAAuB;IAAA,4DAAI;IAC9B,oEAAI;IAAA,uDAA6B;IAAA,4DAAI;IACzC,4DAAM;;;IAH4B,0DAAiC;IAAjC,0GAAiC;IAC5D,0DAAuB;IAAvB,gGAAuB;IACtB,0DAA6B;IAA7B,sGAA6B;;;;IALzC,yEACI;IAAA,qEAAI;IAAA,wEAAa;IAAA,4DAAK;IACtB,6HACI;IAIJ,0EAAyB;IAAA,uDAAyC;IAAA,4DAAM;IACxE,6EAAyE;IAAlC,uVAAiC;IAAC,sEAAW;IAAA,4DAAS;IACjG,4DAAM;;;IAT+C,8GAA0C;IAEjE,0DAAqC;IAArC,4FAAqC;IAKtC,0DAAyC;IAAzC,qHAAyC;;;IApB9E,sEACI;IAAA,yEACI;IAAA,wHACI;IAMR,4DAAM;IAEN,yEACI;IAAA,qHAA8C;IAC9C,uHACI;IASR,4DAAM;IACV,4DAAM;;;IAtBqB,0DAA4B;IAA5B,kFAA4B;IAU3B,0DAAyB;IAAzB,0FAAyB;IACjB,0DAAwB;IAAxB,yFAAwB;;ADJrD,MAAM,qBAAqB;IAShC,YAAoB,YAAwB,EAAU,UAAwB;QAA1D,iBAAY,GAAZ,YAAY,CAAY;QAAU,eAAU,GAAV,UAAU,CAAc;QANvE,WAAM,GAAgB,EAAE,CAAC;QACzB,UAAK,GAAW,KAAK,CAAC;IAKqD,CAAC;IAGnF,+CAA+C;IAC/C,QAAQ;QACN,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,CAAC,EAAE,IAAI,CAAC,CAAC;QACT,IAAI,CAAC,WAAW,GAAG,yDAAK,CAAC,SAAS,CAAC,GAAG,EAAE;YACtC,IAAI,CAAC,MAAM,GAAG,yDAAK,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC;QACxC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC;IAChC,CAAC;IACD,WAAW;QACT,IAAI,CAAC,WAAW,EAAE;IACpB,CAAC;IAED,oCAAoC;IAC7B,SAAS,CAAC,KAAK;QACpB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC3B,CAAC,EAAE,IAAI,CAAC,CAAC;QACT,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,YAAY,CAAC,sBAAsB,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,KAAK,GAAE;YACzE,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAChC,CAAC,CAAC;IACN,CAAC;IACM,UAAU,CAAC,KAAK;QACrB,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,EAAC,IAAI,CAAC,gBAAgB,CAAC;IAC1D,CAAC;;0FAvCU,qBAAqB;qGAArB,qBAAqB;QCdlC,qEAAI;QAAA,yGAA8C;QAAA,4DAAK;QAEvD,iHACI;QAEJ,iHACI;;QAJC,0DAA2B;QAA3B,yFAA2B;QAG3B,0DAA2B;QAA3B,yFAA2B;;6FDSnB,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACd;AACG;AACY;;;;;;;AAI3D,4DAAO,CAAC,GAAG,GAAG,8DAAQ,CAAC,OAAO,CAAC,GAAG,CAAC;AAO5B,MAAM,mBAAmB;IAM9B,YAAoB,MAAoB,EAAU,YAAwB,EAAkC,IAAS,EAAS,OAAc;QAAxH,WAAM,GAAN,MAAM,CAAc;QAAU,iBAAY,GAAZ,YAAY,CAAY;QAAkC,SAAI,GAAJ,IAAI,CAAK;QAAS,YAAO,GAAP,OAAO,CAAO;QAHrI,UAAK,GAAU,CAAC,CAAC;IAGwH,CAAC;IAEjJ,qCAAqC;IACrC,4DAA4D;IAC5D,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,YAAY;aACvD,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;QACpE,WAAW,CAAC,GAAG,EAAE;YACf,IAAG,IAAI,CAAC,KAAK,KAAK,CAAC,EAAC;gBAClB,OAAO;aACR;YACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QAC9B,CAAC,EAAE,IAAI,CAAC,CAAC;QACT,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACvE,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAChD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;QAClC,CAAC,EAAE,IAAI,CAAC,CAAC;IACb,CAAC;;sFAxBU,mBAAmB,+VAMsD,wEAAe;mGANxF,mBAAmB;QCdhC,qEAEI;QAAA,yFAA6B;QAAA,4DAAK;QACtC,qEAAI;QAAA,uDAAsE;QAAA,4DAAK;QAC/E,qEAAI;QAAA,uDAA0C;QAAA,4DAAK;QAEnD,qEAAI;QAAA,6GAAkD;QAAA,4DAAK;QAC3D,4EAA6C;QAAA,8DAAG;QAAA,4DAAS;;QAJrD,0DAAsE;QAAtE,gJAAsE;QACtE,0DAA0C;QAA1C,oHAA0C;QAG3B,0DAAyB;QAAzB,kFAAyB;;6FDO/B,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;sBAO6E,oDAAM;uBAAE,wEAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEpBnD;AACG;AAGwE;AAE9F;;;;;;;;;;;;ICN/B,yEACI;IAAA,oEACJ;IAAA,4DAAM;;;IASM,4EACI;IAAA,kFACJ;IAAA,4DAAY;;;IACZ,4EACI;IAAA,iFACJ;IAAA,4DAAY;;;IAMZ,4EACI;IAAA,gGACJ;IAAA,4DAAY;;;IACZ,4EACI;IAAA,mGACJ;IAAA,4DAAY;;;IACZ,4EACI;IAAA,2IACJ;IAAA,4DAAY;;;IACZ,4EACI;IAAA,iFACJ;IAAA,4DAAY;;;IAMZ,4EACI;IAAA,iFACJ;IAAA,4DAAY;;;IACZ,4EACI;IAAA,mFACJ;IAAA,4DAAY;;;IAMZ,4EACI;IAAA,uEACJ;IAAA,4DAAY;;;IACZ,4EACI;IAAA,uEACJ;IAAA,4DAAY;;;IACZ,4EACI;IAAA,4EACJ;IAAA,4DAAY;;;IACZ,4EACI;IAAA,+EACJ;IAAA,4DAAY;;;;IAtDpB,yEACI;IAAA,oFACI;IAAA,4EAAW;IAAA,mEAAQ;IAAA,4DAAY;IAC/B,4EACA;IADwJ,wWAAmC;IAA3L,4DACA;IAAA,uIACI;IAEJ,uIACI;IAER,4DAAiB;IACjB,gEACA;IAAA,oFACI;IAAA,4EAAW;IAAA,oEAAQ;IAAA,4DAAY;IAC/B,6EACA;IAD4K,oWAA8B;IAA1M,4DACA;IAAA,yIACI;IAEJ,yIACI;IAEJ,yIACI;IAEJ,yIACI;IAER,4DAAiB;IACjB,iEACA;IAAA,qFACI;IAAA,6EAAW;IAAA,2EAAe;IAAA,4DAAY;IACtC,wEACA;IAAA,yIACI;IAEJ,yIACI;IAER,4DAAiB;IACjB,iEACA;IAAA,qFACI;IAAA,6EAAW;IAAA,iFAAqB;IAAA,4DAAY;IAC5C,6EACA;IADkK,gXAA0C;IAA5M,4DACA;IAAA,yIACI;IAEJ,yIACI;IAEJ,yIACI;IAEJ,yIACI;IAER,4DAAiB;IACjB,iEACA;IAAA,sEAAI;IAAA,mFAAuB;IAAA,4DAAK;IAChC,8EAAmB;IAAA,6EAAkH;IAArF,iWAA+C;IAA5E,4DAAkH;IAAA,4DAAS;IAC9I,iEAAI;IAAA,iEACJ;IAAA,8EAAkD;IAA/B,0UAA8B;IAAC,gEAAI;IAAA,4DAAS;IACnE,4DAAM;;;IA1DmD,0DAAmC;IAAnC,mGAAmC;IACzE,0DAA+C;IAA/C,gHAA+C;IAG/C,0DAAgD;IAAhD,iHAAgD;IAOO,0DAAmC;IAAnC,mGAAmC;IAC1F,0DAAiD;IAAjD,kHAAiD;IAGjD,0DAAiD;IAAjD,kHAAiD;IAGjD,0DAA+C;IAA/C,gHAA+C;IAG/C,0DAAgD;IAAhD,iHAAgD;IAOO,0DAAsC;IAAtC,sGAAsC;IAC7F,0DAAmD;IAAnD,oHAAmD;IAGnD,0DAAgD;IAAhD,iHAAgD;IAO/B,0DAA+C;IAA/C,+GAA+C;IAChE,0DAA6D;IAA7D,8HAA6D;IAG7D,0DAA6D;IAA7D,8HAA6D;IAG7D,0DAA4D;IAA5D,6HAA4D;IAG5D,0DAA2D;IAA3D,4HAA2D;;;IActE,4EACI;IAAA,+FACJ;IAAA,4DAAY;;;IACZ,4EACI;IAAA,mGACJ;IAAA,4DAAY;;;IACZ,4EACI;IAAA,oFACJ;IAAA,4DAAY;;;IAMZ,4EACI;IAAA,+FACJ;IAAA,4DAAY;;;IACZ,4EACI;IAAA,mFACJ;IAAA,4DAAY;;;IAOR,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF+C,gFAAmB;IAC3E,0DACJ;IADI,yFACJ;;;IAEJ,4EACI;IAAA,6EACJ;IAAA,4DAAY;;;IAMZ,4EACI;IAAA,+EACJ;IAAA,4DAAY;;;IAKZ,4EACI;IAAA,4EACJ;IAAA,4DAAY;;;IACZ,4EACI;IAAA,wEACJ;IAAA,4DAAY;;;IACZ,4EACI;IAAA,wEACJ;IAAA,4DAAY;;;;IAzDpB,0EACI;IAAA,oFACI;IAAA,4EAAW;IAAA,qEAAU;IAAA,4DAAY;IACjC,4EACA;IADuI,oWAA+B;IAAtK,4DACA;IAAA,uIACI;IAEJ,uIACI;IAEJ,uIACI;IAER,4DAAiB;IACjB,gEACA;IAAA,oFACI;IAAA,6EAAW;IAAA,qEAAS;IAAA,4DAAY;IAChC,6EACA;IADuI,oWAA8B;IAArK,4DACA;IAAA,yIACI;IAEJ,yIACI;IAER,4DAAiB;IACjB,iEACA;IAAA,sFACI;IAAA,6EAAW;IAAA,uEAAW;IAAA,4DAAY;IAClC,kFACI;IADQ,gWAAuB;IAC/B,kFAAqB;IAAA,uEAAW;IAAA,4DAAa;IAC7C,2IACI;IAER,4DAAa;IACb,yIACI;IAER,4DAAiB;IACjB,iEACA;IAAA,qFACI;IAAA,6EAAW;IAAA,kEAAM;IAAA,4DAAY;IAC7B,6EACA;IADoJ,0WAAoC;IAAxL,4DACA;IAAA,yIACI;IAER,4DAAiB;IACjB,qFACI;IAAA,6EAAW;IAAA,sEAAU;IAAA,4DAAY;IACjC,6EACA;IAD2H,uWAAiC;IAA5J,4DACA;IAAA,yIACI;IAEJ,yIACI;IAEJ,yIACI;IAER,4DAAiB;IACjB,iEAAI;IAAA,iEACJ;IAAA,8EAAkD;IAAA,oEAAQ;IAAA,4DAAS;IACvE,4DAAM;;;IA1D8B,0DAAoC;IAApC,oGAAoC;IACrD,0DAAkD;IAAlD,mHAAkD;IAGlD,0DAAgD;IAAhD,iHAAgD;IAGhD,0DAAiD;IAAjD,kHAAiD;IAOhC,0DAAmC;IAAnC,mGAAmC;IACpD,0DAAiD;IAAjD,kHAAiD;IAGjD,0DAAgD;IAAhD,iHAAgD;IAO/C,0DAAuB;IAAvB,qFAAuB;IAEnB,0DAA+C;IAA/C,iGAA+C;IAIpD,0DAAmD;IAAnD,oHAAmD;IAOlC,0DAAwC;IAAxC,wGAAwC;IACzD,0DAAqD;IAArD,sHAAqD;IAMpC,0DAA8B;IAA9B,8FAA8B;IAC/C,0DAA2C;IAA3C,4GAA2C;IAG3C,0DAAsC;IAAtC,uGAAsC;IAGtC,0DAA4C;IAA5C,6GAA4C;;;;IAxHnE,0EACI;IADuB,4TAAuB;IAC9C,qEAAI;IAAA,4EAAiB;IAAA,4DAAK;IAC1B,qEAAI;IAAA,2HAAgE;IAAA,4DAAK;IACzE,sHACI;IA6DJ,sHACI;IA6DJ,gEAAI;IAAA,gEACJ;IAAA,oEAAG;IAAA,2EAAe;IAAA,4DAAI;IACtB,wEAAgD;IAAA,kEAAM;IAAA,4DAAI;IAC9D,4DAAO;;;IA/HqB,0DAAoB;IAApB,qFAAoB;IA8DnB,0DAAmB;IAAnB,oFAAmB;;ADtDzC,MAAM,iBAAiB;IAU5B,YAAqB,YAAwB,EAAU,OAAc;QAAhD,iBAAY,GAAZ,YAAY,CAAY;QAAU,YAAO,GAAP,OAAO,CAAO;QAR9D,YAAO,GAAG,IAAI,kEAAS,EAAE,CAAC;QAG1B,gBAAW,GAAG,EAAE,CAAC;QACjB,eAAU,GAAG,KAAK,CAAC;QACnB,gBAAW,GAAG,KAAK,CAAC;QACpB,iBAAY,GAAS,IAAI,CAAC;QAkGhC,wBAAmB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;YACxC,yDAAU,CAAC,QAAQ;YACnB,yDAAU,CAAC,OAAO,CAAC,cAAc,CAAC;SACnC,CAAC,CAAC;QAEH,wBAAmB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;YACxC,yDAAU,CAAC,QAAQ;YACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;YACvB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;YACxB,yDAAU,CAAC,OAAO,CAAC,sEAAsE,CAAC;SAC3F,CAAC,CAAC;QAEH,yBAAoB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;YACzC,yDAAU,CAAC,QAAQ;YACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;YACvB,yDAAU,CAAC,OAAO,CAAC,kBAAkB,CAAC;SACvC,CAAC,CAAC;QAEH,wBAAmB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;YACzC,yDAAU,CAAC,QAAQ;YACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;SACxB,CAAC,CAAC;QAEH,oCAA+B,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAC;YACnD,yDAAU,CAAC,QAAQ;YACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;YACvB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;YACvB,yDAAU,CAAC,OAAO,CAAC,mBAAmB,CAAC;SACxC,CAAC;QAEF,2BAAsB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAC;YAC1C,yDAAU,CAAC,QAAQ;SACpB,CAAC;QACF,6BAAwB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAC;YAC5C,yDAAU,CAAC,QAAQ;SACpB,CAAC;QACF,mBAAc,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAC;YAClC,yDAAU,CAAC,QAAQ;YACnB,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC;YACjB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;SACxB,CAAC;QACF,2BAAsB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAC;YAC1C,yDAAU,CAAC,QAAQ;YACnB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC;SAClC,CAAC;QAKD,YAAO,GAAG,IAAI,mBAAmB,EAAE,CAAC;IAjJoC,CAAC;IAGpE,QAAQ;;YACZ,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,UAAU,GAAG,IAAI;YACxB,CAAC,EAAE,IAAI,CAAC,CAAC;YACT,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QACtD,CAAC;KAAA;IAEA,iBAAiB,CAAC,OAAoB;QACpC,MAAO,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;QAC/B,MAAM,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;QAC/C,IAAI,OAAO,KAAK,QAAQ,EAAC;YACvB,OAAQ;gBACN,KAAK,EAAC;oBACJ,UAAU,EAAC,kBAAkB;iBAC9B;aACF;SACF;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,eAAe,CAAC,KAAe;QAC7B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC;IAEK,kBAAkB;;YACtB,IAAG,CAAC,IAAI,CAAC,eAAe,EAAE,EAAC;gBACzB,OAAM;aACP;iBACG;gBACF,IAAG;oBACC,MAAM,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC,GAAE;wBAC3E,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;oBAChB,CAAC,CAAC,CAAC;iBACN;gBAAA,OAAM,GAAG,EAAC;oBACT,IAAG,GAAG,CAAC,MAAM,KAAK,GAAG,EAAC;wBACpB,kDAAI,CAAC,IAAI,CAAC;4BACR,KAAK,EAAE,kBAAkB;4BACzB,IAAI,EAAE,+CAA+C;4BACrD,IAAI,EAAE,OAAO;4BACb,iBAAiB,EAAE,KAAK;yBACzB,CAAC;qBACH;oBACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC;oBACxB,OAAO;iBACR;gBACD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;oBACvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBAC1B,CAAC,EAAE,IAAI,CAAC,CAAC;aACV;QACH,CAAC;KAAA;IAEK,QAAQ;;YACZ,IAAG;gBACD,IAAG,CAAC,IAAI,CAAC,SAAS,EAAE,EAAC;oBACnB,OAAO;iBACR;gBACD,IAAI,CAAC,QAAQ,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aAClF;YAAA,OAAM,GAAG,EAAC;gBACT,IAAG,GAAG,CAAC,MAAM,KAAK,GAAG,EAAC;oBACpB,kDAAI,CAAC,IAAI,CAAC;wBACR,KAAK,EAAE,kBAAkB;wBACzB,IAAI,EAAE,+CAA+C;wBACrD,IAAI,EAAE,OAAO;wBACb,iBAAiB,EAAE,KAAK;qBACzB,CAAC;iBACH;gBACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC;aACzB;QACH,CAAC;KAAA;IAED,SAAS;QACP,OAAO,IAAI,CAAC,mBAAmB,CAAC,KAAK;eAClC,IAAI,CAAC,mBAAmB,CAAC,KAAK;eAC9B,IAAI,CAAC,+BAA+B,CAAC,KAAK;eAC1C,IAAI,CAAC,oBAAoB,CAAC,KAAK;eAChC,IAAI,CAAC,mBAAmB,CAAC,KAAK;eAC7B,IAAI,CAAC,sBAAsB,CAAC,KAAK;eACjC,IAAI,CAAC,wBAAwB,CAAC,KAAK;eACnC,IAAI,CAAC,cAAc,CAAC,KAAK;eACzB,IAAI,CAAC,sBAAsB,CAAC,KAAK;IAEtC,CAAC;IAED,eAAe;QACb,OAAO,IAAI,CAAC,mBAAmB,CAAC,KAAK;eAClC,IAAI,CAAC,mBAAmB,CAAC,KAAK;eAC9B,IAAI,CAAC,+BAA+B,CAAC,KAAK;eAC1C,IAAI,CAAC,sBAAsB,CAAC,KAAK;IACtC,CAAC;;kFAvGU,iBAAiB;iGAAjB,iBAAiB;QCf9B,6GACI;QAGJ,gHACI;;QALiB,iFAAwB;QAIM,0DAAuB;QAAvB,gFAAuB;;6FDW7D,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;AA+JO,MAAM,mBAAmB;IAC9B,YAAY,CAAC,OAA2B,EAAE,IAAwC;QAChF,MAAM,WAAW,GAAG,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC;QAC3C,OAAO,CAAC,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,IAAI,WAAW,CAAC,CAAC,CAAC;IAC7F,CAAC;CACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AElL4D;AAEjB;AAIY;AAC2B;AAGpD;AAE4C;AAEtB;;;;;;;;;;;;;;ICdrD,yEACI;IAAA,oEACJ;IAAA,4DAAM;;;IAMM,0EACI;IAAA,qEAAmI;IACnI,wEAAiB;IAAA,uDAAiC;IAAA,4DAAI;IACtD,gEACA;IAAA,wEAAwB;IAAA,uDAAwC;IAAA,4DAAI;IACpE,wEAAmB;IAAA,uDAA0B;IAAA,4DAAI;IACjD,uEAAM;IAAA,wDAA8B;IAAA,4DAAO;IAC/C,4DAAM;;;;IANyB,0DAAiG;IAAjG,gLAAiG;IAC3G,0DAAiC;IAAjC,kGAAiC;IAE1B,0DAAwC;IAAxC,yGAAwC;IAC7C,0DAA0B;IAA1B,oGAA0B;IACvC,0DAA8B;IAA9B,uGAA8B;;;IASpC,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF+C,gFAAmB;IAC3E,0DACJ;IADI,yFACJ;;;IAEJ,4EACI;IAAA,6EACJ;IAAA,4DAAY;;;IAKZ,4EACI;IAAA,+FACJ;IAAA,4DAAY;;;IACZ,4EACI;IAAA,mFACJ;IAAA,4DAAY;;;IAShB,4EACI;IAAA,0FACJ;IAAA,4DAAY;;;IAOZ,4EACI;IAAA,uFACJ;IAAA,4DAAY;;;IACZ,4EACI;IAAA,uFACJ;IAAA,4DAAY;;;IACZ,4EACI;IAAA,uFACJ;IAAA,4DAAY;;;;IA7DpB,sEACI;IAAA,yEACI;IAAA,qEAAI;IAAA,4EAAiB;IAAA,4DAAK;IAC1B,yEACI;IAAA,uHACI;IAOR,4DAAM;IACV,4DAAM;IACN,0EACI;IADuB,iUAA0B;IACjD,qEAAI;IAAA,gHAAqD;IAAA,4DAAK;IAC9D,oFACI;IAAA,6EAAW;IAAA,uEAAW;IAAA,4DAAY;IAClC,iFACI;IADQ,qWAA+B;IACvC,uIACI;IAER,4DAAa;IACb,oIACI;IAER,4DAAiB;IACjB,sFACI;IAAA,6EAAW;IAAA,6EAAiB;IAAA,4DAAY;IACxC,6EACA;IADO,kWAAiC;IAAxC,4DACA;IAAA,oIACI;IAEJ,oIACI;IAER,4DAAiB;IACjB,iEACA;IAAA,iEACA;IAAA,kFACI;IAAA,6EACA;IADyJ,4VAA2C;IAApM,4DACA;IAAA,wFAA6E;IAC7E,uFAA8C;IAClD,4DAAiB;IACjB,oIACI;IAEJ,iEACA;IAAA,mEAAgC;IAChC,sFACI;IAAA,6EAAW;IAAA,6EAAiB;IAAA,4DAAY;IACxC,6EACJ;IADW,uVAA2C;IAAlD,4DACJ;IAAA,4DAAiB;IACjB,oIACI;IAEJ,oIACI;IAEJ,oIACI;IAEJ,iEACA;IAAA,8EAAmD;IAAA,sEAAU;IAAA,4DAAS;IAGtE,sEAAI;IAAA,wDAAqC;IAAA,4DAAK;IAClD,4DAAO;IAEX,4DAAM;;;;IAjE2B,0DAAuC;IAAvC,2FAAuC;IAchD,0DAA+B;IAA/B,6FAA+B;IAC3B,0DAA+C;IAA/C,iGAA+C;IAIpD,0DAAmD;IAAnD,oHAAmD;IAMvD,0DAAiC;IAAjC,+FAAiC;IAC7B,0DAAsD;IAAtD,uHAAsD;IAGtD,0DAAqD;IAArD,sHAAqD;IAOhD,0DAA6B;IAA7B,8EAA6B;IACZ,0DAAmB;IAAnB,oEAAmB;IAG7C,0DAAiD;IAAjD,kHAAiD;IAItD,0DAAkB;IAAlB,yEAAkB;IAGiD,0DAAqC;IAArC,qGAAqC;IAEnG,0DAAmD;IAAnD,oHAAmD;IAGnD,0DAAmD;IAAnD,oHAAmD;IAGnD,0DAAiD;IAAjD,kHAAiD;IAOxD,0DAAqC;IAArC,iHAAqC;;ADlD1C,MAAM,oBAAoB;IAc/B,YAAoB,MAAiB,EAAU,YAAwB,EAAS,OAAc;QAA1E,WAAM,GAAN,MAAM,CAAW;QAAU,iBAAY,GAAZ,YAAY,CAAY;QAAS,YAAO,GAAP,OAAO,CAAO;QAXvF,UAAK,GAAG,IAAI,qEAAU,EAAE,CAAC;QAKzB,aAAQ,GAAa,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;QAClE,eAAU,GAAW,yDAAK,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC;QAGjD,YAAO,GAAG,oEAAO,CAAC;QAgGzB,2BAAsB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAC;YAC1C,yDAAU,CAAC,QAAQ;SACpB,CAAC;QAEF,4BAAuB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAC;YAC3C,yDAAU,CAAC,QAAQ;YACnB,IAAI,CAAC,aAAa;SACnB,CAAC;QAEF,6BAAwB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAC;YAC5C,yDAAU,CAAC,QAAQ;YACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;SACxB,CAAC;QACF,0BAAqB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAC;YACzC,yDAAU,CAAC,QAAQ;YACnB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;YACxB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;YACxB,yDAAU,CAAC,OAAO,CAAC,0JAA0J,CAAC;SAC/K,CAAC;QAMF,YAAO,GAAG,IAAI,mBAAmB,EAAE,CAAC;IAtH8D,CAAC;IAE7F,QAAQ;;YACZ,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,KAAK,GAAG,IAAI;YACnB,CAAC,EAAE,IAAI,CAAC,CAAC;YACT,IAAI,CAAC,WAAW,GAAG,yDAAK,CAAC,SAAS,CAAC,GAAE,EAAE;gBACrC,IAAI,CAAC,eAAe,GAAG,yDAAK,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC;gBAClD,IAAI,CAAC,IAAI,GAAG,yDAAK,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC;gBAClC,IAAI,CAAC,cAAc,GAAG,yDAAK,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC;gBAC7C,IAAI,CAAC,UAAU,GAAI,yDAAK,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC;YACjD,CAAC,CAAC;YACF,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC;YACpD,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC;YACxD,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;YACpD,IAAI,CAAC,eAAe,GAAG,yDAAK,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC;YAClD,IAAI,CAAC,cAAc,GAAG,yDAAK,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC;YAC7C,IAAI,CAAC,IAAI,GAAG,yDAAK,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC;YAClC,IAAG,IAAI,CAAC,eAAe,CAAC,MAAM,KAAK,CAAC,EAAC;gBACnC,MAAM,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAAC,GAAE,EAAE;oBACjD,IAAG,IAAI,CAAC,IAAI,KAAK,IAAI,EAAC;wBACpB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBACjC,OAAO;qBACR;oBACD,IAAI,CAAC,YAAY,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAC5D,CAAC,CAAC;aACH;QACH,CAAC;KAAA;IAED,WAAW;QACT,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAEM,cAAc,CAAC,IAAS;QAC7B,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC;IACjC,CAAC;IAEM,YAAY,CAAC,MAAM;QACxB,MAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACvC,IAAI,CAAC,QAAQ,GAAG,OAAO,UAAU,EAAE,CAAC;QACpC,IAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,EAAC;YAClC,MAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACpD,IAAI,CAAC,KAAK,CAAC,oBAAoB,GAAG,UAAU,CAAC;SAC9C;IACH,CAAC;IAEM,OAAO;QACZ,OAAO,IAAI,CAAC,sBAAsB;eAChC,IAAI,CAAC,uBAAuB;eAC3B,IAAI,CAAC,wBAAwB;eAC7B,IAAI,CAAC,qBAAqB;IAC/B,CAAC;IAGY,WAAW;;YACtB,IAAG;gBACD,IAAG,CAAC,IAAI,CAAC,OAAO,EAAE,EAAC;oBACjB,kDAAI,CAAC,IAAI,CAAC;wBACR,KAAK,EAAE,cAAc;wBACrB,IAAI,EAAE,mCAAmC;wBACzC,IAAI,EAAE,OAAO;wBACb,iBAAiB,EAAE,KAAK;qBACzB,CAAC;iBACH;gBACC,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;gBACxC,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;gBAC1C,MAAM,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAE,EAAE;oBACvD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sFAAmB,EAAC;wBACnC,IAAI,EAAC;4BACH,KAAK,EAAE,IAAI,CAAC,cAAc;4BAC1B,QAAQ,EAAC,IAAI,CAAC,eAAe;4BAC7B,IAAI,EAAC,IAAI,CAAC,IAAI;yBACb;qBACF,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC;aACN;YAAA,OAAM,GAAG,EAAC;gBACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC;aACzB;QACH,CAAC;KAAA;IAED,aAAa,CAAC,OAAoB;QAChC,MAAO,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QACrC,IAAG,IAAI,IAAI,IAAI,IAAI,EAAE,EAAC;YACpB,OAAQ;gBACN,KAAK,EAAC;oBACJ,UAAU,EAAC,qBAAqB;iBACjC;aACF;SACF;QACD,OAAO,IAAI,CAAC;IAEf,CAAC;;wFAzGW,oBAAoB;oGAApB,oBAAoB;QCpBjC,gHACI;QAGJ,kHACI;;QALiB,4EAAc;QAI9B,0DAAa;QAAb,2EAAa;;6FDgBL,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;AA0IO,MAAM,mBAAmB;IAC9B,YAAY,CAAC,OAA2B,EAAE,IAAwC;QAChF,MAAM,WAAW,GAAG,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC;QAC3C,OAAO,CAAC,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,IAAI,WAAW,CAAC,CAAC,CAAC;IAC7F,CAAC;CACH;;;;;;;;;;;;;AElKD;AAAA;AAAO,MAAM,YAAY;IACrB,YACW,IAAY,EACZ,MAAc,EACd,GAAW;QAFX,SAAI,GAAJ,IAAI,CAAQ;QACZ,WAAM,GAAN,MAAM,CAAQ;QACd,QAAG,GAAH,GAAG,CAAQ;IACpB,CAAC;CACN;;;;;;;;;;;;;ACND;AAAA;AAAA;AAA+C;AAExC,MAAM,aAAa;IACtB,YACW,GAAW,EACX,MAAc,EACd,UAAkB,EAClB,SAAuB,EACvB,cAAsB;QAJtB,QAAG,GAAH,GAAG,CAAQ;QACX,WAAM,GAAN,MAAM,CAAQ;QACd,eAAU,GAAV,UAAU,CAAQ;QAClB,cAAS,GAAT,SAAS,CAAc;QACvB,mBAAc,GAAd,cAAc,CAAQ;QAE7B,IAAG,CAAC,SAAS,EAAC;YACV,IAAI,CAAC,SAAS,GAAG,IAAI,2DAAY,EAAE,CAAC;SACvC;IACL,CAAC;CACJ;;;;;;;;;;;;;ACdD;AAAA;AAAO,MAAM,SAAS;IAClB,YAAmB,GAAW,EACnB,YAAkB,EAClB,MAAc,EACd,iBAA0B;QAHlB,QAAG,GAAH,GAAG,CAAQ;QACnB,iBAAY,GAAZ,YAAY,CAAM;QAClB,WAAM,GAAN,MAAM,CAAQ;QACd,sBAAiB,GAAjB,iBAAiB,CAAS;IAAE,CAAC;CAC3C;;;;;;;;;;;;;ACLD;AAAA;AAAO,MAAM,aAAa;IACtB,YAAmB,YAAoB;QAApB,iBAAY,GAAZ,YAAY,CAAQ;IAAE,CAAC;CAC7C;;;;;;;;;;;;;ACFD;AAAA;AAAO,MAAM,UAAU;IACnB,YACW,GAAW,EACX,UAAkB,EAClB,WAAmB,EACnB,aAAqB,EACrB,YAAkB,EAClB,iBAAuB,EACvB,oBAA4B,EAC5B,MAAe,EACf,cAAsB;QARtB,QAAG,GAAH,GAAG,CAAQ;QACX,eAAU,GAAV,UAAU,CAAQ;QAClB,gBAAW,GAAX,WAAW,CAAQ;QACnB,kBAAa,GAAb,aAAa,CAAQ;QACrB,iBAAY,GAAZ,YAAY,CAAM;QAClB,sBAAiB,GAAjB,iBAAiB,CAAM;QACvB,yBAAoB,GAApB,oBAAoB,CAAQ;QAC5B,WAAM,GAAN,MAAM,CAAS;QACf,mBAAc,GAAd,cAAc,CAAQ;IAC/B,CAAC;CACN;;;;;;;;;;;;;ACZD;AAAA;AAAO,MAAM,YAAY;IACrB,YACW,GAAW,EACX,WAAmB,EACnB,kBAA0B,EAC1B,YAAoB,EACpB,UAAkB,EAClB,UAAkB;QALlB,QAAG,GAAH,GAAG,CAAQ;QACX,gBAAW,GAAX,WAAW,CAAQ;QACnB,uBAAkB,GAAlB,kBAAkB,CAAQ;QAC1B,iBAAY,GAAZ,YAAY,CAAQ;QACpB,eAAU,GAAV,UAAU,CAAQ;QAClB,eAAU,GAAV,UAAU,CAAQ;IAAE,CAAC;CACnC;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAsC;AAC/B,MAAM,SAAS;IAClB,YACW,GAAW,EACX,aAAqB,EACrB,QAAgB,EAChB,SAAiB,EACjB,QAAgB,EAChB,oBAA4B,EAC5B,OAAsB,EACtB,UAAkB,EAClB,OAAe;QARf,QAAG,GAAH,GAAG,CAAQ;QACX,kBAAa,GAAb,aAAa,CAAQ;QACrB,aAAQ,GAAR,QAAQ,CAAQ;QAChB,cAAS,GAAT,SAAS,CAAQ;QACjB,aAAQ,GAAR,QAAQ,CAAQ;QAChB,yBAAoB,GAApB,oBAAoB,CAAQ;QAC5B,YAAO,GAAP,OAAO,CAAe;QACtB,eAAU,GAAV,UAAU,CAAQ;QAClB,YAAO,GAAP,OAAO,CAAQ;QAElB,IAAG,CAAC,OAAO,EAAC;YACR,IAAI,CAAC,OAAO,GAAG,IAAI,qDAAY,EAAE,CAAC;SACrC;IACL,CAAC;CACR;;;;;;;;;;;;;ACjBD;AAAA;AAAA,IAAY,UAeX;AAfD,WAAY,UAAU;IAClB,2DAAY;IACZ,uDAAU;IACV,+DAAc;IACd,6DAAa;IACb,6DAAa;IACb,iDAAO;IACP,qEAAiB;IACjB,6DAAa;IACb,iFAAuB;IACvB,uEAAkB;IAClB,wDAAU;IACV,4DAAY;IACZ,4DAAY;IACZ,gEAAc;AAClB,CAAC,EAfW,UAAU,KAAV,UAAU,QAerB;;;;;;;;;;;;;ACRD;AAAA;AAAO,MAAM,QAAQ;IAUjB;QAJO,cAAS,GAAoB,EAAE,CAAC;QAChC,eAAU,GAAU,CAAC,CAAC;QAIzB,MAAM,IAAI,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC9C,IAAG,IAAI,EAAC;YACJ,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAClC,IAAI,CAAC,IAAI,GAAG,QAAQ;SACvB;aAAI;YACD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACpB;IACL,CAAC;CACJ;;;;;;;;;;;;;ACpBD;AAAA;AAAO,MAAM,oBAAoB,GAAG,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,OAAM,GAAE;IAC/C,iCAAiC;IACjC,IAAI,CAAC,MAAM,CAAC,CAAC;IACb,YAAY,CAAC,OAAO,CAAC,UAAU,EAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC;AACnF,CAAC;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAA0C;AAGnC,SAAS,OAAO,CAAC,YAAqB,EAAC,MAAa;IACvD,MAAM,QAAQ,qBAAK,YAAY,CAAC;IAChC,QAAO,MAAM,CAAC,IAAI,EAAC;QACf,KAAK,sDAAU,CAAC,YAAY;YACxB,QAAQ,CAAC,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI;YACnC,QAAQ,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK;YACrC,YAAY,CAAC,OAAO,CAAC,OAAO,EAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;YACnE,MAAM;QACV,KAAK,sDAAU,CAAC,cAAc;YAC1B,QAAQ,CAAC,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC;YAC/B,YAAY,CAAC,OAAO,CAAC,UAAU,EAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;YAChE,MAAM;QAEV,KAAK,sDAAU,CAAC,UAAU;YACtB,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YAClD,MAAM;QAEV,KAAK,sDAAU,CAAC,cAAc;YAC1B,QAAQ,CAAC,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC;YAC5C,MAAM;QAEV,KAAK,sDAAU,CAAC,aAAa;YACzB,MAAM,KAAK,GAAG,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,MAAM,CAAC,OAAO,CAAC,CAAC;YACzE,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YACnC,MAAM;QAEV,KAAK,sDAAU,CAAC,aAAa;YACzB,MAAM,WAAW,GAAG,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAC3F,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC;YACxD,MAAM;QAEV,KAAK,sDAAU,CAAC,OAAO;YACnB,QAAQ,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO;YACjC,MAAM;QAEV,KAAK,sDAAU,CAAC,iBAAiB;YAC7B,QAAQ,CAAC,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC;YACpC,MAAM;QAEV,KAAK,sDAAU,CAAC,uBAAuB;YACnC,QAAQ,CAAC,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC;YACpC,KAAI,IAAI,IAAI,IAAI,QAAQ,CAAC,SAAS,EAAC;gBAC/B,QAAQ,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;aAC/D;YACD,MAAM;QAEV,KAAK,sDAAU,CAAC,aAAa;YACzB,QAAQ,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,UAAU,CAAC;YAClF,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;YACpD,MAAM;QAEV,KAAK,sDAAU,CAAC,kBAAkB;YAC9B,QAAQ,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK;YAChE,MAAM,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAClF,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;YACxC,MAAM;QAEV,KAAK,sDAAU,CAAC,UAAU;YACtB,cAAc,CAAC,KAAK,EAAE,CAAC;YACvB,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;YACrB,QAAQ,CAAC,SAAS,GAAG,EAAE,CAAC;YACxB,QAAQ,CAAC,UAAU,GAAG,CAAC,CAAC;YACxB,MAAM;QAEV,KAAK,sDAAU,CAAC,YAAY;YACxB,QAAQ,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC;YAChC,MAAM;QAEV,KAAK,sDAAU,CAAC,YAAY;YACxB,KAAI,IAAI,IAAI,IAAI,MAAM,CAAC,OAAO,EAAC;gBAC3B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB;qBAC9C,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;gBACnD,IAAI,CAAC,YAAY,GAAE,IAAI,CAAC,YAAY;qBACnC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;aACjD;YACD,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC;YACjC,MAAM;KACb;IAED,OAAO,QAAQ;AACnB,CAAC;;;;;;;;;;;;;ACrFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACf;AACG;AACW;AAG1C,MAAM,KAAK,GAAG,yDAAW,CAAC,gDAAO,EAAC,IAAI,mDAAQ,EAAE,EAAC,6DAAe,CAAC,gEAAoB,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;ACJpD;;;;AAMpC,MAAM,iBAAiB;IAG5B,YAAoB,YAAwB,EAAS,OAAc;QAA/C,iBAAY,GAAZ,YAAY,CAAY;QAAS,YAAO,GAAP,OAAO,CAAO;IAAE,CAAC;IAChE,WAAW,CAAC,KAA6B,EAAE,KAA0B;;YAC3E,MAAM,KAAK,GAAG,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAC9C,IAAG;gBACD,IAAG,KAAK,EAAC;oBACP,OAAO,MAAM,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,MAAM,GAAE;wBACvD,IAAG,MAAM,EAAC;4BACR,OAAO,IAAI,CAAC;yBACb;oBACH,CAAC,CAAC,CAAC;iBACJ;qBAAI;oBACH,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;oBACjC,OAAO,KAAK;iBACb;aACF;YAAA,OAAM,GAAG,EAAC;gBACT,IAAG,GAAG,CAAC,MAAM,KAAK,GAAG,EAAC;oBACpB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;iBACjC;aACF;QACH,CAAC;KAAA;IAAA,CAAC;;kFAtBW,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB,mBAFhB,MAAM;6FAEP,iBAAiB;cAH7B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACmB;AACb;AACV;AACa;;;AAO7C,MAAM,YAAY;IAKvB,YAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;QAF5B,YAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IAE5D,CAAC;IAKjC,UAAU,CAAC,OAAO,EAAC,YAAkB;QAC1C,IAAI,QAAQ,GAAa,IAAI,QAAQ,EAAE,CAAC;QACxC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,YAAY,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC;QACzD,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QAC/C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,oEAAO,GAAC,sBAAsB,EAAC,QAAQ,EAC7D,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC,SAAS,CAAC,WAAW,GAAE;YAC7C,MAAM,MAAM,GAAG,EAAE,IAAI,EAAE,4DAAU,CAAC,UAAU,EAAE,OAAO,EAAE,WAAW,EAAE,CAAC;YACrE,kDAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,aAAa,CAAC,GAAG;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,oEAAO,2BAA2B,GAAG,EAAE,EAAC,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC,SAAS,CAAC,GAAE,EAAE;YACvG,MAAM,MAAM,GAAG,EAAE,IAAI,EAAE,4DAAU,CAAC,aAAa,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC;YAChE,kDAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,aAAa,CAAC,OAAO,EAAC,YAAkB;QAC7C,IAAI,QAAQ,GAAa,IAAI,QAAQ,EAAE,CAAC;QACxC,IAAG,YAAY,EAAC;YACd,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,YAAY,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC;SAC1D;QACD,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;QAChD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,oEAAO,oBAAoB,OAAO,CAAC,GAAG,EAAE,EAAC,QAAQ,EAAC,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,GAAE,EAAE;YAChH,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,oEAAO,2BAA2B,OAAO,CAAC,GAAG,EAAE,EAAC,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC,SAAS,CAAC,OAAO,GAAE;gBACjH,MAAM,MAAM,GAAG,EAAE,IAAI,EAAE,4DAAU,CAAC,aAAa,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;gBACpE,kDAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACzB,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAEM,WAAW,CAAC,QAAQ;QACzB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,oEAAO,wBAAwB,EAAC,QAAQ,EAAC,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IACjG,CAAC;IAEM,aAAa;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,oEAAO,yBAAyB,EAAC,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IAC/F,CAAC;;wEAhDU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;6FAEP,YAAY;cAHxB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;;;;;;;;ACR0C;;;;AAKpC,MAAM,oBAAoB;IAC/B,YAAoB,YAAwB,EAAS,OAAc;QAA/C,iBAAY,GAAZ,YAAY,CAAY;QAAS,YAAO,GAAP,OAAO,CAAO;IAAE,CAAC;IAChE,WAAW,CAAC,KAA6B,EAAE,KAA0B;;YACzE,MAAM,KAAK,GAAG,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAC9C,IAAG;gBACD,IAAG,KAAK,EAAC;oBACP,OAAO,MAAM,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,MAAM,GAAE;wBACvD,IAAG,MAAM,EAAC;4BACR,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;yBACzC;oBACH,CAAC,CAAC,CAAC;iBACJ;qBAAI;oBACH,OAAO,IAAI,CAAC;iBACb;aACF;YAAA,OAAM,GAAG,EAAC;gBACT,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;aAClC;QACH,CAAC;KAAA;IAAA,CAAC;;wFAjBS,oBAAoB;uGAApB,oBAAoB,WAApB,oBAAoB;6FAApB,oBAAoB;cAFhC,wDAAU;;;;;;;;;;;;;;;;;;;;;ACHgC;;;;AAKpC,MAAM,iBAAiB;IAC5B,YAAoB,YAAwB,EAAS,OAAc;QAA/C,iBAAY,GAAZ,YAAY,CAAY;QAAS,YAAO,GAAP,OAAO,CAAO;IAAE,CAAC;IAChE,WAAW,CAAC,KAA6B,EAAE,KAA0B;;YACzE,MAAM,KAAK,GAAG,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAC9C,IAAG;gBACD,IAAG,KAAK,EAAC;oBACP,OAAO,MAAM,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,MAAM,GAAE;wBACvD,IAAG,MAAM,EAAC;4BACR,OAAO,IAAI,CAAC;yBACb;oBACH,CAAC,CAAC,CAAC;iBACJ;qBAAI;oBACH,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;oBACjC,OAAO,KAAK,CAAC;iBACd;aACF;YAAA,OAAM,GAAG,EAAC;gBACT,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;aAClC;QACH,CAAC;KAAA;IAAA,CAAC;;kFAlBS,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB;6FAAjB,iBAAiB;cAF7B,wDAAU;;;;;;;;;;;;;;;;;;;;;;;ACLgC;AACC;AACG;;AAG/C,4DAAO,CAAC,GAAG,GAAG,8DAAQ,CAAC,OAAO,CAAC,GAAG,CAAC;AAK5B,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAGX,WAAW,CAAC,KAAgB,EAAC,SAAyB;;YAC1D,MAAM,kBAAkB,GAAG,EAAE,OAAO,EAAE;oBACpC;wBACE,KAAK,EAAE,MAAM,IAAI,CAAC,qBAAqB,CAAC,qCAAqC,CAAC;wBAC9E,KAAK,EAAC,EAAE;wBACR,MAAM,EAAC,GAAG;wBACV,SAAS,EAAE,QAAQ;wBACnB,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;qBACrB;oBACD;wBACE,IAAI,EAAE,gBAAgB,KAAK,CAAC,GAAG,EAAE;wBACjC,IAAI,EAAE,IAAI;wBACV,QAAQ,EAAE,EAAE;wBACZ,SAAS,EAAE,QAAQ;wBACnB,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;qBACtB;oBACD,SAAS,CAAC,GAAG,CAAC,IAAI,GAAE;wBAClB,OAAO,EAAE,IAAI,EAAE,KAAK,IAAI,CAAC,MAAM,MAAM,IAAI,CAAC,SAAS,CAAC,WAAW,MAAM,IAAI,CAAC,UAAU;wEACpB;4BAC7D,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,MAAM,EAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAC;oBAC1D,CAAC,CAAC;oBACF;wBACE,IAAI,EAAE,UAAU,KAAK,CAAC,UAAU,SAAS;wBACzC,QAAQ,EAAE,EAAE;qBACb;iBACF,EAAE,CAAC;YACJ,4DAAO,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,IAAI,EAAE,CAAC;QAC9C,CAAC;KAAA;IACD,6BAA6B;IAC7B,qBAAqB,CAAC,GAAG;QACxB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,IAAI,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC;YACtB,GAAG,CAAC,YAAY,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;YAC7C,GAAG,CAAC,MAAM,GAAG,GAAG,EAAE;gBAChB,IAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;gBAC9C,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;gBACzB,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;gBAC3B,IAAI,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBAClC,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBACzB,IAAI,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;gBAC5C,OAAO,CAAC,OAAO,CAAC,CAAC;YACnB,CAAC,CAAC;YACF,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC,EAAE;gBACpB,MAAM,CAAC,KAAK,CAAC,CAAC;YAChB,CAAC,CAAC;YACF,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC;;0EApDU,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAFZ,MAAM;6FAEP,aAAa;cAHzB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACT0C;AACmB;AAEb;AACV;AAIR;AAEqB;AACJ;;;;AAMzC,MAAM,WAAW;IAItB,YAAoB,IAAe,EAAS,OAAc;QAAtC,SAAI,GAAJ,IAAI,CAAW;QAAS,YAAO,GAAP,OAAO,CAAO;QAFnD,YAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IAErC,CAAC;IAE/D,uEAAuE;IAChE,OAAO;QACZ,MAAM,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;QAClG,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,oEAAO,mBAAmB,EAAC,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC;aACpE,SAAS,CACR,IAAI,GAAE;YACJ,MAAM,MAAM,GAAG,EAAE,IAAI,EAAE,4DAAU,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;YAC3D,kDAAK,CAAC,QAAQ,CAAC,MAAM,CAAC;QACxB,CAAC,EACA,KAAK,GAAE;YACN,IAAG,KAAK,CAAC,KAAK,KAAK,kCAAkC,EAAC;gBACpD,kDAAI,CAAC,IAAI,CAAC;oBACR,KAAK,EAAE,kCAAkC;oBACzC,IAAI,EAAE,oBAAoB;oBAC1B,IAAI,EAAE,OAAO;iBACd,CAAC;gBACF,YAAY,CAAC,KAAK,EAAE,CAAC;gBACrB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;aAClC;QAAA,CAAC,EACH,GAAE,EAAE,GAAC,CAAC,CAAC,CAAC;IACb,CAAC;IACD,wCAAwC;IACjC,UAAU;QACf,MAAM,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;QAClG,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,oEAAO,sBAAsB,EAAC,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IACvF,CAAC;IAGD,oCAAoC;IAC7B,UAAU;QACf,MAAM,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;QAClG,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,oEAAO,mBAAmB,EAAC,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IACpF,CAAC;IAEM,KAAK,CAAC,WAAW;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,oEAAO,gBAAgB,EAAC,WAAW,CAAC,CAAC,SAAS,CACrE,QAAQ,GAAE;YACV,MAAM,MAAM,GAAG,EAAE,IAAI,EAAE,4DAAU,CAAC,YAAY,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC;YACpE,kDAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACvB,YAAY,CAAC,OAAO,CAAC,YAAY,EAAC,MAAM,CAAC,CAAC;YAC1C,IAAI,CAAC,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;YACjG,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;QAClC,CAAC,EAAC,GAAG,GAAE;YACL,IAAG,GAAG,CAAC,MAAM,KAAK,GAAG,EAAC;gBACpB,kDAAI,CAAC,IAAI,CAAC;oBACR,KAAK,EAAE,mBAAmB;oBAC1B,IAAI,EAAE,qBAAqB;oBAC3B,IAAI,EAAE,OAAO;iBACd,CAAC;aACH;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,qBAAqB,CAAC,IAAc,EAAC,YAAiB;QAC3D,IAAI,QAAQ,GAAa,IAAI,QAAQ,EAAE,CAAC;QACxC,IAAG,YAAY,EAAC;YACd,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,YAAY,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC;SAC1D;QACD,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAC5C,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,oEAAO,2BAA2B,IAAI,CAAC,GAAG,EAAE,EAAC,QAAQ,EAAC,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC,SAAS,CAAC,IAAI,GAAE;YACtH,MAAM,MAAM,GAAG,EAAE,IAAI,EAAE,4DAAU,CAAC,cAAc,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;YAClE,kDAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IAED,8BAA8B;IACvB,YAAY,CAAC,QAAQ,EAAC,QAAQ;QACnC,MAAM,WAAW,GAAG,IAAI,2DAAS,CAAC,IAAI,EAAC,QAAQ,EAAC,QAAQ,CAAC;QACzD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,oEAAO,wBAAwB,EAAC,WAAW,EAAC,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IAC3G,CAAC;IAED,wDAAwD;IACjD,gBAAgB,CAAC,QAAQ;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,oEAAO,yBAAyB,QAAQ,EAAE,CAAC,CAAC,SAAS,EAAE;IACjF,CAAC;IAGM,QAAQ,CAAC,QAAQ,EAAC,YAAiB;QACxC,IAAI,QAAQ,GAAa,IAAI,QAAQ,EAAE,CAAC;QACxC,IAAG,YAAY,EAAC;YACd,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,YAAY,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC;SAC1D;QACD,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QAChD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,oEAAO,mBAAmB,EAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,UAAU,GAAE;YAClF,MAAM,MAAM,GAAG,EAAE,IAAI,EAAE,4DAAU,CAAC,YAAY,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;YACtE,kDAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACvB,IAAI,CAAC,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;YACjG,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IACM,WAAW;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qGAAqG,CAAC,CAAC,SAAS,EAAE,CAAC;IAC1I,CAAC;IAEM,WAAW;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,GAAG,oEAAO,sBAAsB,EAAC,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,GAAE;YAChH,MAAM,MAAM,GAAG,EAAE,IAAI,EAAE,4DAAU,CAAC,cAAc,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC;YACtE,kDAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,SAAS;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,GAAG,oEAAO,oBAAoB,EAAC,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC,SAAS,CAAC,MAAM,GAAE;YAC1G,MAAM,MAAM,GAAG,EAAE,IAAI,EAAE,4DAAU,CAAC,YAAY,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC;YAClE,kDAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,iBAAiB;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,GAAG,oEAAO,kBAAkB,EAAC,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,IAAI,GAAE;YACxG,MAAM,MAAM,GAAG,EAAE,IAAI,EAAE,4DAAU,CAAC,iBAAiB,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;YACrE,kDAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC3B,CAAC,CAAC;IACJ,CAAC;IAEM,UAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACpB,GAAG,oEAAO,qBAAqB,EAAC,EAAE,EAAC,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,IAAI,GAAE;YACjF,MAAM,MAAM,GAAG,EAAE,IAAI,EAAE,4DAAU,CAAC,iBAAiB,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;YACrE,kDAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IAEM,SAAS,CAAC,OAAO,EAAC,UAAU,EAAC,IAAI;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACpB,GAAG,oEAAO,0BAA0B,OAAO,IAAI,UAAU,EAAE,EAAC,IAAI,EAChE,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC,SAAS,CAAC,OAAO,GAAE;YAC1C,MAAM,MAAM,GAAG,EAAE,IAAI,EAAE,4DAAU,CAAC,aAAa,EAAE,OAAO,EAAE,OAAO,EAAC,CAAC;YACnE,kDAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,cAAc,CAAC,OAAO,EAAC,UAAU,EAAC,OAAO;QAC9C,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,oEAAO,+BAA+B,OAAO,EAAE,EAAC,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,CAAC;aACjG,SAAS,CACR,IAAI,GAAE;YACJ,MAAM,MAAM,GAAG,EAAE,IAAI,EAAE,4DAAU,CAAC,kBAAkB,EAAE,OAAO,EAAE,EAAC,GAAG,EAAC,OAAO,EAAC,KAAK,EAAC,UAAU,EAAC,EAAE,CAAC;YAChG,kDAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACvB,IAAG,kDAAK,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAAC;gBACzC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;aAC1B;QACH,CAAC,EACA,KAAK,GAAE,GAAC,CAAC,EACT,GAAE,EAAE,GAAC,CAAC,CAAC,CAAC;IACb,CAAC;IAEM,sBAAsB,CAAC,OAAO;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,GAAG,oEAAO,wBAAwB,OAAO,EAAE,EAAC,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC,SAAS,CAAC,KAAK,GAAE;YACzH,MAAM,MAAM,GAAG,EAAE,IAAI,EAAE,4DAAU,CAAC,uBAAuB,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;YAC5E,kDAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,sBAAsB,CAAC,OAAO;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,GAAG,oEAAO,wBAAwB,OAAO,EAAE,EAAC,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC,SAAS,EAAE;IACvH,CAAC;IAEM,UAAU,CAAC,OAAO;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,oEAAO,uBAAuB,OAAO,EAAE,EAAC,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,CAAC;aACzF,SAAS,CACR,IAAI,GAAE;YACJ,MAAM,MAAM,GAAG,EAAE,IAAI,EAAE,4DAAU,CAAC,UAAU,EAAE,CAAC;YAC/C,kDAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACzB,CAAC,EACA,KAAK,GAAE,GAAC,CAAC,EACT,GAAE,EAAE,GAAC,CAAC,CAAC,CAAC;IACb,CAAC;IAGM,WAAW,CAAC,KAAgB;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAa,GAAG,oEAAO,sBAAsB,EAAC,KAAK,EAAC,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAM,UAAU,IAAE;YAClI,cAAc,CAAC,KAAK,EAAE,CAAC;YACvB,MAAM,MAAM,GAAG,EAAE,IAAI,EAAE,4DAAU,CAAC,YAAY,EAAE,OAAO,EAAC,UAAU,EAAC,CAAC;YACpE,kDAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACzB,CAAC,EAAC,CAAC;IACL,CAAC;IAEM,aAAa,CAAC,IAAc;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,oEAAO,uBAAuB,EAAC,IAAI,EAAC,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,GAAE,EAAE;YACvG,MAAM,MAAM,GAAG,EAAE,IAAI,EAAE,4DAAU,CAAC,UAAU,EAAE,CAAC;YAC/C,kDAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACzB,CAAC,CAAC;IACN,CAAC;IAEM,aAAa,CAAC,IAAY;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,GAAG,oEAAO,mBAAmB,IAAI,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;IACxF,CAAC;IACM,qBAAqB,CAAC,IAAY,EAAC,aAAa;QACrD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAiB,GAAG,oEAAO,kCAAkC,IAAI,EAAE,EAAC,aAAa,CAAC,CAAC,SAAS,EAAE,CAAC;IACtH,CAAC;IAEM,qBAAqB,CAAC,aAAa;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAiB,GAAG,oEAAO,gCAAgC,EAAC,aAAa,CAAC,CAAC,SAAS,EAAE,CAAC;IAC9G,CAAC;;sEAzMU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;AChBD;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAGK,MAAM,OAAO,GAAG,wBAAwB,CAAC;AAEhD;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;AClBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginGuardService } from './services/login-guard.service';\nimport { AdminZoneComponent } from './components/admin-zone/admin-zone.component';\nimport { AdminGuardService } from './services/admin-guard.service';\nimport { AlreadyLoggedService } from './services/already-logged.service';\nimport { PlaceOrderComponent } from './components/place-order/place-order.component';\nimport { ReviewOrderComponent } from './components/review-order/review-order.component';\nimport { OrderHistoryComponent } from './components/order-history/order-history.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { AccountComponent } from './components/account/account.component';\n\n\nconst routes: Routes = [\n  {path:\"home\",component:HomeComponent, canActivate:[LoginGuardService]},\n  {path:\"login\",component:LoginComponent, canActivate:[AlreadyLoggedService]},\n  {path:\"register\",component:RegisterComponent, canActivate:[AlreadyLoggedService]},\n  {path:\"admin\",component:AdminZoneComponent, canActivate:[AdminGuardService]},\n  {path:\"order\", component:PlaceOrderComponent, canActivate:[LoginGuardService]},\n  {path:\"reviewOrder\",component:ReviewOrderComponent, canActivate:[LoginGuardService]},\n  {path:\"orderHistory\",component:OrderHistoryComponent,canActivate:[LoginGuardService]},\n  {path:\"about\",component:AboutComponent,canActivate:[LoginGuardService]},\n  {path:\"account\",component:AccountComponent,canActivate:[LoginGuardService]},\n  {path:\"\",redirectTo:\"/home\",pathMatch:\"full\"}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { LayoutComponent } from './components/layout/layout.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatToolbarModule} from '@angular/material/toolbar'\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatMenuModule} from '@angular/material/menu';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginGuardService } from './services/login-guard.service';\nimport { AdminGuardService } from './services/admin-guard.service';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\nimport { AdminZoneComponent } from './components/admin-zone/admin-zone.component';\nimport { ModifyProductComponent } from './components/modify-product/modify-product.component';\nimport { AddProductComponent } from './components/add-product/add-product.component';\nimport { AddItemComponent } from './components/add-item/add-item.component';\nimport {MatSliderModule} from '@angular/material/slider';\nimport { PlaceOrderComponent } from './components/place-order/place-order.component';\nimport { ReviewOrderComponent } from './components/review-order/review-order.component';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport { OrderHistoryComponent } from './components/order-history/order-history.component';\nimport { AlreadyLoggedService } from './services/already-logged.service';\nimport { AboutComponent } from './components/about/about.component';\nimport { AccountComponent } from './components/account/account.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    LayoutComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    AdminZoneComponent,\n    ModifyProductComponent,\n    AddProductComponent,\n    AddItemComponent,\n    PlaceOrderComponent,\n    ReviewOrderComponent,\n    OrderHistoryComponent,\n    AboutComponent,\n    AccountComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MatToolbarModule,\n    ReactiveFormsModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatDialogModule,\n    HttpClientModule,\n    SweetAlert2Module.forRoot(),\n    MatSliderModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    ],\n  providers: [\n    LoginGuardService,\n    AdminGuardService,\n    AlreadyLoggedService\n    \n  ],\n  bootstrap: [LayoutComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"headLine\">\n    <h1>Welcome to SkyBuy!</h1>\n    <h3>As part of the Sky concern we have an obligation to provide you with the best service and best products</h3>\n</div>\n\n<div class=\"history\">\n    <h2>A bit about our history:</h2>\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse non facilisis libero, non porta tellus. Phasellus quis sagittis augue. Pellentesque id arcu nisi. Vivamus porta pharetra condimentum. Sed eros justo, laoreet eget cursus vel, commodo\n        sit amet orci. Vestibulum at tempus ex. Proin ipsum turpis, venenatis at ornare at, rutrum id est. Suspendisse a viverra neque. Vestibulum eu tellus viverra, lacinia nunc eget, auctor est. Mauris et felis a lorem tristique volutpat a in felis.\n        Pellentesque in tristique ligula, sit amet tincidunt velit. Suspendisse erat tellus, congue egestas ultricies vitae, interdum quis ante. Maecenas auctor arcu a quam accumsan, vel condimentum metus aliquam. Nulla condimentum quam magna, in tristique\n        lorem elementum nec. Nunc nisi eros, posuere accumsan nibh vel, porttitor tincidunt lectus. Nulla facilisi. Etiam blandit at magna at eleifend. Quisque tortor diam, malesuada eget dui vel, pretium finibus ipsum. Nullam id mi sagittis, sodales\n        augue id, varius augue.</p>\n</div>\n<div class=\"superPic\">\n    <div>\n        <h3>What are you waiting for?</h3>\n        <h4>Start shopping now!</h4>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { UserModel } from 'src/app/models/user-info';\nimport {baseUrl} from 'src/environments/environment';\nimport swal from 'sweetalert2';\nimport { UserService } from 'src/app/services/user.service';\nimport { Unsubscribe } from 'redux';\nimport { store } from 'src/app/redux/store';\nimport { FormBuilder, AbstractControl, FormGroup, FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit {\n\n  public baseUrl = baseUrl;\n  public userInfo:UserModel = JSON.parse(localStorage.getItem(\"userInfo\"));\n  public fileToUpload:File = null;\n  private unsubscribe: Unsubscribe;\n  public newUserInfo = new UserModel();\n  public oldPassword:string;\n\n  constructor(private userService:UserService,private _router:Router) { }\n\n  ngOnInit() {\n    this.unsubscribe = store.subscribe(() =>{\n      this.userInfo = store.getState().user;\n    })\n    this.newUserInfo = this.userInfo;\n  }\n\n\n  public changeUserDetails(){\n    if(!this.isOldPassValid()){\n      return;\n    }\n    if(!this.isValid()){\n      return;\n    }\n    this.userService.changeUserInformation(this.newUserInfo,null);\n    swal.fire(\n      'Password Changed!',\n      'Please log in again with your new credentials',\n      'success'\n    )\n    localStorage.clear();\n    this._router.navigate([\"/login\"])\n    window.location.reload();\n  }\n\n  public isValid(){\n    return this.passwordFormControl.valid\n  }\n     //validates old password with the server\npublic isOldPassValid(){\n    const userName = this.userInfo.usernameEmail;\n    const pass = this.oldPassword;\n    return this.userService.validateUser(userName,pass).then(answer=>{\n      return answer\n    }).catch(err=>{\n      swal.fire({\n        title: 'Wrong Password',\n        icon: 'error',\n      })\n      return false;\n    })\n  }\n  //uploads the file to the server\n  handleFileInput(files: FileList) {\n    this.fileToUpload = files.item(0);\n    swal.fire({\n      title: 'Upload?',\n      text: \"This will change your profile image\",\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, Upload The Image!'\n    }).then((result) => {\n      if (result.value) {\n        this.userService.changeUserInformation(this.userInfo,this.fileToUpload)\n        swal.fire(\n          'Profile Image Changed!',\n          'You look beautiful :)',\n          'success'\n        )\n      }\n    })\n}\n\npasswordFormControl = new FormControl('', [\n  Validators.required,\n  Validators.minLength(5),\n  Validators.maxLength(15),\n  Validators.pattern(\"^(?=.*[A-Z].*[A-Z])(?=.*[0-9].*[0-9])(?=.*[a-z].*[a-z].*[a-z]).{5,}$\")\n]);\n\noldPasswordFormControl = new FormControl('', [\n  Validators.required\n]);\n\n\nmatcher = new MyErrorStateMatcher();\n}\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n","<h1>My Account</h1>\n\n\n<h3>Click on your picture to change it</h3>\n<div *ngIf=\"userInfo.profileImg !== 'noImageEntered'\">\n    <div class=\"profileImg\" style=\"background-image: url({{baseUrl}}uploads/profile-imgs/{{userInfo.profileImg}});\">\n        <div class=\"imgUpload\" (click)=\"fileInput.click()\">\n            <input #fileInput type=\"file\" (change)=\"handleFileInput($event.target.files)\" style=\"display:none;\" />\n        </div>\n    </div>\n</div>\n<div *ngIf=\"userInfo.profileImg === 'noImageEntered'\">\n    <div class=\"profileImg\">\n        <div class=\"imgUpload\" (click)=\"fileInput.click()\">\n            <input #fileInput type=\"file\" (change)=\"handleFileInput($event.target.files)\" style=\"display:none;\" />\n        </div>\n    </div>\n</div>\n<br><br>\n<div class=\"changeInfo\">\n    <form (ngSubmit)=\"changeUserDetails()\">\n        <h3>Change Password</h3>\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Old Password</mat-label>\n            <input type=\"password\" autocomplete=\"on\" name=\"oldPassword\" matInput [formControl]=\"oldPasswordFormControl\" [errorStateMatcher]=\"matcher\" placeholder=\"Old Password\" [(ngModel)]=\"oldPassword\">\n            <mat-error *ngIf=\"oldPasswordFormControl.hasError('required')\">\n                Old Password is required\n            </mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>New password</mat-label>\n            <input type=\"password\" autocomplete=\"on\" name=\"password\" matInput [formControl]=\"passwordFormControl\" [errorStateMatcher]=\"matcher\" placeholder=\"Must be a strong password\" [(ngModel)]=\"newUserInfo.password\">\n            <mat-error *ngIf=\"passwordFormControl.hasError('minlength')\">\n                Password must be above 5 characters\n            </mat-error>\n            <mat-error *ngIf=\"passwordFormControl.hasError('maxlength')\">\n                Password cannot be above 12 characters\n            </mat-error>\n            <mat-error *ngIf=\"passwordFormControl.hasError('pattern')\">\n                Must contain - Two uppercase letters, three lowercase letters and two numbers.\n            </mat-error>\n            <mat-error *ngIf=\"passwordFormControl.hasError('required')\">\n                Password is required\n            </mat-error>\n        </mat-form-field>\n        <br>\n        <button mat-button type=\"submit\">Submit</button>\n    </form>\n    <br>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { CartItemModel } from 'src/app/models/cart-item-model';\n\n@Component({\n  selector: 'app-add-item',\n  templateUrl: './add-item.component.html',\n  styleUrls: ['./add-item.component.css']\n})\nexport class AddItemComponent implements OnInit {\n\n  public newItem = new CartItemModel();\n  public preSelected = 1;\n\n  constructor(private userServices:UserService,@Inject (MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n    this.newItem.amount = 1;\n  }\n  formatLabel(value:number) {\n    let fixedVal = Math.floor(value);\n    this.newItem.totalPrice = fixedVal;\n    return fixedVal;\n  }\n\n\n  addToCart(){\n     try{\n        this.userServices.addToCart(this.data.cart_id,this.data.product_id,this.newItem);\n      }catch(err){\n        console.log(err.message)\n      }\n  }\n\n \n\n\n\n  amountFormControl = new FormControl('',[\n    Validators.required,\n  ])\n  \n\n   matcher = new MyErrorStateMatcher();\n }\n\n\n\n export class MyErrorStateMatcher implements ErrorStateMatcher {\n   isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n     const isSubmitted = form && form.submitted;\n     return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n   }\n}\n\n","<form class=\"itemForm\" (ngSubmit)=\"addToCart()\">\n    <mat-icon class=\"amountIcon\">widgets</mat-icon>\n    <mat-label style=\"vertical-align: super;\">Amount</mat-label>\n    <br>\n    <span>{{newItem.amount || 1}}</span>\n    <br>\n    <mat-slider min=\"1\" max=\"20\" value=\"1\" step=\"1\" type=\"range\" name=\"productPrice\" matInput [(ngModel)]=\"newItem.amount\" required></mat-slider>\n    <br>\n    <span style=\"vertical-align: super;\">Price - {{formatLabel((this.newItem.amount || 1) * this.data.productPrice)}} &#8362;</span>\n    <br><br>\n    <button mat-button type=\"submit\" [mat-dialog-close]=\"true\">Add Item</button>\n</form>","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { ProductModel } from 'src/app/models/product-model';\nimport { AdminService } from 'src/app/services/admin.service';\n\n@Component({\n  selector: 'app-add-product',\n  templateUrl: './add-product.component.html',\n  styleUrls: ['./add-product.component.css']\n})\nexport class AddProductComponent implements OnInit {\n\n  public newProduct = new ProductModel();\n  public timer = false;\n  public preSelected = '';\n  public categories;\n  public fileToUpload: File = null;\n\n\n  constructor(private adminServices:AdminService) { }\n\n  async ngOnInit() {\n    setTimeout(() => {\n      this.timer = true;\n    }, 2000);\n    this.categories = await this.adminServices.getCategories();\n  }\n\n  isValid(){\n    return this.productNameFormControl.valid\n    && this.priceFormControl.valid\n    &&this.descriptionFormControl.valid\n    &&this.categoryFormControl.valid\n  }\n\n  handleFileInput(files: FileList) {\n    this.fileToUpload = files.item(0);\n}\n\n  add(){\n    try{\n        if(!this.isValid()){\n          return;\n        }\n      this.adminServices.addProduct(this.newProduct,this.fileToUpload);\n    }catch(err){\n      console.log(err.message)\n    }\n  }\n\n  productNameFormControl = new FormControl('',[\n    Validators.required,\n    Validators.minLength(3),\n    Validators.pattern(/^([^0-9]*)$/)\n  ])\n  \n  descriptionFormControl = new FormControl('',[\n    Validators.required,\n    Validators.minLength(20),\n    Validators.maxLength(50)\n  ])\n  \n  priceFormControl = new FormControl('',[\n    Validators.required,\n    Validators.min(1)\n  ])\n  categoryFormControl = new FormControl('',[\n    Validators.required,\n  ])\n  \n  \n   matcher = new MyErrorStateMatcher();\n }\n\n export class MyErrorStateMatcher implements ErrorStateMatcher {\n   isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n     const isSubmitted = form && form.submitted;\n     return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n   }\n}","<div class=\"loading\" *ngIf=\"!timer\">\n    <img src=\"../../../assets/images-and-gifs/shopping-loading.gif\">\n</div>\n<form class=\"example-form\" (ngSubmit)=\"add()\" *ngIf=\"this.timer\">\n\n    <h2 mat-dialog-title>Modify Product</h2>\n    <mat-dialog-content class=\"mat-typography\">\n        <mat-icon> local_grocery_store</mat-icon>\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Product Name</mat-label>\n            <input type=\"text\" name=\"productName\" matInput [formControl]=\"productNameFormControl\" [errorStateMatcher]=\"matcher\" placeholder=\"Ex. Onion\" [(ngModel)]=\"newProduct.productName\">\n            <mat-error *ngIf=\"productNameFormControl.hasError('pattern')\">\n                Cannot contain numbers\n            </mat-error>\n            <mat-error *ngIf=\"productNameFormControl.hasError('required')\">\n                Name is required\n            </mat-error>\n            <mat-error *ngIf=\"productNameFormControl.hasError('minlength')\">\n                Name must be above 3 characters\n            </mat-error>\n        </mat-form-field>\n        <br>\n        <mat-icon>description</mat-icon>\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Description</mat-label>\n            <input type=\"text\" name=\"productDescription\" matInput [formControl]=\"descriptionFormControl\" [errorStateMatcher]=\"matcher\" placeholder=\"Ex. Sweet onions from Ramat hagolan\" [(ngModel)]=\"newProduct.productDescription\">\n            <mat-error *ngIf=\"descriptionFormControl.hasError('required')\">\n                Description is required\n            </mat-error>\n            <mat-error *ngIf=\"descriptionFormControl.hasError('minlength')\">\n                Description must be at least 20 characters\n            </mat-error>\n            <mat-error *ngIf=\"descriptionFormControl.hasError('maxlength')\">\n                Description cannot exceed 50 characters\n            </mat-error>\n        </mat-form-field>\n        <br>\n        <mat-icon>attach_money</mat-icon>\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Price</mat-label>\n            <input type=\"number\" name=\"productPrice\" matInput [formControl]=\"priceFormControl\" [errorStateMatcher]=\"matcher\" placeholder=\"Ex. 15\" [(ngModel)]=\"newProduct.productPrice\">\n            <mat-error *ngIf=\"priceFormControl.hasError('required')\">\n                Price is required\n            </mat-error>\n            <mat-error *ngIf=\"priceFormControl.hasError('min')\">\n                Illegal price\n            </mat-error>\n        </mat-form-field>\n        <br>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Select Category</mat-label>\n            <mat-select [(value)]=\"preSelected\" [(ngModel)]=\"newProduct.categoryId\" name=\"productCategory\" [formControl]=\"categoryFormControl\" [errorStateMatcher]=\"matcher\" required>\n                <mat-option value=''>Select Category</mat-option>\n                <mat-option *ngFor=\"let category of categories.categories\" [value]=\"category._id\">\n                    {{category.categoryName}}\n                </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"categoryFormControl.hasError('required')\">\n                Category Is required\n            </mat-error>\n        </mat-form-field>\n        <br>\n        <mat-label>Upload Photo</mat-label>\n        <br>\n        <button mat-button><input type=\"file\" id=\"file\" (change)=\"handleFileInput($event.target.files)\" name=\"productImage\" accept=\"image/*\" required/></button>\n\n    </mat-dialog-content>\n\n\n    <mat-dialog-actions>\n        <button mat-button mat-dialog-close>Cancel</button>\n        <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial type=\"submit\">Add Product</button>\n    </mat-dialog-actions>\n\n</form>","import { Component, OnInit,OnDestroy } from '@angular/core';\nimport { Unsubscribe } from 'redux';\nimport { store } from 'src/app/redux/store';\nimport {UserService} from '../../services/user.service'\nimport {AdminService} from '../../services/admin.service'\nimport { MatDialog } from '@angular/material/dialog';\nimport { ModifyProductComponent } from '../modify-product/modify-product.component';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {CategoryModel} from '../../models/category-model'\nimport swal from 'sweetalert2';\nimport { AddProductComponent } from '../add-product/add-product.component';\nimport {baseUrl} from 'src/environments/environment'\nimport { ProductModel } from 'src/app/models/product-model';\n\n@Component({\n  selector: 'app-admin-zone',\n  templateUrl: './admin-zone.component.html',\n  styleUrls: ['./admin-zone.component.css']\n})\nexport class AdminZoneComponent implements OnInit,OnDestroy  {\n\n  private unsubscribe: Unsubscribe;\n  public products:ProductModel[];\n  public timer = false\n  public newCategory = new CategoryModel();\n  public baseUrl = baseUrl;\n\n  constructor(private dialog: MatDialog, private userServices:UserService,private adminService:AdminService) { }\n  ngOnDestroy(){\n    this.unsubscribe();\n  }\n\n  public deleteItem(_id){\n    try{\n         this.adminService.deleteProduct(_id);\n    }catch(err){\n      console.log(err)\n    }\n  }\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.timer = true;\n    }, 2000);\n    this.userServices.getProducts()\n    this.unsubscribe = store.subscribe(() => this.products = store.getState().products);\n    this.products = store.getState().products\n  }\n\n  public openDialogModify(product_id,productImg){\n    this.dialog.open(ModifyProductComponent,{\n      data:{\n        _id:product_id,\n        productImg:productImg\n        }\n      });\n  }\n\n  public openDialogAdd(){\n    this.dialog.open(AddProductComponent)\n  }\n\n  submitCategory(){\n    try{\n      if(!this.categoryFormControl.valid){\n        swal.fire({\n          title: 'Error',\n          text: \"Please fix the form\",\n          icon: 'error',\n        })\n        return;\n      }\n      this.adminService.addCategory(this.newCategory);\n      swal.fire({\n        title: 'Success',\n        text: \"Category has been submitted.\",\n        icon: 'success',\n      })\n      this.newCategory.categoryName = '';\n    }catch(err){\n      console.log(err.message)\n    }\n  }\n\n\n\n  categoryFormControl = new FormControl('',[\n    Validators.required,\n    Validators.minLength(5),\n    Validators.maxLength(20)\n  ])\n  \n\n   matcher = new MyErrorStateMatcher();\n }\n\n export class MyErrorStateMatcher implements ErrorStateMatcher {\n   isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n     const isSubmitted = form && form.submitted;\n     return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n   }\n}\n\n","<div class=\"loading\" *ngIf=\"!timer\">\n    <img src=\"../../../assets/images-and-gifs/shopping-loading.gif\">\n</div>\n\n<div *ngIf=\"this.timer\">\n    <h1>Welcome Admin</h1>\n\n    <button class=\"addButton\" mat-button (click)=\"openDialogAdd()\"><h1>Press Here to add a new product to the store</h1></button>\n    <br>\n    <div class=\"addCategory\">\n        <h2>Add a new category</h2>\n        <br>\n        <form (ngSubmit)=\"submitCategory()\">\n            <mat-dialog-content class=\"mat-typography\">\n                <mat-icon> local_grocery_store</mat-icon>\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Category Name</mat-label>\n                    <input type=\"text\" name=\"productName\" matInput [formControl]=\"categoryFormControl\" [errorStateMatcher]=\"matcher\" placeholder=\"Ex. Dairy\" [(ngModel)]=\"newCategory.categoryName\">\n                    <mat-error *ngIf=\"categoryFormControl.hasError('required')\">\n                        Name is required\n                    </mat-error>\n                    <mat-error *ngIf=\"categoryFormControl.hasError('minlength')\">\n                        Name must be above 3 characters\n                    </mat-error>\n                    <mat-error *ngIf=\"categoryFormControl.hasError('maxlength')\">\n                        Name must be below 20 characters\n                    </mat-error>\n                </mat-form-field>\n            </mat-dialog-content>\n            <br>\n            <button mat-button>Submit Name</button>\n        </form>\n\n    </div>\n\n    <h1>Here you can choose an existing item in order to modify or delete it</h1>\n\n    <div class=\"product\" *ngFor=\"let product of products\">\n        <div class=\"productImages\" style=\"background-image: url({{baseUrl}}/uploads/product-imgs/{{product.productImg}});\"></div>\n        <p>{{product.productName}}</p>\n        <br>\n        <p>{{product.productDescription}}</p>\n        <span>{{product.productPrice}} &#8362;</span>\n        <br>\n        <button mat-button (click)=\"openDialogModify(product._id,product.productImg)\">Modify Product</button>\n        <span>|</span>\n        <button mat-button (click)=\"deleteItem(product._id)\">Delete Product</button>\n    </div>\n</div>","import { Component, OnInit,OnDestroy } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport {ProductModel} from '../../models/product-model'\nimport {CartModel} from '../../models/cart-model'\nimport { Unsubscribe } from 'redux';\nimport { store } from 'src/app/redux/store';\nimport { CartItemModel } from 'src/app/models/cart-item-model';\nimport { MatDialog } from '@angular/material/dialog';\nimport {AddItemComponent} from '../add-item/add-item.component'\nimport { AdminService } from 'src/app/services/admin.service';\nimport { UserModel } from 'src/app/models/user-info';\nimport {baseUrl} from 'src/environments/environment'\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit,OnDestroy {\n\n  public products ;\n  public timer = false;\n  private unsubscribe: Unsubscribe;\n  public cart = new CartModel();\n  public cartItems: CartItemModel[];\n  public searchedProducts = [];\n  public itemsPickedByCategory : ProductModel[] = [];\n  public categories;\n  public pickedCategories = [];\n  public userInfo = new UserModel();\n  public totalPrice:number;\n  public menuOpen:boolean;\n  public continueShopMess:string;\n  public firstLogin:string = localStorage.getItem('firstLogin');\n  public baseUrl = baseUrl;\n\n  constructor(private adminServices:AdminService,private dialog: MatDialog,private userServices:UserService) { }\n\n  ngOnDestroy(){\n    this.unsubscribe();\n  }\n\n\n  // This controls searching with categories picked and without categories picked,\n  // If the user selected categories manually and THEN searched, the resulting items will \n  // always be within the related categories.\n  public async searchItem(text){\n    if (text.trim() === \"\") {\n      this.searchedProducts = [];\n      return;\n    }\n    if(this.itemsPickedByCategory.length > 0){\n      try {\n        this.searchedProducts = await this.userServices\n        .searchFilteredProduct(text,this.pickedCategories);\n      }\n    catch (err) {\n        alert(err.message);\n      } \n      return;\n    }else{\n      try {\n        this.searchedProducts = await this.userServices.searchProduct(text);\n        }\n      catch (err) {\n          alert(err.message);\n        } \n    }\n  }\n\n  public openOrCloseMenu(){\n    if(!this.menuOpen){\n      this.menuOpen = true;\n    }else{\n      this.menuOpen = false;\n    }\n  }\n\n  public async pickCategories(value){\n    this.pickedCategories = value\n    this.userServices.getProductsByCategory(value).then((p:any)=>{\n    this.itemsPickedByCategory = p;\n    })\n  }\n\n  //Checks the server for existing cart.\n  //if a cart exists it pulls all the related items \n  //if no cart exists it creates a new cart \n  public async getCartItems(){\n    if(this.cart){\n      return;\n    }\n    this.userServices.checkIfCartExists().then(async()=>{\n      if(this.cart !== null){\n        if(this.firstLogin === 'true'){\n          this.continueShopMess = 'showMess'\n          setTimeout(() => {\n            this.continueShopMess = 'hideMess'\n          }, 5000);\n        }\n        if(this.cart.payedAndCompleted){\n          await this.userServices.createCart().then(()=> {\n            this.cart = store.getState().cart\n          });\n        }\n        this.userServices.getExistingItemsToCart(this.cart._id)\n      }\n    });\n  }\n\n  async ngOnInit() {\n    setTimeout(() => {\n      this.timer = true\n    }, 2000);\n    this.categories = await this.adminServices.getCategories();\n    this.userServices.getProducts();\n    this.unsubscribe = store.subscribe(() =>{\n      this.cart = store.getState().cart;\n      this.products = store.getState().products;\n      this.cartItems = store.getState().cartItems;\n      this.userInfo = store.getState().user;\n      this.totalPrice = store.getState().totalToPay;\n    });\n    this.cart = store.getState().cart;\n    this.products = store.getState().products;\n    this.cartItems = store.getState().cartItems;\n    this.userInfo = store.getState().user;\n    this.getCartItems();\n    setTimeout(() => {\n      localStorage.setItem('firstLogin','false');\n    }, 5000);\n  }\n\n  //if the cart drops to zero products it auto deletes, when the user selects a new product \n  //A new cart will be created\n  public removeItemFromCart(item_id,totalPrice){\n    const _id = this.cart._id;\n      this.userServices.removeFromCart(item_id,totalPrice,this.cart._id);\n  }\n\n  public removeCart(){\n      this.userServices.removeCart(this.cart._id);\n  }\n\n  //Opens a dialog modal to insert a new item to the cart, uses data as transfer object.\n  public async openDialogAddItem(product_id,productPrice){\n    try{\n      if(this.cart === null){\n        await this.userServices.createCart().then(()=> this.cart = store.getState().cart);\n      }\n      const addItem = this.dialog.open(AddItemComponent,{\n        data:{\n          product_id:product_id,\n          cart_id:this.cart._id,\n          productPrice:productPrice\n          }\n      });\n      return addItem.afterClosed().subscribe(()=>{\n        if(this.cartItems.length === 0){\n          this.userServices.removeCart(this.cart._id)\n        }\n      });\n    }catch(err){\n      console.log(err.message)\n    }\n  }\n\n}\n","<div class=\"loading\" *ngIf=\"!timer\">\n    <img src=\"../../../assets/images-and-gifs/shopping-loading.gif\">\n</div>\n<div *ngIf=\"timer\">\n    <div class=\"homeHeader\">\n        <h3>Shipping now available throughout Israel</h3>\n        <h6>Ships within a minimum of 3 business days from order placement</h6>\n    </div>\n    <div [ngClass]=\"firstLogin === 'true' && cart? continueShopMess:'shopMess'\">We have saved your recent shopping list.</div>\n    <div class=\"productSection\">\n        <div class=\"productNavBar\">\n            <mat-form-field class=\"searchFiled\">\n                <mat-label>Search Product</mat-label>\n                <input type=\"text\" matInput (input)=\"searchItem($event.target.value)\">\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Select Category</mat-label>\n                <mat-select name=\"productCategory\" multiple (valueChange)=\"pickCategories($event)\">\n                    <mat-option value=''>Select Category</mat-option>\n                    <mat-option *ngFor=\"let category of categories.categories\" [value]=\"category._id\">\n                        {{category.categoryName}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div *ngIf=\"this.searchedProducts.length === 0 \n        && this.itemsPickedByCategory.length === 0\">\n            <div class=\"product\" *ngFor=\"let product of products\">\n                <div class=\"productImages\" style=\"background-image: url({{baseUrl}}uploads/product-imgs/{{product.productImg}});\"></div>\n                <p>{{product.productName}}</p>\n                <br>\n                <p>{{product.productDescription}}</p>\n                <div class=\"addAndPriceMenu\">\n                    <span class=\"productPrice\">{{product.productPrice}} &#8362;</span>\n                    <br>\n                    <button class=\"addButton\" (click)=\"openDialogAddItem(product._id,product.productPrice)\" mat-button><mat-icon>add</mat-icon></button>\n                </div>\n            </div>\n        </div>\n        <div *ngIf=\"this.searchedProducts.length > 0\">\n            <div class=\"product\" *ngFor=\"let product of searchedProducts\">\n                <div class=\"productImages\" style=\"background-image: url({{baseUrl}}uploads/product-imgs/{{product.productImg}});\"></div>\n                <p>{{product.productName}}</p>\n                <br>\n                <p>{{product.productDescription}}</p>\n                <div class=\"addAndPriceMenu\">\n                    <span class=\"productPrice\">{{product.productPrice}} &#8362;</span>\n                    <br>\n                    <button class=\"addButton\" (click)=\"openDialogAddItem(product._id,product.productPrice)\" mat-button><mat-icon>add</mat-icon></button>\n                </div>\n            </div>\n        </div>\n        <div *ngIf=\"this.searchedProducts.length === 0\">\n            <div class=\"product\" *ngFor=\"let product of itemsPickedByCategory\">\n                <div class=\"productImages\" style=\"background-image: url({{baseUrl}}uploads/product-imgs/{{product.productImg}});\"></div>\n                <p>{{product.productName}}</p>\n                <br>\n                <p>{{product.productDescription}}</p>\n                <div class=\"addAndPriceMenu\">\n                    <span class=\"productPrice\">{{product.productPrice}} &#8362;</span>\n                    <br>\n                    <button class=\"addButton\" (click)=\"openDialogAddItem(product._id,product.productPrice)\" mat-button><mat-icon>add</mat-icon></button>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"cartSection\" [ngClass]=\"menuOpen? 'menuOpen':'menuClosed'\">\n        <h3>- Items In Cart - </h3>\n        <br>\n        <div class=\"itemContainer\">\n            <div class=\"item\" *ngFor=\"let item of cartItems\">\n                <div class=\"itemImage\" style=\"background-image: url({{baseUrl}}uploads/product-imgs/{{item.productId.productImg}});\"></div>\n                <div class=\"ItemInfo\">\n                    <p>{{item.productId.productName}}</p>\n                    <p class=\"itemAmount\">Amount - {{item.amount}}</p>\n                    <br>\n                    <p>{{item.totalPrice}} &#8362;</p>\n                </div>\n                <button class=\"removeButt\" mat-button (click)=\"removeItemFromCart(item._id,item.totalPrice)\">Remove<mat-icon>close</mat-icon></button>\n                <br>\n            </div>\n        </div>\n        <button class=\"removeCartButt\" *ngIf=\"this.cart\" mat-button (click)=\"removeCart()\">\n            Delete Cart\n            <mat-icon>remove_shopping_cart</mat-icon>\n        </button>\n        <div class=\"total\">\n            <span>|</span>\n            <h3>Total:{{totalPrice}} </h3>\n            <span>|</span>\n        </div>\n        <button class=\"orderCart\" *ngIf=\"this.cart\" mat-button>\n            <a class=\"cartLink\" mat-button routerLink=\"/reviewOrder\">Place Order</a>\n            <mat-icon>shopping_cart</mat-icon>\n        </button>\n    </div>\n    <button [ngClass]=\"menuOpen? 'menuButtonOpen':'menuButtonClose'\" mat-button class=\"mobileItemMenuButton\" (click)=\"openOrCloseMenu()\"> &#10575; Items</button>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {UserService} from '../../services/user.service'\nimport { Router } from '@angular/router';\nimport { Unsubscribe } from 'redux';\nimport { store } from 'src/app/redux/store';\nimport { UserModel } from 'src/app/models/user-info';\nimport {baseUrl} from 'src/environments/environment';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements OnInit, OnDestroy {\n\n  public adminAnswer;\n  public userInfo:UserModel\n  private unsubscribe: Unsubscribe;\n  public baseUrl = baseUrl;\n\n  constructor(private _router:Router, private userServices:UserService) { }\n\n  ngOnDestroy(){\n    this.unsubscribe();\n  }\n\n  async ngOnInit() {\n    this.unsubscribe = store.subscribe(() => {\n      this.userInfo = store.getState().user;\n      this.adminAnswer = store.getState().isAdmin;\n    });\n    this.userInfo = store.getState().user;\n    this.adminAnswer = store.getState().isAdmin;\n    this.adminCheck();\n  }\n\n  async adminCheck(){\n    const user = this.userInfo\n    if(user === null){\n      return;\n    }\n      this.adminAnswer = this.userServices.isAdmin();\n  }\n\n\n  isLogged(){\n    const token = localStorage.getItem('token');\n    if(token){\n      return true\n    }\n    return false\n  } \n\n  logout(){\n    localStorage.clear()\n    this._router.navigate([\"/login\"])\n    window.location.reload();\n  }\n\n}\n","<div class=\"menuBarDesktop\">\n  <mat-toolbar>\n\n    <a class=\"logo\" routerLink=\"/home\"></a>\n    <span *ngIf=\"isLogged() && adminAnswer\">|</span>\n    <h3 *ngIf=\"isLogged() && adminAnswer\"><a routerLink=\"/admin\">Admin Zone</a></h3>\n    <span *ngIf=\"isLogged()\">|</span>\n    <h3 *ngIf=\"isLogged()\"><a routerLink=\"/orderHistory\">Order History</a></h3>\n    <span *ngIf=\"isLogged()\">|</span>\n    <h3 *ngIf=\"isLogged()\"><a routerLink=\"/about\">Our Story</a></h3>\n    <span *ngIf=\"isLogged()\">|</span>\n    <h3 *ngIf=\"isLogged()\"><a routerLink=\"/account\">My Account</a></h3>\n  </mat-toolbar>\n  <div class=\"siteInfo\" *ngIf=\"isLogged()\">\n    <div class=\"imgCont\" *ngIf=\"userInfo.profileImg !== 'noImageEntered'\">\n      <div class=\"profileImg\" style=\"background-image: url({{baseUrl}}uploads/profile-imgs/{{userInfo.profileImg}});\">\n      </div>\n    </div>\n    <span class=\"displayedUsername\">Hello {{userInfo.firstName}}</span>\n    <button *ngIf=\"isLogged()\" (click)=\"logout()\" class=\"desktopLogout\">\n      <mat-icon>exit_to_app</mat-icon>\n      <span><a>Logout</a></span>\n    </button>\n    <a href=\"#\">\n      <div class=\"instagramLogo\"></div>\n    </a>\n    <a href=\"#\">\n      <div class=\"facebookLogo\"></div>\n    </a>\n  </div>\n</div>\n\n<h1 class=mobileTitle>Sky Buy</h1>\n\n<button *ngIf=\"isLogged()\" mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\"\n  class=\"menuBarMobile\">\n  <mat-icon class=\"menuIcon\">menu</mat-icon>\n</button>\n<mat-menu class=\"menuSize\" #menu=\"matMenu\">\n  <button mat-menu-item>\n    <mat-icon>home</mat-icon>\n    <span><a routerLink=\"/home\">Sky Buy</a></span>\n  </button>\n  <button mat-menu-item *ngIf=\"isLogged()\">\n    <mat-icon>account_box</mat-icon>\n    <span><a routerLink=\"/account\">My Account</a></span>\n  </button>\n  <button mat-menu-item *ngIf=\"isLogged() && adminAnswer\">\n    <mat-icon>lock_open</mat-icon>\n    <span><a routerLink=\"/admin\">Admin Zone</a></span>\n  </button>\n  <button mat-menu-item *ngIf=\"isLogged()\">\n    <mat-icon>book</mat-icon>\n    <span><a routerLink=\"/about\">Our Story</a></span>\n  </button>\n  <button mat-menu-item *ngIf=\"isLogged()\">\n    <mat-icon>history</mat-icon>\n    <span><a routerLink=\"/orderHistory\">Order history</a></span>\n  </button>\n  <button mat-menu-item (click)=\"logout()\" *ngIf=\"isLogged()\">\n    <mat-icon>exit_to_app</mat-icon>\n    <span><a routerLink=\"/about\">Logout</a></span>\n  </button>\n</mat-menu>\n\n\n<router-outlet></router-outlet>","import { Component } from '@angular/core';\nimport {UserModel} from '../../models/user-info'\nimport { UserService } from 'src/app/services/user.service';\nimport { Router } from '@angular/router';\nimport swal from 'sweetalert2';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent   {\n\n  public user = new UserModel();\n  public loginInfo\n\n\n  constructor(private userServices: UserService,private _router:Router) { }\n\n\n\n  async login(){\n    try{\n      if(!this.validForm()){\n        return;\n      }\n      this.loginInfo = await this.userServices.Login(this.user);\n    }catch(err){\n      if(err.status === 401){\n        swal.fire({\n          title: 'Wrong Credentials',\n          text: \"Please try again :)\",\n          icon: 'error',\n        })\n      }\n      console.log(err.message)\n    }\n  }\n\n  validForm(){\n    return this.usernameFormControl.valid\n    && this.passwordFormControl.valid\n  }\n  usernameFormControl = new FormControl('', [\n    Validators.required\n\n  ]);\n  passwordFormControl = new FormControl('', [\n    Validators.required\n  ]);\n\n\n  matcher = new MyErrorStateMatcher();\n\n\n}\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n","<h3>Login</h3>\n\n\n<form class=\"example-form\" (ngSubmit)=\"login()\">\n    <mat-form-field class=\"example-full-width\">\n        <mat-label>Username</mat-label>\n        <input type=\"email\" autofocus [formControl]=\"usernameFormControl\" [errorStateMatcher]=\"matcher\" required matInput name='email' [(ngModel)]=\"user.usernameEmail\">\n        <mat-error *ngIf=\"usernameFormControl.hasError('required')\">\n            Username Is required\n        </mat-error>\n    </mat-form-field>\n    <br>\n    <mat-form-field class=\"example-full-width\">\n        <mat-label>Password</mat-label>\n        <input required [formControl]=\"passwordFormControl\" [errorStateMatcher]=\"matcher\" matInput type=\"password\" name=\"password\" autocomplete=\"on\" [(ngModel)]=\"user.password\">\n        <mat-error *ngIf=\"passwordFormControl.hasError('required')\">\n            Password Is required\n        </mat-error>\n    </mat-form-field>\n    <br>\n    <button mat-button type=\"submit\" class=\"login\">Login</button>\n\n    <p>Not a user?</p>\n    <a mat-button routerLink=\"/register\" class=\"register\">Register!</a>\n</form>","import { Component, OnInit, Inject } from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { ProductModel } from 'src/app/models/product-model';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-modify-product',\n  templateUrl: './modify-product.component.html',\n  styleUrls: ['./modify-product.component.css']\n})\nexport class ModifyProductComponent implements OnInit {\n\npublic product = new ProductModel();\npublic preSelected = ''\npublic categories \npublic timer = false;\nfileToUpload: File = null;\n\n  constructor(private adminServices:AdminService, @Inject (MAT_DIALOG_DATA) public data: any) { }\n\n  async ngOnInit() {\n    setTimeout(() => {\n      this.timer = true;\n    }, 2000);\n    this.categories = await this.adminServices.getCategories();\n  }\n\n  handleFileInput(files: FileList) {\n    this.fileToUpload = files.item(0);\n}\n\n\n  async modify(){\n    try{\n        this.product._id = this.data._id;\n        this.product.productImg = this.data.productImg;\n        this.adminServices.modifyProduct(this.product,this.fileToUpload);\n    }catch(err){\n      console.log(err.message)\n    }\n  }\n\n  productNameFormControl = new FormControl('',[\n    Validators.minLength(3),\n    Validators.pattern(/^([^0-9]*)$/)\n  ])\n  \n  descriptionFormControl = new FormControl('',[\n    Validators.minLength(20),\n  ])\n  \n  priceFormControl = new FormControl('',[\n    Validators.min(1)\n  ])\n  categoryFormControl = new FormControl('',[\n  ])\n  \n\n   matcher = new MyErrorStateMatcher();\n }\n\n export class MyErrorStateMatcher implements ErrorStateMatcher {\n   isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n     const isSubmitted = form && form.submitted;\n     return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n   }\n}\n\n","<div class=\"loading\" *ngIf=\"!timer\">\n    <img src=\"../../../assets/images-and-gifs/shopping-loading.gif\">\n</div>\n<form class=\"example-form\" (ngSubmit)=\"modify()\" *ngIf=\"this.timer\">\n\n    <h2 mat-dialog-title>Modify Product</h2>\n    <mat-dialog-content class=\"mat-typography\">\n        <mat-icon> local_grocery_store</mat-icon>\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Product Name</mat-label>\n            <input type=\"text\" name=\"productName\" matInput [formControl]=\"productNameFormControl\" [errorStateMatcher]=\"matcher\" placeholder=\"Ex. Onion\" [(ngModel)]=\"product.productName\">\n            <mat-error *ngIf=\"productNameFormControl.hasError('pattern')\">\n                Cannot contain numbers\n            </mat-error>\n            <mat-error *ngIf=\"productNameFormControl.hasError('minlength')\">\n                Name must be above 3 characters\n            </mat-error>\n        </mat-form-field>\n        <br>\n        <mat-icon>description</mat-icon>\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Description</mat-label>\n            <input type=\"text\" name=\"productDescription\" matInput [formControl]=\"descriptionFormControl\" [errorStateMatcher]=\"matcher\" placeholder=\"Ex. Sweet onions from Ramat hagolan\" [(ngModel)]=\"product.productDescription\">\n            <mat-error *ngIf=\"descriptionFormControl.hasError('minlength')\">\n                Description must be at least 20 characters\n            </mat-error>\n        </mat-form-field>\n        <br>\n        <mat-icon>attach_money</mat-icon>\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Price</mat-label>\n            <input type=\"number\" name=\"productPrice\" matInput [formControl]=\"priceFormControl\" [errorStateMatcher]=\"matcher\" placeholder=\"Ex. 15\" [(ngModel)]=\"product.productPrice\">\n            <mat-error *ngIf=\"priceFormControl.hasError('min')\">\n                Illegal price\n            </mat-error>\n        </mat-form-field>\n        <br>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Select Category</mat-label>\n            <mat-select [(value)]=\"preSelected\" [(ngModel)]=\"product.categoryId\" name=\"productCategory\" [formControl]=\"categoryFormControl\" [errorStateMatcher]=\"matcher\">\n                <mat-option value=''>Select Category</mat-option>\n                <mat-option *ngFor=\"let category of categories.categories\" [value]=\"category._id\">\n                    {{category.categoryName}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <br>\n        <button mat-button><input type=\"file\" id=\"file\" (change)=\"handleFileInput($event.target.files)\" name=\"productImage\" accept=\"image/*\"/></button>\n    </mat-dialog-content>\n\n\n    <mat-dialog-actions>\n        <button mat-button mat-dialog-close>Cancel</button>\n        <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial type=\"submit\">Modify</button>\n    </mat-dialog-actions>\n\n</form>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { Unsubscribe } from 'redux';\nimport { store } from 'src/app/redux/store';\nimport { OrderModel } from 'src/app/models/order-model';\nimport { CartItemModel } from 'src/app/models/cart-item-model';\nimport { PdfGenService } from 'src/app/services/pdf-gen.service';\n\n\n@Component({\n  selector: 'app-order-history',\n  templateUrl: './order-history.component.html',\n  styleUrls: ['./order-history.component.css']\n})\nexport class OrderHistoryComponent implements OnInit, OnDestroy {\n\n  private unsubscribe: Unsubscribe;\n  public orders:OrderModel[] = [];\n  public timer:boolean = false;\n  public pickedOrderItems:CartItemModel[];\n  public pickedOrder:OrderModel;\n  public orderSwitch:boolean;\n\n  constructor(private userServices:UserService, private pdfService:PdfGenService) { }\n\n\n  //get all related (finished) orders of the user\n  ngOnInit() {\n    setTimeout(() => {\n      this.timer = true;\n    }, 2000);\n    this.unsubscribe = store.subscribe(() =>{\n      this.orders = store.getState().orders;\n    });\n    this.userServices.getOrders();\n  }\n  ngOnDestroy(){\n    this.unsubscribe()\n  }\n\n  //gets order information from the DB\n  public openOrder(order){\n    this.orderSwitch = true;\n    setTimeout(() => {\n      this.orderSwitch = false;\n    }, 1000);\n    this.pickedOrder = order;\n      this.userServices.getCompletedOrderItems(order.shoppingCartId).then(items=>{\n        this.pickedOrderItems = items;\n      })\n  }\n  public getReceipt(order){\n    this.pdfService.generatePdf(order,this.pickedOrderItems)\n  }\n\n}\n","<h2>Below you can see the your purchasing history.</h2>\n\n<div *ngIf=\"orders.length === 0\">\n    <h1>You have no recent orders...</h1>\n</div>\n<div *ngIf=\"orders.length !== 0\">\n    <div class=\"orderList\">\n        <div class=\"order\" *ngFor=\"let order of orders\" (click)=\"openOrder(order)\">\n            <p>Order Number: {{order._id}}</p>\n            <p>Order Date: {{order.orderCreationDate}}</p>\n            <br>\n            <p>Total payed: {{order.totalPrice}} &#8362;</p>\n            <p>Delivery Date: {{order.shippingDate}}</p>\n        </div>\n    </div>\n\n    <div class=\"pickedOrder\">\n        <h2 class=\"noOrder\" *ngIf=\"!pickedOrderItems\">Click on one of the orders for a detailed info</h2>\n        <div class=\"orderContainer\" *ngIf=\"pickedOrderItems\" [ngClass]=\"orderSwitch?'orderSwitch':null\">\n            <h2>Order Details</h2>\n            <div class=\"enlargeOrder\" *ngFor=\"let item of pickedOrderItems\">\n                <p style=\"margin-left: 10px;\">- {{item.productId.productName}} </p>\n                <p>Amount: {{item.amount}}</p>\n                <p> - {{item.totalPrice}} &#8362;</p>\n            </div>\n            <div class=\"pickedTotal\">Total: {{pickedOrder.totalPrice}} &#8362;</div>\n            <button class=\"receiptButt\" mat-button (click)=\"getReceipt(pickedOrder)\">Get Receipt</button>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport pdfMake from 'pdfmake/build/pdfmake';\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { UserService } from 'src/app/services/user.service'; \nimport { PdfGenService } from 'src/app/services/pdf-gen.service'; \nimport { Router } from '@angular/router';\npdfMake.vfs = pdfFonts.pdfMake.vfs;\n\n@Component({\n  selector: 'app-place-order',\n  templateUrl: './place-order.component.html',\n  styleUrls: ['./place-order.component.css']\n})\nexport class PlaceOrderComponent implements OnInit {\n\n  public correctDate;\n  public timer:number = 3;\n\n\n  constructor(private pdfGen:PdfGenService, private userServices:UserService,@Inject (MAT_DIALOG_DATA) public data: any,private _router:Router) { }\n\n  //opens a dialog window with a timer,\n  //after timer runs out a receipt is represented to the user.\n  ngOnInit(): void {\n    this.correctDate = this.data.order.addedOrder.shippingDate\n      .substring(0, this.data.order.addedOrder.shippingDate.indexOf('T'));\n      setInterval(() => {\n        if(this.timer === 0){\n          return;\n        }\n        this.timer = this.timer - 1;\n      }, 1000);\n      setTimeout(() => {\n        this.pdfGen.generatePdf(this.data.order.addedOrder,this.data.products);\n        this.userServices.completeOrder(this.data.cart);\n        this._router.navigate(['/home'])\n      }, 3000);\n  }\n\n\n}\n","<h1>\n\n    Your Order has been processed</h1>\n<h4>A SkyBuy delivery personal will deliver your order at {{correctDate}} </h4>\n<h4>You receipt will be available in {{timer}}</h4>\n\n<h3>You can View all your orders in the My Orders tab.</h3>\n<button mat-button [mat-dialog-close]=\"true\">O.K</button>","import { Component, OnInit } from '@angular/core';\nimport { UserModel } from 'src/app/models/user-info';\nimport { UserService } from 'src/app/services/user.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, AbstractControl, FormGroup, FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport swal from 'sweetalert2';\n\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit  {\n\n  public newUser = new UserModel();\n  public userInfo;\n  public cities;\n  public preSelected = '';\n  public startTimer = false;\n  public secondStage = false;\n  public fileToUpload: File = null;\n\n  constructor( private userServices:UserService, private _router:Router) { }\n\n\n  async ngOnInit(){\n    setTimeout(() => {\n      this.startTimer = true\n    }, 2000);\n    this.cities = await this.userServices.getCityList();\n  }\n\n   passwordValidator(control: FormControl) {\n     const  confirm = control.value;\n     const password = this.passwordFormControl.value;\n      if( confirm !== password){\n        return  {\n          error:{\n            matchError:\"PassWordMisMatch\"\n          }\n        }\n      }\n      return null;\n  }\n\n  handleFileInput(files: FileList) {\n    this.fileToUpload = files.item(0);\n  }\n\n  async validateFirstStage(){\n    if(!this.validFirstStage()){\n      return\n    }\n    else{\n      try{\n          await this.userServices.validateRegister(this.newUser.usernameEmail).then(e=>{\n            console.log(e)\n          });\n      }catch(err){\n        if(err.status === 403){\n          swal.fire({\n            title: 'Please try again',\n            text: \"A user with this email address already exists\",\n            icon: 'error',\n            confirmButtonText: 'O.K'\n          })\n        }\n        console.log(err.message)\n        return;\n      }\n      this.startTimer = false;\n      setTimeout(() => {\n        this.startTimer = true;\n        this.secondStage = true;\n      }, 2000);\n    }\n  }\n\n  async register(){\n    try{\n      if(!this.validForm()){\n        return;\n      }\n      this.userInfo = await this.userServices.register(this.newUser,this.fileToUpload);\n    }catch(err){\n      if(err.status === 403){\n        swal.fire({\n          title: 'Please try again',\n          text: \"A user with this email address already exists\",\n          icon: 'error',\n          confirmButtonText: 'O.K'\n        })\n      }\n      console.log(err.message)\n    }\n  }\n\n  validForm(){\n    return this.usernameFormControl.valid\n    && this.passwordFormControl.valid\n    && this.IdentificationNumberFormControl.valid\n    && this.firstNameFormControl.valid\n    &&this.lastNameFormControl.valid\n    && this.addressCityFormControl.valid\n    && this.addressStreetFormControl.valid\n    && this.ZipFormControl.valid\n    && this.confirmPassFormControl.valid\n\n  }\n\n  validFirstStage(){\n    return this.usernameFormControl.valid\n    && this.passwordFormControl.valid\n    && this.IdentificationNumberFormControl.valid\n    && this.confirmPassFormControl.valid\n  }\n\n\n   usernameFormControl = new FormControl('', [\n     Validators.required,\n     Validators.pattern(\"^.+\\@.+\\..+$\")\n   ]);\n\n   passwordFormControl = new FormControl('', [\n     Validators.required,\n     Validators.minLength(5),\n     Validators.maxLength(15),\n     Validators.pattern(\"^(?=.*[A-Z].*[A-Z])(?=.*[0-9].*[0-9])(?=.*[a-z].*[a-z].*[a-z]).{5,}$\")\n   ]);\n\n   firstNameFormControl = new FormControl('', [\n     Validators.required,\n     Validators.minLength(3),\n     Validators.pattern(\"^[A-Z][A-z]{2,}$\"),\n   ]);\n\n   lastNameFormControl = new FormControl('', [\n    Validators.required,\n    Validators.minLength(3),\n  ]);\n\n  IdentificationNumberFormControl = new FormControl('',[\n    Validators.required,\n    Validators.minLength(9),\n    Validators.maxLength(9),\n    Validators.pattern(\"^(0|[1-9][0-9]*)$\")\n  ])\n\n  addressCityFormControl = new FormControl('',[\n    Validators.required\n  ])\n  addressStreetFormControl = new FormControl('',[\n    Validators.required\n  ])\n  ZipFormControl = new FormControl('',[\n    Validators.required,\n    Validators.min(1),\n    Validators.minLength(5)\n  ])\n  confirmPassFormControl = new FormControl('',[\n    Validators.required,\n    this.passwordValidator.bind(this)\n  ])\n\n\n\n\n   matcher = new MyErrorStateMatcher();\n }\n\n export class MyErrorStateMatcher implements ErrorStateMatcher {\n   isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n     const isSubmitted = form && form.submitted;\n     return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n   }\n}\n\n","<div class=\"loading\" *ngIf=\"!this.startTimer\">\n    <img src=\"../../../assets/images-and-gifs/shopping-loading.gif\">\n</div>\n\n<form class=\"example-form\" (ngSubmit)=\"register()\" *ngIf=\"this.startTimer\">\n    <h1>Welcome To SkyBuy</h1>\n    <h2>Please fill out the registration form below to create a new user</h2>\n    <div class=\"firstStage\" *ngIf=\"!secondStage\">\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Username</mat-label>\n            <input type=\"text\" name=\"usernameEmail\" matInput [formControl]=\"usernameFormControl\" [errorStateMatcher]=\"matcher\" placeholder=\"Ex. John12@example.com\" [(ngModel)]=\"newUser.usernameEmail\">\n            <mat-error *ngIf=\"usernameFormControl.hasError('pattern')\">\n                Illegal email address\n            </mat-error>\n            <mat-error *ngIf=\"usernameFormControl.hasError('required')\">\n                Username is required\n            </mat-error>\n        </mat-form-field>\n        <br>\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Password</mat-label>\n            <input type=\"password\" autocomplete=\"on\" name=\"password\" matInput [formControl]=\"passwordFormControl\" [errorStateMatcher]=\"matcher\" placeholder=\"Must be a strong password\" [(ngModel)]=\"newUser.password\">\n            <mat-error *ngIf=\"passwordFormControl.hasError('minlength')\">\n                Password must be above 5 characters\n            </mat-error>\n            <mat-error *ngIf=\"passwordFormControl.hasError('maxlength')\">\n                Password cannot be above 12 characters\n            </mat-error>\n            <mat-error *ngIf=\"passwordFormControl.hasError('pattern')\">\n                Must contain - Two uppercase letters, three lowercase letters and two numbers.\n            </mat-error>\n            <mat-error *ngIf=\"passwordFormControl.hasError('required')\">\n                Password is required\n            </mat-error>\n        </mat-form-field>\n        <br>\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Repeat Password</mat-label>\n            <input type=\"password\" autocomplete=\"on\" name=\"password\" matInput [formControl]=\"confirmPassFormControl\" [errorStateMatcher]=\"matcher\" placeholder=\"Must Match Password\">\n            <mat-error *ngIf=\"confirmPassFormControl.hasError('required')\">\n                Password is required\n            </mat-error>\n            <mat-error *ngIf=\"confirmPassFormControl.hasError('error')\">\n                Passwords Do Not Match\n            </mat-error>\n        </mat-form-field>\n        <br>\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Identification Number</mat-label>\n            <input type=\"text\" matInput [formControl]=\"IdentificationNumberFormControl\" name=\"IdentificationNumber\" [errorStateMatcher]=\"matcher\" placeholder=\"Ex. 123456789\" [(ngModel)]=\"newUser.IdentificationNumber\">\n            <mat-error *ngIf=\"IdentificationNumberFormControl.hasError('minlength')\">\n                Illegal ID\n            </mat-error>\n            <mat-error *ngIf=\"IdentificationNumberFormControl.hasError('maxlength')\">\n                Illegal ID\n            </mat-error>\n            <mat-error *ngIf=\"IdentificationNumberFormControl.hasError('required')\">\n                ID is required.\n            </mat-error>\n            <mat-error *ngIf=\"IdentificationNumberFormControl.hasError('pattern')\">\n                No letters allowed\n            </mat-error>\n        </mat-form-field>\n        <br>\n        <h3>Optional Profile Image:</h3>\n        <button mat-button><input type=\"file\" id=\"file\" (change)=\"handleFileInput($event.target.files)\" name=\"profileImg\" accept=\"image/*\" /></button>\n        <br><br>\n        <button mat-button (click)=\"validateFirstStage()\">Next</button>\n    </div>\n    <div class=\"secondStage\" *ngIf=\"secondStage\">\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>First Name</mat-label>\n            <input type=\"text\" matInput [formControl]=\"firstNameFormControl\" name=\"firstName\" [errorStateMatcher]=\"matcher\" placeholder=\"Ex. John\" [(ngModel)]=\"newUser.firstName\">\n            <mat-error *ngIf=\"firstNameFormControl.hasError('minlength')\">\n                Name Must be 3 characters or more.\n            </mat-error>\n            <mat-error *ngIf=\"firstNameFormControl.hasError('pattern')\">\n                Name Must start with a capital letter.\n            </mat-error>\n            <mat-error *ngIf=\"firstNameFormControl.hasError('required')\">\n                First name is required.\n            </mat-error>\n        </mat-form-field>\n        <br>\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Last Name</mat-label>\n            <input type=\"text\" matInput [formControl]=\"lastNameFormControl\" [errorStateMatcher]=\"matcher\" name=\"lastName\" placeholder=\"Ex. Shelby\" [(ngModel)]=\"newUser.lastName\">\n            <mat-error *ngIf=\"lastNameFormControl.hasError('minlength')\">\n                Name Must be 3 characters or more.\n            </mat-error>\n            <mat-error *ngIf=\"lastNameFormControl.hasError('required')\">\n                Last name is required.\n            </mat-error>\n        </mat-form-field>\n        <br>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Select City</mat-label>\n            <mat-select [(value)]=\"preSelected\" [(ngModel)]=\"newUser.address.city\" name=\"city\" [formControl]=\"addressCityFormControl\" [errorStateMatcher]=\"matcher\" required>\n                <mat-option value=''>Select City</mat-option>\n                <mat-option *ngFor=\"let city of this.cities.result.records\" [value]=\"city.Name\">\n                    {{city.Name}}\n                </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"addressCityFormControl.hasError('required')\">\n                City Is required\n            </mat-error>\n        </mat-form-field>\n        <br>\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Street</mat-label>\n            <input type=\"text\" matInput [formControl]=\"addressStreetFormControl\" name=\"street\" [errorStateMatcher]=\"matcher\" placeholder=\"Ex. Samson Hgibor 41\" [(ngModel)]=\"newUser.address.street\">\n            <mat-error *ngIf=\"addressStreetFormControl.hasError('required')\">\n                Street is required\n            </mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Zip Number</mat-label>\n            <input type=\"text\" matInput [formControl]=\"ZipFormControl\" name=\"street\" [errorStateMatcher]=\"matcher\" placeholder=\"12345\" [(ngModel)]=\"newUser.address.zip\">\n            <mat-error *ngIf=\"ZipFormControl.hasError('required')\">\n                Zip is required\n            </mat-error>\n            <mat-error *ngIf=\"ZipFormControl.hasError('min')\">\n                Illegal zip\n            </mat-error>\n            <mat-error *ngIf=\"ZipFormControl.hasError('minlength')\">\n                Illegal zip\n            </mat-error>\n        </mat-form-field>\n        <br><br>\n        <button type=\"submit\" mat-button class=\"register\">Register</button>\n    </div>\n    <br><br>\n    <p>Already a user?</p>\n    <a mat-button routerLink=\"/login\" class=\"login\">Login!</a>\n</form>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Unsubscribe } from 'redux';\nimport { store } from 'src/app/redux/store';\nimport { CartItemModel } from 'src/app/models/cart-item-model';\nimport { UserService } from 'src/app/services/user.service';\nimport { CartModel } from 'src/app/models/cart-model';\nimport { OrderModel } from 'src/app/models/order-model';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { UserModel } from 'src/app/models/user-info';\nimport swal from 'sweetalert2';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PlaceOrderComponent } from '../place-order/place-order.component';\nimport { Router } from '@angular/router';\nimport {baseUrl} from 'src/environments/environment';\n@Component({\n  selector: 'app-review-order',\n  templateUrl: './review-order.component.html',\n  styleUrls: ['./review-order.component.css']\n})\nexport class ReviewOrderComponent implements OnInit, OnDestroy {\n\n  private unsubscribe: Unsubscribe;\n  public order = new OrderModel();\n  public cities;\n  public orderedProducts: CartItemModel[];\n  public timer:boolean;\n  public cart:CartModel;\n  public userInfo:UserModel = JSON.parse(localStorage.getItem(\"userInfo\"));\n  public totalPrice:number =  store.getState().totalToPay;\n  public completedOrder:OrderModel;\n  public cardIcon:string;\n  public baseUrl = baseUrl;\n\n  constructor(private dialog: MatDialog, private userServices:UserService,private _router:Router) { }\n\n  async ngOnInit() {\n    setTimeout(() => {\n      this.timer = true\n    }, 2000);\n    this.unsubscribe = store.subscribe(()=>{\n      this.orderedProducts = store.getState().cartItems;\n      this.cart = store.getState().cart;\n      this.completedOrder = store.getState().order;\n      this.totalPrice =  store.getState().totalToPay;\n    })\n    this.order.addressCity = this.userInfo.address.city;\n    this.order.addressStreet = this.userInfo.address.street;\n    this.cities = await this.userServices.getCityList();\n    this.orderedProducts = store.getState().cartItems;\n    this.completedOrder = store.getState().order;\n    this.cart = store.getState().cart;\n    if(this.orderedProducts.length === 0){\n      await this.userServices.checkIfCartExists().then(()=>{\n          if(this.cart === null){\n            this._router.navigate(['/home']);\n            return;\n          }\n          this.userServices.getExistingItemsToCart(this.cart._id);\n      })\n    }\n  }\n\n  ngOnDestroy(){\n    this.unsubscribe();\n  }\n\n  public shipDateChange(date:Date){\n    this.order.shippingDate = date;\n  }\n\n  public insertCredit(credit){\n    const firstDigit = credit.substr(0, 1);\n    this.cardIcon = `card${firstDigit}`;\n    if(this.creditCardFormControl.valid){\n      const lastDigits = credit.substr(credit.length - 4);\n      this.order.lastFourDigitsOfCard = lastDigits;\n    }\n  }\n\n  public isValid(){\n    return this.addressCityFormControl\n    &&this.shippingDateFormControl\n    && this.addressStreetFormControl\n    && this.creditCardFormControl\n  }\n\n\n  public async submitOrder(){\n    try{\n      if(!this.isValid()){\n        swal.fire({\n          title: 'Fix The Form',\n          text: \"Please fix the errors on the form\",\n          icon: 'error',\n          confirmButtonText: 'O.K'\n        })\n      }\n        this.order.totalPrice = this.totalPrice;\n        this.order.shoppingCartId = this.cart._id;\n        await this.userServices.createOrder(this.order).then(()=>{\n          this.dialog.open(PlaceOrderComponent,{\n            data:{\n              order: this.completedOrder,\n              products:this.orderedProducts,\n              cart:this.cart\n              }\n            });\n        });\n    }catch(err){\n      console.log(err.message)\n    }\n  }\n\n  dateValidator(control: FormControl) {\n    const  date = new Date(control.value)\n    if(date <= new Date()){\n      return  {\n        error:{\n          matchError:\"Cannot be past date\"\n        }\n      }\n    }\n    return null;\n     \n }\n\n\n  addressCityFormControl = new FormControl('',[\n    Validators.required,\n  ])\n\n  shippingDateFormControl = new FormControl('',[\n    Validators.required,\n    this.dateValidator\n  ])\n\n  addressStreetFormControl = new FormControl('',[\n    Validators.required,\n    Validators.minLength(3)\n  ])\n  creditCardFormControl = new FormControl('',[\n    Validators.required,\n    Validators.minLength(19),\n    Validators.maxLength(19),\n    Validators.pattern(\"^(?:4[0-9]{12}(?:[0-9]{3})?|[25][1-7][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$\")\n  ])\n\n\n\n\n\n  matcher = new MyErrorStateMatcher();\n }\n\n\n\n export class MyErrorStateMatcher implements ErrorStateMatcher {\n   isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n     const isSubmitted = form && form.submitted;\n     return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n   }\n}\n","<div class=\"loading\" *ngIf=\"!timer\">\n    <img src=\"../../../assets/images-and-gifs/shopping-loading.gif\">\n</div>\n\n<div *ngIf=\"timer\">\n    <div class=\"orderContainer\">\n        <h3>Review Your Order</h3>\n        <div class=\"productContainer\">\n            <div class=\"product\" *ngFor=\"let product of orderedProducts\">\n                <div class=\"productImages\" style=\"background-image: url({{baseUrl}}/uploads/product-imgs/{{product.productId.productImg}});\"></div>\n                <p class=\"pName\">{{product.productId.productName}}</p>\n                <br>\n                <p class=\"pDescription\">{{product.productId.productDescription}}</p>\n                <p class=\"pAmount\">Amount: {{product.amount}}</p>\n                <span>{{product.totalPrice}} &#8362;</span>\n            </div>\n        </div>\n    </div>\n    <form class=\"OrderDetails\" (ngSubmit)=\"submitOrder()\">\n        <h3>Please Enter shipping details and payment information</h3>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Select City</mat-label>\n            <mat-select [(ngModel)]=\"order.addressCity\" name=\"city\" [formControl]=\"addressCityFormControl\" [errorStateMatcher]=\"matcher\" required>\n                <mat-option *ngFor=\"let city of this.cities.result.records\" [value]=\"city.Name\">\n                    {{city.Name}}\n                </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"addressCityFormControl.hasError('required')\">\n                City Is required\n            </mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"example-full-width\" style=\"margin-left: 10px;\">\n            <mat-label>Enter Street Name</mat-label>\n            <input [(ngModel)]=\"order.addressStreet\" required type=\"text\" matInput [formControl]=\"addressStreetFormControl\" [errorStateMatcher]=\"matcher\" name=\"street\" placeholder=\"Ex. rothschild boulevard\">\n            <mat-error *ngIf=\"addressStreetFormControl.hasError('minlength')\">\n                Name Must be 3 characters or more.\n            </mat-error>\n            <mat-error *ngIf=\"addressStreetFormControl.hasError('required')\">\n                Last name is required.\n            </mat-error>\n        </mat-form-field>\n        <br>\n        <br>\n        <mat-form-field>\n            <input matInput [matDatepicker]=\"expiration1\" placeholder=\"Shipping Date\" [formControl]=\"shippingDateFormControl\" [errorStateMatcher]=\"matcher\" required (dateChange)=\"shipDateChange($event.value)\">\n            <mat-datepicker-toggle matSuffix [for]=\"expiration1\"></mat-datepicker-toggle>\n            <mat-datepicker #expiration1></mat-datepicker>\n        </mat-form-field>\n        <mat-error *ngIf=\"shippingDateFormControl.hasError('error')\">\n            Cannot be today or past date.\n        </mat-error>\n        <br>\n        <span class={{cardIcon}}></span>\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Enter Credit Card</mat-label>\n            <input (input)=\"insertCredit($event.target.value)\" required matInput [formControl]=\"creditCardFormControl\" [errorStateMatcher]=\"matcher\" type=\"number\" inputmode=\"numeric\" autocomplete=\"cc-number\" placeholder=\"xxxx xxxx xxxx xxxx\">\n        </mat-form-field>\n        <mat-error *ngIf=\"creditCardFormControl.hasError('minlength')\">\n            Invalid Credit card number\n        </mat-error>\n        <mat-error *ngIf=\"creditCardFormControl.hasError('maxlength')\">\n            Invalid Credit card number\n        </mat-error>\n        <mat-error *ngIf=\"creditCardFormControl.hasError('pattern')\">\n            Invalid Credit card number\n        </mat-error>\n        <br>\n        <button mat-button type=\"submit\" class=\"sendOrder\">Send Order</button>\n\n\n        <h3>Total To Pay - {{totalPrice}} &#8362;</h3>\n    </form>\n\n</div>","export class AddressModel {\n    constructor(\n        public city?:string,\n        public street?:string,\n        public zip?:number\n    ){}\n}\n","import { ProductModel } from './product-model';\n\nexport class CartItemModel {\n    constructor(\n        public _id?:string,\n        public amount?:number,\n        public totalPrice?:number,\n        public productId?:ProductModel,\n        public shoppingCartId?:string\n    ){\n        if(!productId){\n            this.productId = new ProductModel();\n        }\n    }\n}\n","export class CartModel {\n    constructor(public _id?:string, \n        public creationDate?:Date,\n        public userId?:string,\n        public payedAndCompleted?:boolean){}\n}\n","export class CategoryModel {\n    constructor(public categoryName?:string){}\n}\n","export class OrderModel {\n    constructor(\n        public _id?:string,\n        public totalPrice?:number,\n        public addressCity?:string,\n        public addressStreet?:string,\n        public shippingDate?:Date,\n        public orderCreationDate?:Date,\n        public lastFourDigitsOfCard?:number,\n        public userId?: string,\n        public shoppingCartId?:string\n    ){}\n}\n","export class ProductModel {\n    constructor(\n        public _id?:string,\n        public productName?:string,\n        public productDescription?:string,\n        public productPrice?:number,\n        public productImg?:string,\n        public categoryId?:string){}\n}\n","import {AddressModel} from './address'\nexport class UserModel {\n    public constructor(\n        public _id?:string,\n        public usernameEmail?:string,\n        public password?:string,\n        public firstName?:string,\n        public lastName?:string,\n        public IdentificationNumber?:number,\n        public address?: AddressModel,\n        public profileImg?:string,\n        public isAdmin?:string\n        ){\n            if(!address){\n                this.address = new AddressModel();\n            }\n        }\n}\n","export enum ActionType{\r\n    LoadUserInfo,\r\n    AddProduct,\r\n    GetAllProducts,\r\n    DeleteProduct,\r\n    ModifyProduct,\r\n    isAdmin,\r\n    CreateCartInStore,\r\n    AddItemToCart,\r\n    LoadExistingItemsToCart,\r\n    RemoveItemFromCart,\r\n    RemoveCart,\r\n    GetOrderInfo,\r\n    getAllOrders,\r\n    UpdateUserInfo\r\n}","import {UserModel} from '../models/user-info'\r\nimport { ProductModel } from '../models/product-model';\r\nimport { CartModel } from '../models/cart-model';\r\nimport { CartItemModel } from '../models/cart-item-model';\r\nimport { OrderModel } from '../models/order-model';\r\n\r\n\r\nexport class AppState{\r\n    public isAdmin: boolean;\r\n    public user: UserModel;\r\n    public token:string;\r\n    public products:ProductModel[];\r\n    public cart:CartModel;\r\n    public cartItems: CartItemModel[] = [];\r\n    public totalToPay:number = 0;\r\n    public order:OrderModel;\r\n    public orders:OrderModel[];\r\n    public constructor(){\r\n        const json = localStorage.getItem(\"userInfo\");\r\n        if(json){\r\n            const appState = JSON.parse(json);\r\n            this.user = appState\r\n        }else{\r\n            this.user = null;\r\n        }\r\n    }\r\n}","import {Store} from 'redux'\r\nimport {AppState} from './app-state'\r\nimport {Action} from './action'\r\n\r\n\r\n\r\nexport const saveToSessionStorage = store => next =>action=>{\r\n             // here we are before the reducer\r\n             next(action);\r\n             localStorage.setItem(\"userInfo\",JSON.stringify(store.getState().user))\r\n}","import { AppState } from \"./app-state\";\r\nimport { Action } from \"./action\";\r\nimport { ActionType } from \"./actionType\";\r\nimport { CartModel } from '../models/cart-model';\r\n\r\nexport function reducer(currentState:AppState,action:Action):AppState{\r\n    const newState={...currentState} \r\n    switch(action.type){\r\n        case ActionType.LoadUserInfo:\r\n            newState.user = action.payload.user\r\n            newState.token = action.payload.token\r\n            localStorage.setItem(\"token\",JSON.stringify(action.payload.token));\r\n            break;\r\n        case ActionType.UpdateUserInfo:\r\n            newState.user = action.payload;\r\n            localStorage.setItem(\"userInfo\",JSON.stringify(action.payload));\r\n            break;\r\n\r\n        case ActionType.AddProduct:\r\n            newState.products.push(action.payload.newProduct);\r\n            break;\r\n\r\n        case ActionType.GetAllProducts:\r\n            newState.products = action.payload.products;\r\n            break;\r\n\r\n        case ActionType.DeleteProduct: \r\n            const index = newState.products.findIndex(p => p._id === action.payload);\r\n            newState.products.splice(index, 1);\r\n            break;\r\n\r\n        case ActionType.ModifyProduct:\r\n            const ModifyIndex = newState.products.findIndex(p => p._id === action.payload.product._id);\r\n            newState.products[ModifyIndex] = action.payload.product;\r\n            break;\r\n\r\n        case ActionType.isAdmin:\r\n            newState.isAdmin = action.payload\r\n            break;\r\n\r\n        case ActionType.CreateCartInStore:\r\n            newState.cart = action.payload.cart;\r\n            break;\r\n\r\n        case ActionType.LoadExistingItemsToCart:\r\n            newState.cartItems = action.payload;\r\n            for(let item of newState.cartItems){\r\n                newState.totalToPay = newState.totalToPay + item.totalPrice;\r\n            }\r\n            break;\r\n        \r\n        case ActionType.AddItemToCart:\r\n            newState.totalToPay = newState.totalToPay + action.payload.updatedCart.totalPrice;\r\n            newState.cartItems.push(action.payload.updatedCart);\r\n            break;\r\n            \r\n        case ActionType.RemoveItemFromCart:\r\n            newState.totalToPay = newState.totalToPay - action.payload.price\r\n            const itemIndex = newState.cartItems.findIndex(i => i._id === action.payload._id);\r\n            newState.cartItems.splice(itemIndex, 1);\r\n            break;\r\n\r\n        case ActionType.RemoveCart:\r\n            sessionStorage.clear();\r\n            newState.cart = null;\r\n            newState.cartItems = [];\r\n            newState.totalToPay = 0;\r\n            break;\r\n\r\n        case ActionType.GetOrderInfo:\r\n            newState.order = action.payload;\r\n            break;\r\n\r\n        case ActionType.getAllOrders:\r\n            for(let item of action.payload){\r\n                item.orderCreationDate = item.orderCreationDate\r\n                .substring(0, item.orderCreationDate.indexOf('T'));\r\n                item.shippingDate= item.shippingDate\r\n                .substring(0, item.shippingDate.indexOf('T'));\r\n            }\r\n            newState.orders = action.payload;\r\n            break;\r\n    }\r\n\r\n    return newState\r\n}","import {createStore, applyMiddleware} from 'redux'\r\nimport { reducer } from './reducer'\r\nimport { AppState } from './app-state'\r\nimport {saveToSessionStorage} from './middleware'\r\n\r\n\r\nexport const store = createStore(reducer,new AppState(),applyMiddleware(saveToSessionStorage));\r\n","import {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router} from '@angular/router';\nimport {UserService} from '../services/user.service'\nimport { Injectable } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuardService implements  CanActivate {\n\n\n  constructor(private userServices:UserService,private _router:Router){}\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\n  const token = !!localStorage.getItem(\"token\");\n  try{\n    if(token){\n      return await this.userServices.adminGuard().then(result=>{\n        if(result){\n          return true;\n        }\n      });\n    }else{\n      this._router.navigate(['/login'])\n      return false\n    }\n  }catch(err){\n    if(err.status === 403){\n      this._router.navigate(['/home'])\n    }\n  }\n};\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http' \nimport { ActionType } from '../redux/actionType';\nimport { store } from '../redux/store';\nimport {baseUrl} from 'src/environments/environment' \n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n\n  public headers = new HttpHeaders().set(\"authorization\", \"Bearer \" + localStorage.getItem(\"token\"));\n\n  constructor(private http:HttpClient) { }\n\n\n\n\n  public addProduct(product,fileToUpload: File){\n    let formData: FormData = new FormData();\n    formData.append(\"file\", fileToUpload ,fileToUpload.name);\n    formData.append(\"info\",JSON.stringify(product))\n    return this.http.post(baseUrl+\"api/admin/addProduct\",formData,\n    {headers:this.headers}).subscribe(productInfo=>{\n      const action = { type: ActionType.AddProduct, payload: productInfo };\n      store.dispatch(action);\n    });\n  }\n\n  public deleteProduct(_id){\n    return this.http.delete(`${baseUrl}api/admin/deleteProduct/${_id}`,{headers:this.headers}).subscribe(()=>{\n      const action = { type: ActionType.DeleteProduct, payload: _id };\n      store.dispatch(action);\n    });\n  }\n\n  public modifyProduct(product,fileToUpload: File){\n    let formData: FormData = new FormData();\n    if(fileToUpload){\n      formData.append(\"file\", fileToUpload ,fileToUpload.name);\n    } \n    formData.append(\"info\",JSON.stringify(product));\n    this.http.patch(`${baseUrl}api/admin/update/${product._id}`,formData,{headers:this.headers}).toPromise().then(()=>{\n      return this.http.get(`${baseUrl}api/admin/getOneProduct/${product._id}`,{headers:this.headers}).subscribe(product=>{\n        const action = { type: ActionType.ModifyProduct, payload: product };\n        store.dispatch(action);\n      })\n    })\n  }\n\n  public addCategory(category){\n    this.http.post(`${baseUrl}api/admin/postCategory`,category,{headers:this.headers}).toPromise();\n  }\n\n  public getCategories(){\n    return this.http.get(`${baseUrl}api/admin/getCategories`,{headers:this.headers}).toPromise();\n  }\n}\n","import {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router} from '@angular/router';\nimport {UserService} from '../services/user.service'\nimport { Injectable } from '@angular/core';\n\n\n@Injectable()\n\nexport class AlreadyLoggedService implements CanActivate{\n  constructor(private userServices:UserService,private _router:Router){}\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\n    const token = !!localStorage.getItem(\"token\");\n    try{\n      if(token){\n        return await this.userServices.loginGuard().then(result=>{\n          if(result){\n            return this._router.navigate(['/home']);\n          }\n        });\n      }else{\n        return true;\n      }\n    }catch(err){\n      this._router.navigate(['/login'])\n    }\n  };\n}\n","import {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router} from '@angular/router';\nimport {UserService} from '../services/user.service'\nimport { Injectable } from '@angular/core';\n\n\n@Injectable()\n\nexport class LoginGuardService implements CanActivate{\n  constructor(private userServices:UserService,private _router:Router){}\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\n    const token = !!localStorage.getItem(\"token\");\n    try{\n      if(token){\n        return await this.userServices.loginGuard().then(result=>{\n          if(result){\n            return true;\n          }\n        });\n      }else{\n        this._router.navigate(['/login'])\n        return false;\n      }\n    }catch(err){\n      this._router.navigate(['/login'])\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport pdfMake from 'pdfmake/build/pdfmake';\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\nimport {OrderModel} from '../models/order-model'\nimport {CartItemModel} from '../models/cart-item-model'\npdfMake.vfs = pdfFonts.pdfMake.vfs;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PdfGenService {\n\n  constructor() { }\n\n\n  async generatePdf(order:OrderModel,itemArray:CartItemModel[]){\n    const documentDefinition = { content: [\n      {\n        image: await this.getBase64ImageFromURL('assets/images-and-gifs/SiteLogo.png'),\n        width:75,\n        height:100,\n        alignment: 'center',\n        margin: [0, 0, 0, 5]\n      },\n      {\n        text: `Order number ${order._id}`,\n        bold: true,\n        fontSize: 15,\n        alignment: 'center',\n        margin: [0, 0, 0, 20]\n      },\n      itemArray.map(item=>{\n        return { text: `x ${item.amount} - ${item.productId.productName} - ${item.totalPrice}  \\u20AA\n                -------------------------------------------------------`\n          ,fontSize: 8, alignment: 'left',margin: [0, 0, 0, 10]}\n      }),\n      {\n        text: `Total: ${order.totalPrice} \\u20AA`,\n        fontSize: 12,\n      }\n    ] };\n    pdfMake.createPdf(documentDefinition).open();\n   }\n   //adds image to the pdf file.\n   getBase64ImageFromURL(url) {\n    return new Promise((resolve, reject) => {\n      let img = new Image();\n      img.setAttribute(\"crossOrigin\", \"anonymous\");\n      img.onload = () => {\n        let canvas = document.createElement(\"canvas\");\n        canvas.width = img.width;\n        canvas.height = img.height;\n        let ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n        let dataURL = canvas.toDataURL(\"image/png\");\n        resolve(dataURL);\n      };\n      img.onerror = error => {\n        reject(error);\n      };\n      img.src = url;\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http' \nimport { ProductModel } from '../models/product-model';\nimport { ActionType } from '../redux/actionType';\nimport { store } from '../redux/store';\nimport { Router } from '@angular/router';\nimport { CartModel } from '../models/cart-model';\nimport { CartItemModel } from '../models/cart-item-model';\nimport swal from 'sweetalert2';\nimport { OrderModel } from '../models/order-model';\nimport {baseUrl} from 'src/environments/environment' \nimport { UserModel } from '../models/user-info';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  public headers = new HttpHeaders().set(\"authorization\", \"Bearer \" + localStorage.getItem(\"token\"));\n\n  constructor(private http:HttpClient,private _router:Router) { }\n\n  //admin check for store, also logs out any user with an expired session\n  public isAdmin(){\n    const headers = new HttpHeaders().set(\"authorization\", \"Bearer \" + localStorage.getItem(\"token\"));\n    return this.http.get(`${baseUrl}api/auth/is-admin`,{headers:headers})\n    .subscribe(\n      next=>{\n        const action = { type: ActionType.isAdmin, payload: next };\n        store.dispatch(action)\n      }\n      ,error=>{\n        if(error.error === 'Your Logging session has expired'){\n          swal.fire({\n            title: 'Your Logging session has expired',\n            text: \"Please Login again\",\n            icon: 'error',\n          })\n          localStorage.clear();\n          this._router.navigate([\"/login\"])\n        }}\n      ,()=>{});\n  }\n  // login check for the login canActivate\n  public loginGuard(){\n    const headers = new HttpHeaders().set(\"authorization\", \"Bearer \" + localStorage.getItem(\"token\"));\n    return this.http.get(`${baseUrl}api/auth/is-loggedIn`,{headers:headers}).toPromise();\n  }\n\n\n  // admin check for admin canActivate\n  public adminGuard(){\n    const headers = new HttpHeaders().set(\"authorization\", \"Bearer \" + localStorage.getItem(\"token\"));\n    return this.http.get(`${baseUrl}api/auth/is-admin`,{headers:headers}).toPromise();\n  }\n\n  public Login(credentials){\n    return this.http.post(`${baseUrl}api/auth/login`,credentials).subscribe(\n      userInfo=>{\n      const action = { type: ActionType.LoadUserInfo, payload: userInfo };\n      store.dispatch(action);\n      localStorage.setItem('firstLogin','true');\n      this.headers = new HttpHeaders().set(\"authorization\", \"Bearer \" + localStorage.getItem(\"token\"));\n      this.isAdmin()\n      this._router.navigate(['/home'])\n    },err=>{\n      if(err.status === 401){\n        swal.fire({\n          title: 'Wrong Credentials',\n          text: \"Please try again :)\",\n          icon: 'error',\n        })\n      }\n    });\n  }\n\n  public changeUserInformation(user:UserModel,fileToUpload:File){\n    let formData: FormData = new FormData();\n    if(fileToUpload){\n      formData.append(\"file\", fileToUpload ,fileToUpload.name);\n    } \n    formData.append(\"info\",JSON.stringify(user))\n    return this.http.patch(`${baseUrl}api/auth/updateUserInfo/${user._id}`,formData,{headers:this.headers}).subscribe(user=>{\n      const action = { type: ActionType.UpdateUserInfo, payload: user };\n      store.dispatch(action);\n    })\n  }\n\n  //validate user existing in DB\n  public validateUser(username,password){\n    const credentials = new UserModel(null,username,password)\n    return this.http.post(`${baseUrl}api/auth/validUserInfo`,credentials,{headers:this.headers}).toPromise();\n  }\n\n  //validates an existing username in DB for registration \n  public validateRegister(userName){\n    return this.http.get(`${baseUrl}api/auth/validateInfo/${userName}`).toPromise()\n  }\n\n\n  public register(userInfo,fileToUpload:File){\n    let formData: FormData = new FormData();\n    if(fileToUpload){\n      formData.append(\"file\", fileToUpload ,fileToUpload.name);\n    } \n    formData.append(\"info\",JSON.stringify(userInfo))\n    return this.http.post(`${baseUrl}api/auth/register`,formData).subscribe(userAnswer=>{\n      const action = { type: ActionType.LoadUserInfo, payload: userAnswer };\n      store.dispatch(action);\n      this.headers = new HttpHeaders().set(\"authorization\", \"Bearer \" + localStorage.getItem(\"token\"));\n      this.isAdmin()\n      this._router.navigate(['/home'])\n    });\n  }\n  public getCityList(){\n    return this.http.get(\"https://data.gov.il/api/3/action/datastore_search?resource_id=eb548bfa-a7ba-45c4-be7d-2e8271f55f70&\").toPromise();\n  }\n\n  public getProducts(){\n    return this.http.get<ProductModel[]>(`${baseUrl}api/user/getProducts`,{headers:this.headers}).subscribe(products=>{\n      const action = { type: ActionType.GetAllProducts, payload: products };\n      store.dispatch(action);\n    });\n  }\n\n  public getOrders(){\n    return this.http.get<OrderModel[]>(`${baseUrl}api/user/getOrders`,{headers:this.headers}).subscribe(orders=>{\n      const action = { type: ActionType.getAllOrders, payload: orders };\n      store.dispatch(action);\n    });\n  }\n\n  public checkIfCartExists(){\n    return this.http.get<CartModel>(`${baseUrl}api/user/getCart`,{headers:this.headers}).toPromise().then(cart=>{\n        const action = { type: ActionType.CreateCartInStore, payload: cart };\n        store.dispatch(action);\n    })\n  }\n\n  public createCart(){\n    return this.http.post<CartModel>\n    (`${baseUrl}api/user/createCart`,'',{headers:this.headers}).toPromise().then(cart=>{\n      const action = { type: ActionType.CreateCartInStore, payload: cart };\n      store.dispatch(action);\n    })\n  }\n\n  public addToCart(cart_id,product_id,item){\n    return this.http.post<CartItemModel>\n    (`${baseUrl}api/user/addItemToCart/${cart_id}/${product_id}`,item\n    ,{headers:this.headers}).subscribe(product=>{\n      const action = { type: ActionType.AddItemToCart, payload: product};\n      store.dispatch(action);\n    });\n  }\n\n  public removeFromCart(item_id,totalPrice,cart_id){\n    return this.http.delete(`${baseUrl}api/user/removeItemFromCart/${item_id}`,{headers:this.headers})\n    .subscribe(\n      next=>{\n        const action = { type: ActionType.RemoveItemFromCart, payload: {_id:item_id,price:totalPrice} };\n        store.dispatch(action);\n        if(store.getState().cartItems.length === 0){\n          this.removeCart(cart_id);\n        }\n      }\n      ,error=>{}\n      ,()=>{});\n  }\n\n  public getExistingItemsToCart(cart_id){\n    return this.http.get<CartItemModel[]>(`${baseUrl}api/user/itemsInCart/${cart_id}`,{headers:this.headers}).subscribe(items=>{\n      const action = { type: ActionType.LoadExistingItemsToCart, payload: items };\n      store.dispatch(action);\n    });\n  }\n\n  public getCompletedOrderItems(cart_id){\n    return this.http.get<CartItemModel[]>(`${baseUrl}api/user/itemsInCart/${cart_id}`,{headers:this.headers}).toPromise()\n  }\n\n  public removeCart(cart_id){\n    return this.http.delete(`${baseUrl}api/user/removeCart/${cart_id}`,{headers:this.headers})\n    .subscribe(\n      next=>{\n        const action = { type: ActionType.RemoveCart };\n        store.dispatch(action);\n      }\n      ,error=>{}\n      ,()=>{});\n  }\n\n\n  public createOrder(order:OrderModel){\n    return this.http.post<OrderModel>(`${baseUrl}api/user/createOrder`,order,{headers:this.headers}).toPromise().then(async addedOrder=>{\n      sessionStorage.clear();\n      const action = { type: ActionType.GetOrderInfo, payload:addedOrder};\n      store.dispatch(action);\n    });\n  }\n\n  public completeOrder(cart:CartModel){\n    return this.http.patch(`${baseUrl}api/user/completeCart`,cart,{headers:this.headers}).toPromise().then(()=>{\n        const action = { type: ActionType.RemoveCart };\n        store.dispatch(action);\n      })\n  }\n\n  public searchProduct(text: string): Promise<ProductModel[]> {\n    return this.http.get<ProductModel[]>(`${baseUrl}api/user/search/${text}`).toPromise();\n  }\n  public searchFilteredProduct(text: string,categoryArray): Promise<ProductModel[]> {\n    return this.http.post<ProductModel[]>(`${baseUrl}api/user/searchFilteredProduct/${text}`,categoryArray).toPromise();\n  }\n\n  public getProductsByCategory(categoryArray): Promise<ProductModel[]> {\n    return this.http.post<ProductModel[]>(`${baseUrl}api/user/getProductsByCategory`,categoryArray).toPromise();\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n\nexport const baseUrl = \"http://localhost:3000/\";\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}